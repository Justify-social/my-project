{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 0,
    "pending": 0,
    "failures": 4,
    "start": "2025-05-24T09:57:40.666Z",
    "end": "2025-05-24T09:59:54.729Z",
    "duration": 134063,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d82832c2-588e-4d13-b567-5079389d9e8b",
      "title": "",
      "fullFile": "config/cypress/e2e/shared/ssot-demo.cy.js",
      "file": "config/cypress/e2e/shared/ssot-demo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d1612d42-9acb-4672-bf5f-e30be6cf918e",
          "title": "SSOT Pattern Demo - Complete User Workflow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5062e2b7-4774-4298-83ac-eec1e4df2af5",
              "title": "üéØ Complete User Journey - SSOT Implementation Showcase",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should demonstrate complete workflow: Sign-in ‚Üí Dashboard ‚Üí Campaigns ‚Üí CRUD Operations",
                  "fullTitle": "SSOT Pattern Demo - Complete User Workflow üéØ Complete User Journey - SSOT Implementation Showcase should demonstrate complete workflow: Sign-in ‚Üí Dashboard ‚Üí Campaigns ‚Üí CRUD Operations",
                  "timedOut": null,
                  "duration": 11537,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// === STEP 1: Authentication (Unauthenticated Test Setup) ===\ncy.log('üîê **STEP 1: Authentication Flow**');\n_testHelpers.TestSetup.setupUnauthenticatedTest();\nsignInPage.logAction('Starting authentication demo').visit().expectToBeOnSignInPage();\n// Mock successful authentication\ncy.intercept('POST', '**/v1/client/sign_ins', {\n  statusCode: 200,\n  body: {\n    object: 'sign_in',\n    status: 'complete',\n    created_session_id: 'sess_demo123'\n  }\n}).as('signInSuccess');\ncy.intercept('GET', '**/api/user**', {\n  statusCode: 200,\n  body: testUser\n}).as('userSession');\n// Perform authentication steps\nsignInPage.fillCredentials('demo@example.com', 'demopassword').submit();\n// Wait for auth to complete\n_testHelpers.WaitUtilities.waitForApiCalls(['@signInSuccess', '@userSession']);\n// === STEP 2: Dashboard Navigation (Authenticated Test Setup) ===\ncy.log('üè† **STEP 2: Dashboard Navigation**');\n_testHelpers.TestSetup.setupAuthenticatedTest();\n// Mock dashboard data\ncy.intercept('GET', '**/api/dashboard**', {\n  statusCode: 200,\n  body: {\n    metrics: _testHelpers.TestDataGenerators.generateMetrics({\n      totalCampaigns: 15,\n      liveCampaigns: 3,\n      creditsAvailable: 500\n    }),\n    upcomingCampaigns: testCampaigns.slice(0, 1),\n    calendarEvents: []\n  }\n}).as('dashboardData');\ndashboardPage.logAction('Navigating to dashboard').visit().expectDashboardLoaded().expectUserNameInTitle(testUser.firstName);\n_testHelpers.WaitUtilities.waitForApiCalls('@dashboardData');\n// Verify dashboard functionality\ndashboardPage.expectSearchFunctionality().expectCalendarVisible().expectCampaignsVisible();\n// Performance check\ndashboardPage.measurePagePerformance(3000);\n// === STEP 3: Navigate to Campaigns ===\ncy.log('üìã **STEP 3: Campaign Management**');\n// Setup campaign API interceptors\ncy.intercept('GET', '**/api/campaigns**', {\n  statusCode: 200,\n  body: {\n    campaigns: testCampaigns,\n    total: testCampaigns.length\n  }\n}).as('campaignsList');\ndashboardPage.logAction('Navigating to campaigns').navigateToCampaigns();\n_testHelpers.AssertionHelpers.expectUrlToContain('/campaigns');\n// === STEP 4: Campaign List Operations ===\ncy.log('üîß **STEP 4: Campaign Operations**');\n_testHelpers.WaitUtilities.waitForApiCalls('@campaignsList');\ncampaignsPage.expectToBeOnCampaignsPage().expectPageTitle().expectTableVisible();\n// Verify all campaigns are displayed\ntestCampaigns.forEach(campaign => {\n  campaignsPage.expectCampaignVisible(campaign.id).expectCampaignName(campaign.id, campaign.name).expectCampaignStatus(campaign.id, campaign.status);\n});\n// === STEP 5: Campaign CRUD Operations ===\ncy.log('‚úèÔ∏è **STEP 5: CRUD Operations Demo**');\nconst targetCampaign = testCampaigns[0];\n// VIEW Operation\ncy.intercept('GET', `**/api/campaigns/${targetCampaign.id}`, {\n  statusCode: 200,\n  body: targetCampaign\n}).as('campaignDetails');\ncampaignsPage.logAction('Testing VIEW operation', targetCampaign.name).viewCampaign(targetCampaign.id);\n_testHelpers.WaitUtilities.waitForApiCalls('@campaignDetails');\n_testHelpers.AssertionHelpers.expectUrlToContain(`/campaigns/${targetCampaign.id}`);\n// Navigate back to campaigns list\ncy.go('back');\n_testHelpers.AssertionHelpers.expectUrlToContain('/campaigns');\n// DUPLICATE Operation\nconst duplicatedCampaignName = `${targetCampaign.name} (Demo Copy)`;\ncy.intercept('POST', '**/api/campaigns/duplicate', {\n  statusCode: 201,\n  body: {\n    id: 'demo-duplicated-id',\n    message: 'Campaign duplicated successfully'\n  }\n}).as('duplicateCampaign');\ncampaignsPage.logAction('Testing DUPLICATE operation', targetCampaign.name).completeCampaignDuplication(targetCampaign.id, duplicatedCampaignName);\n_testHelpers.WaitUtilities.waitForApiCalls('@duplicateCampaign');\n_testHelpers.AssertionHelpers.expectSuccessToast('Campaign duplicated successfully');\n// === STEP 6: Advanced Features Demo ===\ncy.log('üöÄ **STEP 6: Advanced Features**');\n// Sorting Demo\nconst sortedCampaigns = [...testCampaigns].sort((a, b) => a.name.localeCompare(b.name));\ncy.intercept('GET', '**/api/campaigns**', {\n  statusCode: 200,\n  body: {\n    campaigns: sortedCampaigns,\n    total: sortedCampaigns.length\n  }\n}).as('sortedCampaigns');\ncampaignsPage.logAction('Testing SORTING functionality').sortByCampaignName();\n_testHelpers.WaitUtilities.waitForApiCalls('@sortedCampaigns');\n// Filtering Demo\nconst searchTerm = 'Demo';\nconst filteredCampaigns = testCampaigns.filter(c => c.name.includes(searchTerm));\ncy.intercept('GET', '**/api/campaigns**', {\n  statusCode: 200,\n  body: {\n    campaigns: filteredCampaigns,\n    total: filteredCampaigns.length\n  }\n}).as('filteredCampaigns');\ncampaignsPage.logAction('Testing FILTERING functionality', searchTerm).searchCampaigns(searchTerm);\n_testHelpers.WaitUtilities.waitForApiCalls('@filteredCampaigns');\n// Verify filtered results\nfilteredCampaigns.forEach(campaign => {\n  campaignsPage.expectCampaignVisible(campaign.id);\n});\n// === STEP 7: Error Handling Demo ===\ncy.log('‚ö†Ô∏è **STEP 7: Error Handling**');\n// Simulate API error\ncy.intercept('GET', '**/api/campaigns**', {\n  statusCode: 500,\n  body: {\n    error: 'Demo API error'\n  }\n}).as('campaignsError');\n// Refresh page to trigger error\ncy.reload();\n_testHelpers.WaitUtilities.waitForApiCalls('@campaignsError');\n// Should handle error gracefully\ncampaignsPage.expectDataCyVisible('campaigns-list');\n// === STEP 8: Performance and Accessibility ===\ncy.log('üìä **STEP 8: Quality Checks**');\n// Reset to working state\ncy.intercept('GET', '**/api/campaigns**', {\n  statusCode: 200,\n  body: {\n    campaigns: testCampaigns,\n    total: testCampaigns.length\n  }\n}).as('workingCampaigns');\ncampaignsPage.visit();\n_testHelpers.WaitUtilities.waitForApiCalls('@workingCampaigns');\n// Performance check\ncampaignsPage.logAction('Running performance checks').measurePagePerformance(3000);\n// Accessibility check\ncampaignsPage.logAction('Running accessibility checks').checkAccessibility();\n// === STEP 9: Responsive Design Demo ===\ncy.log('üì± **STEP 9: Responsive Design**');\n// Mobile view\ncy.viewport('iphone-x');\ncampaignsPage.logAction('Testing mobile responsiveness').expectDataCyVisible('campaigns-table').expectDataCyVisible('campaigns-header');\n// Tablet view\ncy.viewport('ipad-2');\ncampaignsPage.logAction('Testing tablet responsiveness').expectTableVisible().expectDataCyVisible('filters-button');\n// Desktop view\ncy.viewport(1280, 720);\n// === STEP 10: Cleanup and State Management ===\ncy.log('üßπ **STEP 10: Cleanup Demo**');\ncampaignsPage.logAction('Demonstrating cleanup patterns').resetPageState();\n// Verify clean state\ncy.getAllLocalStorage().should('be.empty');\ncy.getAllCookies().should('have.length', 0);\ncampaignsPage.logAction('SSOT Demo completed successfully! üéâ');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: expected '<input#password-field.cl-formFieldInput.cl-input.cl-formFieldInput__password.cl-input__password.block.w-full.rounded-md.border.border-divider.shadow-sm.focus:border-accent.focus:ring-accent.sm:text-sm.py-2.px-3.üîíÔ∏è.cl-internal-1gh8c2t>' to be 'visible'\n\nThis element `<input#password-field.cl-formFieldInput.cl-input.cl-formFieldInput__password.cl-input__password.block.w-full.rounded-md.border.border-divider.shadow-sm.focus:border-accent.focus:ring-accent.sm:text-sm.py-2.px-3.üîíÔ∏è.cl-internal-1gh8c2t>` is not visible because its parent `<div.cl-formFieldRow.cl-formFieldRow__password.üîíÔ∏è.cl-internal-1kxguf4>` has CSS property: `opacity: 0`",
                    "estack": "AssertionError: Timed out retrying after 10000ms: expected '<input#password-field.cl-formFieldInput.cl-input.cl-formFieldInput__password.cl-input__password.block.w-full.rounded-md.border.border-divider.shadow-sm.focus:border-accent.focus:ring-accent.sm:text-sm.py-2.px-3.üîíÔ∏è.cl-internal-1gh8c2t>' to be 'visible'\n\nThis element `<input#password-field.cl-formFieldInput.cl-input.cl-formFieldInput__password.cl-input__password.block.w-full.rounded-md.border.border-divider.shadow-sm.focus:border-accent.focus:ring-accent.sm:text-sm.py-2.px-3.üîíÔ∏è.cl-internal-1gh8c2t>` is not visible because its parent `<div.cl-formFieldRow.cl-formFieldRow__password.üîíÔ∏è.cl-internal-1kxguf4>` has CSS property: `opacity: 0`\n    at SignInPage.fillCredentials (webpack://my-project/./config/cypress/support/page-objects/auth/SignInPage.js:47:38)\n    at Context.eval (webpack://my-project/./config/cypress/e2e/shared/ssot-demo.cy.js:68:17)",
                    "diff": null
                  },
                  "uuid": "d6efd582-77db-4e39-8e86-1d350c78b522",
                  "parentUUID": "5062e2b7-4774-4298-83ac-eec1e4df2af5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "d6efd582-77db-4e39-8e86-1d350c78b522"
              ],
              "pending": [],
              "skipped": [],
              "duration": 11537,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c17f260a-16e4-4833-b973-26b08d9290e0",
              "title": "üîç SSOT Pattern Verification Tests",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should verify all SSOT utilities are working correctly",
                  "fullTitle": "SSOT Pattern Demo - Complete User Workflow üîç SSOT Pattern Verification Tests should verify all SSOT utilities are working correctly",
                  "timedOut": null,
                  "duration": 10125,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Test ApiInterceptors\n_testHelpers.ApiInterceptors.setupAllInterceptors();\ncy.get('@clerkClient').should('exist');\ncy.get('@dashboardData').should('exist');\ncy.get('@campaignsList').should('exist');\n// Test TestDataGenerators\nconst generatedCampaign = _testHelpers.TestDataGenerators.generateCampaign();\nexpect(generatedCampaign).to.have.property('id');\nexpect(generatedCampaign).to.have.property('name');\nexpect(generatedCampaign).to.have.property('status');\n// Test AssertionHelpers\ndashboardPage.visit();\n_testHelpers.AssertionHelpers.expectUrlToContain('/dashboard');\n_testHelpers.AssertionHelpers.expectElementVisible('dashboard-content');\ncy.log('‚úÖ All SSOT utilities verified successfully');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: expected null to exist",
                    "estack": "AssertionError: Timed out retrying after 10000ms: expected null to exist\n    at Context.eval (webpack://my-project/./config/cypress/e2e/shared/ssot-demo.cy.js:315:35)",
                    "diff": null
                  },
                  "uuid": "ffda197b-90de-456d-b6ce-661c91244c53",
                  "parentUUID": "c17f260a-16e4-4833-b973-26b08d9290e0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should verify page object inheritance and BasePage functionality",
                  "fullTitle": "SSOT Pattern Demo - Complete User Workflow üîç SSOT Pattern Verification Tests should verify page object inheritance and BasePage functionality",
                  "timedOut": null,
                  "duration": 10559,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Test BasePage methods\ndashboardPage.visit().logAction('Testing BasePage methods').expectDataCyVisible('dashboard-content').takeScreenshot('ssot-demo-basepage');\n// Test method chaining\ndashboardPage.clickByDataCy('new-campaign-button').expectUrl('/campaigns/wizard');\ncy.log('‚úÖ Page object inheritance verified successfully');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-cy=\"dashboard-content\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-cy=\"dashboard-content\"]`, but never found it.\n    at DashboardPage.visit (webpack://my-project/./config/cypress/support/page-objects/dashboard/DashboardPage.js:57:41)\n    at Context.eval (webpack://my-project/./config/cypress/e2e/shared/ssot-demo.cy.js:336:17)",
                    "diff": null
                  },
                  "uuid": "ff652082-6b15-421a-95e7-4ca8a2c74671",
                  "parentUUID": "c17f260a-16e4-4833-b973-26b08d9290e0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should verify dynamic waiting and performance patterns",
                  "fullTitle": "SSOT Pattern Demo - Complete User Workflow üîç SSOT Pattern Verification Tests should verify dynamic waiting and performance patterns",
                  "timedOut": null,
                  "duration": 10671,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Test WaitUtilities\ncy.intercept('GET', '**/api/dashboard**', {\n  statusCode: 200,\n  body: _testHelpers.TestDataGenerators.generateMetrics(),\n  delay: 1000\n}).as('slowDashboard');\ndashboardPage.visit();\n_testHelpers.WaitUtilities.waitForApiCalls('@slowDashboard');\n_testHelpers.WaitUtilities.waitForPageLoad();\n// Test performance monitoring\ndashboardPage.measurePagePerformance(3000);\ncy.log('‚úÖ Dynamic waiting and performance patterns verified');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-cy=\"dashboard-content\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-cy=\"dashboard-content\"]`, but never found it.\n    at DashboardPage.visit (webpack://my-project/./config/cypress/support/page-objects/dashboard/DashboardPage.js:57:41)\n    at Context.eval (webpack://my-project/./config/cypress/e2e/shared/ssot-demo.cy.js:357:26)",
                    "diff": null
                  },
                  "uuid": "c553c9d9-807d-4d0b-8e04-da0ecf2d9126",
                  "parentUUID": "c17f260a-16e4-4833-b973-26b08d9290e0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "ffda197b-90de-456d-b6ce-661c91244c53",
                "ff652082-6b15-421a-95e7-4ca8a2c74671",
                "c553c9d9-807d-4d0b-8e04-da0ecf2d9126"
              ],
              "pending": [],
              "skipped": [],
              "duration": 31355,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "config/cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}