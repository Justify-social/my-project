{
  "stats": {
    "suites": 6,
    "tests": 19,
    "passes": 17,
    "pending": 0,
    "failures": 2,
    "start": "2025-05-29T11:21:39.921Z",
    "end": "2025-05-29T11:22:42.140Z",
    "duration": 62219,
    "testsRegistered": 19,
    "passPercent": 89.47368421052632,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9657229e-9f37-4831-9cae-1434c274450a",
      "title": "",
      "fullFile": "config/cypress/e2e/admin/ui-components-button.cy.js",
      "file": "config/cypress/e2e/admin/ui-components-button.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a0c61cf-1e28-4717-ad1d-f23bd4a877de",
          "title": "UI Components - Button Component Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "507b57a5-7d9d-450a-ae46-c6b167512150",
              "title": "Button Component - Basic Functionality",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display button component preview page correctly",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Basic Functionality should display button component preview page correctly",
                  "timedOut": null,
                  "duration": 2834,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Navigate to Button component preview\nuiComponentsPage.visitComponent('Button');\n// Verify page structure\nuiComponentsPage.expectToBeOnComponentPreview('Button').expectComponentMetadata({\n  title: 'Button',\n  description: 'Displays a button or a component that looks like a button',\n  status: 'stable'\n}).expectAllSectionsVisible();",
                  "err": {},
                  "uuid": "5f80395e-0512-4c43-a5bf-47c34a854952",
                  "parentUUID": "507b57a5-7d9d-450a-ae46-c6b167512150",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should test all button variants",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Basic Functionality should test all button variants",
                  "timedOut": null,
                  "duration": 973,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test all expected button variants\nconst expectedVariants = ['Default', 'Secondary', 'Destructive', 'Outline', 'Ghost', 'Link'];\nuiComponentsPage.testComponentVariants(expectedVariants);\n// Additional variant-specific testing (simplified for reliability)\ncy.get('button').contains('Destructive').should('be.visible');\ncy.get('button').contains('Outline').should('be.visible');\ncy.get('button').contains('Ghost').should('be.visible');",
                  "err": {},
                  "uuid": "69cc0af1-2fad-4c5e-9437-099b01c49546",
                  "parentUUID": "507b57a5-7d9d-450a-ae46-c6b167512150",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should test all button sizes",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Basic Functionality should test all button sizes",
                  "timedOut": null,
                  "duration": 850,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test all expected button sizes\nconst expectedSizes = ['Small', 'Default', 'Large'];\nuiComponentsPage.testComponentSizes(expectedSizes);\n// Verify size differences\ncy.get('button').contains('Small').then($small => {\n  cy.get('button').contains('Large').then($large => {\n    expect($large.height()).to.be.greaterThan($small.height());\n  });\n});",
                  "err": {},
                  "uuid": "4e69783d-0383-461f-b68b-a9b4ae3749b8",
                  "parentUUID": "507b57a5-7d9d-450a-ae46-c6b167512150",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should test icon button functionality",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Basic Functionality should test icon button functionality",
                  "timedOut": null,
                  "duration": 884,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test icon buttons\nuiComponentsPage.elements.iconsSection().within(() => {\n  // Test buttons with text and icons\n  cy.contains('button', 'Confirm').should('be.visible').within(() => {\n    cy.get('svg, i').should('exist'); // Icon should be present\n  });\n  cy.contains('button', 'Download').should('be.visible').within(() => {\n    cy.get('svg, i').should('exist');\n  });\n  // Test icon-only buttons (simplified approach)\n  cy.get('button').should('exist').then($buttons => {\n    // Check if any button contains only icons\n    let hasIconOnlyButton = false;\n    $buttons.each((i, btn) => {\n      const $btn = Cypress.$(btn);\n      if ($btn.find('svg, i').length > 0 && $btn.text().trim() === '') {\n        hasIconOnlyButton = true;\n      }\n    });\n    // For now, just verify buttons exist (the actual icon tests depend on implementation)\n    expect($buttons.length).to.be.greaterThan(0);\n  });\n});",
                  "err": {},
                  "uuid": "c98dc11d-81bc-4478-aaf2-c5838ee55763",
                  "parentUUID": "507b57a5-7d9d-450a-ae46-c6b167512150",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should test interactive button behavior",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Basic Functionality should test interactive button behavior",
                  "timedOut": null,
                  "duration": 10833,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test interactive elements (skip mobile menu)\ncy.get('button:not([disabled]):visible:not([data-cy=\"mobile-menu-button\"])').each($button => {\n  cy.wrap($button).should('be.visible').click();\n});\n// Test specific button interactions (exclude mobile menu)\ncy.get('button:not([disabled]):visible:not([data-cy=\"mobile-menu-button\"])').first().as('testButton');\n// Test click behavior\ncy.get('@testButton').click().should('be.visible');\n// Test hover states\ncy.get('@testButton').trigger('mouseover');\n// Test focus states\ncy.get('@testButton').focus().should('have.focus');\n// Test keyboard navigation\ncy.get('button:visible').first().focus().trigger('keydown', {\n  key: 'Tab'\n});\ncy.focused().should('be.visible');",
                  "err": {
                    "message": "CypressError: Timed out retrying after 10050ms: `cy.click()` failed because the page updated while this command was executing. Cypress tried to locate elements based on this query:\n\n> <button.gap-2.whitespace-nowrap.text-sm.font-medium.ring-offset-background.focus-visible:outline-none.focus-visible:ring-2.focus-visible:ring-ring.focus-visible:ring-offset-2.disabled:pointer-events-none.disabled:opacity-50.[&_svg]:pointer-events-none.[&_svg]:size-4.[&_svg]:shrink-0.h-10.flex.items-center.group.w-full.justify-start.px-0.py-0.rounded-md.transition-all.duration-150.text-foreground.hover:text-accent.hover:bg-muted/50>\n\nWe initially found matching element(s), but while waiting for them to become actionable, they disappeared from the page. Common situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().click()`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').click()`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                    "estack": "CypressError: Timed out retrying after 10050ms: `cy.click()` failed because the page updated while this command was executing. Cypress tried to locate elements based on this query:\n\n> <button.gap-2.whitespace-nowrap.text-sm.font-medium.ring-offset-background.focus-visible:outline-none.focus-visible:ring-2.focus-visible:ring-ring.focus-visible:ring-offset-2.disabled:pointer-events-none.disabled:opacity-50.[&_svg]:pointer-events-none.[&_svg]:size-4.[&_svg]:shrink-0.h-10.flex.items-center.group.w-full.justify-start.px-0.py-0.rounded-md.transition-all.duration-150.text-foreground.hover:text-accent.hover:bg-muted/50>\n\nWe initially found matching element(s), but while waiting for them to become actionable, they disappeared from the page. Common situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().click()`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').click()`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at retryActionability (http://localhost:3000/__cypress/runner/cypress_runner.js:114430:74)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:146806:68)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:146747:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:5420:46)",
                    "diff": null
                  },
                  "uuid": "4ff5e658-2983-444e-b45d-93f9e7cbcabd",
                  "parentUUID": "507b57a5-7d9d-450a-ae46-c6b167512150",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f80395e-0512-4c43-a5bf-47c34a854952",
                "69cc0af1-2fad-4c5e-9437-099b01c49546",
                "4e69783d-0383-461f-b68b-a9b4ae3749b8",
                "c98dc11d-81bc-4478-aaf2-c5838ee55763"
              ],
              "failures": ["4ff5e658-2983-444e-b45d-93f9e7cbcabd"],
              "pending": [],
              "skipped": [],
              "duration": 16374,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1c368d96-e957-4b82-9163-f90c9c526f57",
              "title": "Button Component - Advanced Features",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should test disabled button states",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Advanced Features should test disabled button states",
                  "timedOut": null,
                  "duration": 887,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Navigate to disabled states section\nuiComponentsPage.elements.disabledSection().within(() => {\n  // Test all disabled variants\n  cy.get('button[disabled]').should('have.length.at.least', 4);\n  cy.get('button[disabled]').each($button => {\n    cy.wrap($button).should('be.disabled').and('have.css', 'opacity'); // Should have reduced opacity\n  });\n  // Test that disabled buttons don't respond to clicks\n  cy.get('button[disabled]').first().click({\n    force: true\n  });\n  // Should not trigger any actions (no way to test programmatically without specific handlers)\n});",
                  "err": {},
                  "uuid": "119c132a-5118-4c4f-b719-d3f61bbf5478",
                  "parentUUID": "1c368d96-e957-4b82-9163-f90c9c526f57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should test loading states",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Advanced Features should test loading states",
                  "timedOut": null,
                  "duration": 710,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test loading buttons in advanced section\nuiComponentsPage.elements.advancedSection().within(() => {\n  cy.contains('Loading...').should('be.visible');\n  cy.contains('Saving...').should('be.visible');\n  // Test loading spinners are present\n  cy.get('.animate-spin, [class*=\"spin\"]').should('exist');\n  // Test loading buttons are disabled\n  cy.contains('button', 'Loading').should('be.disabled');\n  cy.contains('button', 'Saving').should('be.disabled');\n});",
                  "err": {},
                  "uuid": "28360a92-1cea-4475-92b1-9b77e49d11f0",
                  "parentUUID": "1c368d96-e957-4b82-9163-f90c9c526f57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should test button as link functionality",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Advanced Features should test button as link functionality",
                  "timedOut": null,
                  "duration": 708,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test asChild link functionality\nuiComponentsPage.elements.advancedSection().within(() => {\n  cy.contains('Go to Dashboard').should('have.prop', 'tagName', 'A');\n  cy.contains('External Link').should('have.prop', 'tagName', 'A');\n  // Test external link attributes\n  cy.contains('External Link').should('have.attr', 'target', '_blank').and('have.attr', 'rel', 'noopener noreferrer');\n});",
                  "err": {},
                  "uuid": "c41ad2b4-7cb4-4466-8da9-a180d2852887",
                  "parentUUID": "1c368d96-e957-4b82-9163-f90c9c526f57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should test common UI patterns",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Advanced Features should test common UI patterns",
                  "timedOut": null,
                  "duration": 711,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test form action patterns\nuiComponentsPage.elements.patternsSection().within(() => {\n  // Form actions\n  cy.contains('Save Changes').should('have.attr', 'type', 'submit');\n  cy.contains('Cancel').should('have.attr', 'type', 'button');\n  // Destructive actions\n  cy.contains('Delete Account').should('contain.text', 'Delete');\n  cy.contains('Keep Account').should('be.visible');\n  // Call-to-action\n  cy.contains('Get Started').should('be.visible');\n  cy.contains('Learn More').should('be.visible');\n});",
                  "err": {},
                  "uuid": "a47ff68f-a906-459b-be25-b82016ab546e",
                  "parentUUID": "1c368d96-e957-4b82-9163-f90c9c526f57",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "119c132a-5118-4c4f-b719-d3f61bbf5478",
                "28360a92-1cea-4475-92b1-9b77e49d11f0",
                "c41ad2b4-7cb4-4466-8da9-a180d2852887",
                "a47ff68f-a906-459b-be25-b82016ab546e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3016,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a2e8fea2-934a-4a2e-b5f5-967f2f33ea58",
              "title": "Button Component - Accessibility & Standards",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should test accessibility compliance",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Accessibility & Standards should test accessibility compliance",
                  "timedOut": null,
                  "duration": 488,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test accessibility\nuiComponentsPage.testAccessibility();\n// Additional accessibility tests\ncy.get('button').each($button => {\n  // Every button should have accessible text\n  cy.wrap($button).should($btn => {\n    const text = $btn.text().trim();\n    const ariaLabel = $btn.attr('aria-label');\n    const title = $btn.attr('title');\n    expect(text || ariaLabel || title).to.not.be.empty;\n  });\n  // Test color contrast exists (separate assertions)\n  cy.wrap($button).should('have.css', 'color');\n  cy.wrap($button).should('have.css', 'background-color');\n});",
                  "err": {},
                  "uuid": "c62a990b-4ea8-4bfc-a31a-b154258d2d6f",
                  "parentUUID": "a2e8fea2-934a-4a2e-b5f5-967f2f33ea58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should test responsive design",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Accessibility & Standards should test responsive design",
                  "timedOut": null,
                  "duration": 491,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test responsive design\nuiComponentsPage.testResponsiveDesign();\n// Additional responsive tests\ncy.viewport(375, 667); // Mobile\ncy.get('button').should('be.visible');\ncy.get('button').first().invoke('width').should('be.greaterThan', 0);\ncy.viewport(1440, 900); // Desktop\ncy.get('button').should('be.visible');",
                  "err": {},
                  "uuid": "b80315bb-041b-4000-aafc-9ed50859a00a",
                  "parentUUID": "a2e8fea2-934a-4a2e-b5f5-967f2f33ea58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should test component states comprehensively",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Accessibility & Standards should test component states comprehensively",
                  "timedOut": null,
                  "duration": 734,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test all component states\nuiComponentsPage.testComponentStates();\n// Additional state testing (visible buttons only)\ncy.get('button:not([disabled]):visible').first().as('activeButton');\n// Test normal state (focus state can be unpredictable in headless mode)\ncy.get('@activeButton').should('be.visible').and('not.be.disabled');\n// Test hover state (simulated)\ncy.get('@activeButton').trigger('mouseenter').trigger('mouseover');\n// Test active state (simulated)\ncy.get('@activeButton').trigger('mousedown').trigger('mouseup');\n// Test focus state\ncy.get('@activeButton').focus().should('have.focus');\n// Test blur (simplified - just verify focus can be moved)\ncy.get('@activeButton').blur();\ncy.get('body').click();\n// Note: Focus state testing can be unreliable in headless mode",
                  "err": {},
                  "uuid": "f021c373-ac52-4fc5-a29b-aad475569b72",
                  "parentUUID": "a2e8fea2-934a-4a2e-b5f5-967f2f33ea58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c62a990b-4ea8-4bfc-a31a-b154258d2d6f",
                "b80315bb-041b-4000-aafc-9ed50859a00a",
                "f021c373-ac52-4fc5-a29b-aad475569b72"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1713,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6dc9b667-d162-46d4-a2cf-88e205eee2a2",
              "title": "Button Component - Documentation & Code Quality",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should verify code examples are comprehensive",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Documentation & Code Quality should verify code examples are comprehensive",
                  "timedOut": null,
                  "duration": 745,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test code examples\nuiComponentsPage.testCodeExamples();\n// Additional code example validation\nuiComponentsPage.elements.codeSection().within(() => {\n  cy.get('pre code').should('contain.text', \"import { Button } from '@/components/ui/button'\");\n  cy.get('pre code').should('contain.text', '<Button>');\n  cy.get('pre code').should('contain.text', 'variant=');\n  cy.get('pre code').should('contain.text', 'size=');\n  cy.get('pre code').should('contain.text', 'asChild');\n  cy.get('pre code').should('contain.text', 'disabled');\n});",
                  "err": {},
                  "uuid": "a9a33d00-bdb2-420f-b783-6e3250d9ff64",
                  "parentUUID": "6dc9b667-d162-46d4-a2cf-88e205eee2a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should verify best practices documentation",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Documentation & Code Quality should verify best practices documentation",
                  "timedOut": null,
                  "duration": 760,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test best practices\nuiComponentsPage.testBestPractices();\n// Additional best practices validation\nuiComponentsPage.elements.bestPracticesSection().within(() => {\n  // Do section\n  cy.contains('✅ Do').should('be.visible');\n  cy.contains('Use clear, action-oriented labels').should('be.visible');\n  cy.contains('Choose appropriate variants').should('be.visible');\n  cy.contains('Include loading states').should('be.visible');\n  // Don't section\n  cy.contains(\"❌ Don't\").should('be.visible');\n  cy.contains('more than one primary button').should('be.visible');\n  cy.contains('destructive actions too easy').should('be.visible');\n});",
                  "err": {},
                  "uuid": "36ddf874-e86f-4895-9f33-695b73ef0fa1",
                  "parentUUID": "6dc9b667-d162-46d4-a2cf-88e205eee2a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should verify breadcrumb navigation works",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Documentation & Code Quality should verify breadcrumb navigation works",
                  "timedOut": null,
                  "duration": 797,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Test breadcrumb navigation\ncy.get('nav[aria-label=\"Breadcrumb\"]').should('be.visible');\ncy.get('nav[aria-label=\"Breadcrumb\"]').within(() => {\n  cy.contains('UI Components').should('be.visible');\n  cy.contains('atom').should('be.visible');\n  cy.contains('Button').should('be.visible');\n});\n// Test breadcrumb links\ncy.contains('UI Components').click();\ncy.url().should('include', '/debug-tools/ui-components');",
                  "err": {},
                  "uuid": "bdc1114b-e8df-4b7c-8ef5-cd369fc18181",
                  "parentUUID": "6dc9b667-d162-46d4-a2cf-88e205eee2a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should verify no errors or issues",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Documentation & Code Quality should verify no errors or issues",
                  "timedOut": null,
                  "duration": 2651,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Verify no errors\nuiComponentsPage.expectNoErrors();\n// Additional error checking (check for error elements instead)\ncy.get('[data-testid=\"error\"], .error, [role=\"alert\"]').should('not.exist');\n// Check for missing images or broken elements\ncy.get('img').each($img => {\n  expect($img[0].naturalWidth).to.be.greaterThan(0);\n});\n// Verify all links are valid (not 404)\ncy.get('a[href]').each($link => {\n  const href = $link.attr('href');\n  if (href && href.startsWith('/')) {\n    cy.request(href).its('status').should('eq', 200);\n  }\n});",
                  "err": {},
                  "uuid": "6b8ad68c-6832-490b-bb21-2c2827838b50",
                  "parentUUID": "6dc9b667-d162-46d4-a2cf-88e205eee2a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a9a33d00-bdb2-420f-b783-6e3250d9ff64",
                "36ddf874-e86f-4895-9f33-695b73ef0fa1",
                "bdc1114b-e8df-4b7c-8ef5-cd369fc18181",
                "6b8ad68c-6832-490b-bb21-2c2827838b50"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4953,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6d1318d0-f506-4226-9fca-49b17c510feb",
              "title": "Button Component - Complete Workflow Testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute complete button component workflow",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Complete Workflow Testing should execute complete button component workflow",
                  "timedOut": null,
                  "duration": 11360,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Execute comprehensive workflow test\nuiComponentsPage.testCompleteComponentWorkflow('Button', {\n  metadata: {\n    title: 'Button',\n    description: 'Displays a button or a component that looks like a button',\n    status: 'stable'\n  },\n  variants: ['Default', 'Secondary', 'Destructive', 'Outline', 'Ghost', 'Link'],\n  sizes: ['Small', 'Default', 'Large']\n});\ncy.log('✅ Complete Button component workflow testing successful');",
                  "err": {
                    "message": "CypressError: Timed out retrying after 10050ms: `cy.click()` failed because the page updated while this command was executing. Cypress tried to locate elements based on this query:\n\n> <button.gap-2.whitespace-nowrap.text-sm.font-medium.ring-offset-background.focus-visible:outline-none.focus-visible:ring-2.focus-visible:ring-ring.focus-visible:ring-offset-2.disabled:pointer-events-none.disabled:opacity-50.[&_svg]:pointer-events-none.[&_svg]:size-4.[&_svg]:shrink-0.h-10.flex.items-center.group.w-full.justify-start.px-0.py-0.rounded-md.transition-all.duration-150.text-foreground.hover:text-accent.hover:bg-muted/50>\n\nWe initially found matching element(s), but while waiting for them to become actionable, they disappeared from the page. Common situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().click()`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').click()`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                    "estack": "CypressError: Timed out retrying after 10050ms: `cy.click()` failed because the page updated while this command was executing. Cypress tried to locate elements based on this query:\n\n> <button.gap-2.whitespace-nowrap.text-sm.font-medium.ring-offset-background.focus-visible:outline-none.focus-visible:ring-2.focus-visible:ring-ring.focus-visible:ring-offset-2.disabled:pointer-events-none.disabled:opacity-50.[&_svg]:pointer-events-none.[&_svg]:size-4.[&_svg]:shrink-0.h-10.flex.items-center.group.w-full.justify-start.px-0.py-0.rounded-md.transition-all.duration-150.text-foreground.hover:text-accent.hover:bg-muted/50>\n\nWe initially found matching element(s), but while waiting for them to become actionable, they disappeared from the page. Common situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().click()`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').click()`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at retryActionability (http://localhost:3000/__cypress/runner/cypress_runner.js:114430:74)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:146806:68)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:146747:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:5420:46)",
                    "diff": null
                  },
                  "uuid": "68d4f8b5-bebb-46b3-87a6-d055a13628ec",
                  "parentUUID": "6d1318d0-f506-4226-9fca-49b17c510feb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should verify component performance",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Complete Workflow Testing should verify component performance",
                  "timedOut": null,
                  "duration": 867,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const startTime = Date.now();\nuiComponentsPage.visitComponent('Button');\n// Page should load within performance budget\ncy.then(() => {\n  const loadTime = Date.now() - startTime;\n  expect(loadTime).to.be.lessThan(3000); // 3 second budget\n});\n// Test interaction performance\nconst interactionStart = Date.now();\ncy.get('button:visible').first().click();\ncy.then(() => {\n  const interactionTime = Date.now() - interactionStart;\n  expect(interactionTime).to.be.lessThan(1000); // 1 second for interactions (more realistic)\n});",
                  "err": {},
                  "uuid": "7f3d97f7-d514-419d-b3ee-b96a86517d7a",
                  "parentUUID": "6d1318d0-f506-4226-9fca-49b17c510feb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should verify component meets design system standards",
                  "fullTitle": "UI Components - Button Component Testing Button Component - Complete Workflow Testing should verify component meets design system standards",
                  "timedOut": null,
                  "duration": 593,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "uiComponentsPage.visitComponent('Button');\n// Verify design system compliance\ncy.get('button').each($button => {\n  // Check for consistent styling\n  cy.wrap($button).should('have.css', 'font-family');\n  cy.wrap($button).should('have.css', 'border-radius');\n  cy.wrap($button).should('have.css', 'transition');\n  // Check for proper spacing\n  cy.wrap($button).should('have.css', 'padding');\n  cy.wrap($button).should('have.css', 'margin');\n});\n// Verify brand colors are used\ncy.get('button:not([disabled])').first().should('have.css', 'color');\ncy.log('✅ Button component meets design system standards');",
                  "err": {},
                  "uuid": "e3fbc82b-c63f-4249-afe3-b21f68e497fe",
                  "parentUUID": "6d1318d0-f506-4226-9fca-49b17c510feb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f3d97f7-d514-419d-b3ee-b96a86517d7a",
                "e3fbc82b-c63f-4249-afe3-b21f68e497fe"
              ],
              "failures": ["68d4f8b5-bebb-46b3-87a6-d055a13628ec"],
              "pending": [],
              "skipped": [],
              "duration": 12820,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "cypress-report-[datetime]",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "config/cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "isoDateTime",
        "reportFilename": "cypress-report-[datetime]"
      },
      "version": "6.2.0"
    }
  }
}
