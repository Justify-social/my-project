openapi: 3.0.0

https://stoplight.io/api/v1/projects/insightiq/api-reference/nodes/reference/openapi.v1.yml?fromExportButton=true

https://docs.insightiq.ai/docs/api-reference/introduction/introduction

info:
  title: API References
  description: |-
    The InsightIQ API is built on RESTful principles. It returns JSON encoded responses and accepts JSON payloads on HTTPS connections to ensure secure data transmission. The APIs must be called only from your server and never from your app or frontend to prevent security vulnerabilities.

    The API operates in three environments: `sandbox`, `staging` and `production`.

    - The `sandbox` environment returns mock data and is used for testing the basic functionality of the system.

    - The `staging` environment is exactly like a production environment but with certain limitations. It is used for your internal testing and development purposes.

    - The `production` environment connects to real platform accounts and all data reads and writes are made to live accounts. This is what you would use to get data for your customers.
  contact:
    name: InsightIQ
    url: 'https://insightiq.ai'
    email: support@insightiq.ai
  version: v1.0
servers:
  - url: 'https://api.sandbox.insightiq.ai'
    description: Sandbox
  - url: 'https://api.staging.insightiq.ai'
    description: Staging
  - description: Production
    url: 'https://api.insightiq.ai'
tags:
  - name: Authentication
    description: ' '
  - name: Connect
    description: ' '
  - name: Identity
    description: ' '
  - name: Engagement
    description: ' '
  - name: Income
    description: ' '
  - name: Activity
    description: ' '
  - name: Creator Discovery
    description: ' '
  - name: Professional Creator Discovery
    description: ' '
  - name: Public Content
    description: ' '
  - name: Insights
    description: ' '
  - name: Safety
    description: ' '
  - name: Social Listening
    description: ' '
  - name: Publish
    description: ' '
  - name: Switch
    description: ' '
  - name: Webhook
    description: ' '
paths:
  '/v1/work-platforms/{id}':
    get:
      summary: Retrieve a work platform
      description: Retrieve the details of a specific Work Platform by its unique identifier.
      operationId: v1ConnectGetWorkPlatformsById
      responses:
        '200':
          description: Returns the Work Platform object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkPlatform'
              examples:
                Instagram:
                  value:
                    id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                    name: Instagram
                    logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                    created_at: '2021-11-08T18:21:59.819244'
                    updated_at: '2021-11-08T18:21:59.819244'
                    category: SOCIAL
                    status: ACTIVE
                    url: 'https://www.instagram.com/'
                    products:
                      identity:
                        is_supported: true
                        audience:
                          is_supported: true
                      engagement:
                        is_supported: true
                        audience:
                          is_supported: true
                      income:
                        is_supported: false
                      activity:
                        is_supported: false
                      publish:
                        is_supported: false
                      switch:
                        is_supported: false
                YouTube:
                  value:
                    id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                    name: YouTube
                    logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                    created_at: '2021-11-08T18:21:59.819244'
                    updated_at: '2021-11-08T18:21:59.819244'
                    category: ENTERTAINMENT
                    status: ACTIVE
                    url: 'https://www.youtube.com/'
                    products:
                      identity:
                        is_supported: true
                        audience:
                          is_supported: true
                      engagement:
                        is_supported: true
                        audience:
                          is_supported: true
                      income:
                        is_supported: true
                      switch:
                        is_supported: false
                      activity:
                        is_supported: false
                      publish:
                        is_supported: false
                Twitter:
                  value:
                    id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                    name: Twitter
                    logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                    created_at: '2021-11-08T18:21:59.819244'
                    updated_at: '2021-11-08T18:21:59.819244'
                    category: SOCIAL
                    status: ACTIVE
                    url: 'https://twitter.com'
                    products:
                      identity:
                        is_supported: true
                        audience:
                          is_supported: false
                      engagement:
                        is_supported: true
                        audience:
                          is_supported: false
                      income:
                        is_supported: false
                      switch:
                        is_supported: false
                      activity:
                        is_supported: false
                      publish:
                        is_supported: false
                Facebook:
                  value:
                    id: ad2fec62-2987-40a0-89fb-23485972598c
                    name: Facebook
                    logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
                    created_at: '2021-11-08T18:21:59.819244'
                    updated_at: '2021-11-08T18:21:59.819244'
                    category: SOCIAL
                    status: ACTIVE
                    url: 'https://www.facebook.com'
                    products:
                      identity:
                        is_supported: true
                        audience:
                          is_supported: false
                      engagement:
                        is_supported: true
                        audience:
                          is_supported: false
                      income:
                        is_supported: false
                      switch:
                        is_supported: false
                      activity:
                        is_supported: false
                      publish:
                        is_supported: false
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      tags:
        - Connect
    parameters:
      - schema:
          example: 179a0bb4-c572-4477-9457-7dacf1b84848
          format: uuid
          type: string
        name: id
        in: path
        description: Unique identifier for the work platform.
        required: true
  /v1/work-platforms:
    get:
      summary: Retrieve all work platforms
      description: Lists all Work Platforms.
      operationId: v1ConnectGetWorkPlatforms
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: Returns all Work Platforms objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkPlatformList'
              examples:
                Example:
                  value:
                    data:
                      - id: 3f996edf-fec1-4be7-bb53-f9b649f41058
                        name: Discord
                        logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_discord.png'
                        created_at: '2022-03-04T10:06:41.871329'
                        updated_at: '2022-03-04T10:06:41.871329'
                        category: ENTERTAINMENT
                        status: ACTIVE
                        url: 'https://discord.com/'
                        products:
                          identity:
                            is_supported: true
                            audience:
                              is_supported: false
                          engagement:
                            is_supported: true
                            audience:
                              is_supported: false
                          income:
                            is_supported: false
                          switch:
                            is_supported: false
                          activity:
                            is_supported: false
                          publish:
                            is_supported: false
                      - id: 9c5b1cf1-23f1-4d40-b0ea-40f9bf615801
                        name: Pinterest
                        logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_pinterest.png'
                        created_at: '2021-11-08T18:21:59.819244'
                        updated_at: '2021-11-08T18:21:59.819244'
                        category: LIFESTYLE
                        status: ACTIVE
                        url: 'https://www.pinterest.com'
                        products:
                          identity:
                            is_supported: true
                            audience:
                              is_supported: false
                          engagement:
                            is_supported: true
                            audience:
                              is_supported: false
                          income:
                            is_supported: false
                          switch:
                            is_supported: false
                          activity:
                            is_supported: false
                          publish:
                            is_supported: false
                      - id: fbf76083-710b-439a-8b8c-956f607ef2c1
                        name: Substack
                        logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_substack.png'
                        created_at: '2022-03-04T10:06:41.871329'
                        updated_at: '2022-03-04T10:06:41.871329'
                        category: SOCIAL
                        status: ACTIVE
                        url: 'https://substack.com/'
                        products:
                          identity:
                            is_supported: true
                            audience:
                              is_supported: false
                          engagement:
                            is_supported: true
                            audience:
                              is_supported: false
                          income:
                            is_supported: false
                          switch:
                            is_supported: false
                          activity:
                            is_supported: false
                          publish:
                            is_supported: false
                      - id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                        name: Instagram
                        logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        created_at: '2021-11-08T18:21:59.819244'
                        updated_at: '2021-11-08T18:21:59.819244'
                        category: SOCIAL
                        status: ACTIVE
                        url: 'https://www.instagram.com/'
                        products:
                          identity:
                            is_supported: true
                            audience:
                              is_supported: true
                          engagement:
                            is_supported: true
                            audience:
                              is_supported: true
                          income:
                            is_supported: false
                          switch:
                            is_supported: false
                          activity:
                            is_supported: false
                          publish:
                            is_supported: false
                      - id: ad2fec62-2987-40a0-89fb-23485972598c
                        name: Facebook
                        logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
                        created_at: '2021-11-08T18:21:59.819244'
                        updated_at: '2021-11-08T18:21:59.819244'
                        category: SOCIAL
                        status: ACTIVE
                        url: 'https://www.facebook.com'
                        products:
                          identity:
                            is_supported: true
                            audience:
                              is_supported: false
                          engagement:
                            is_supported: true
                            audience:
                              is_supported: false
                          income:
                            is_supported: false
                          switch:
                            is_supported: false
                          activity:
                            is_supported: false
                          publish:
                            is_supported: false
                      - id: de55aeec-0dc8-4119-bf90-16b3d1f0c987
                        name: TikTok
                        logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_tiktok.png'
                        created_at: '2021-11-08T18:21:59.819244'
                        updated_at: '2021-11-08T18:21:59.819244'
                        category: SOCIAL
                        status: ACTIVE
                        url: 'https://www.tiktok.com'
                        products:
                          identity:
                            is_supported: true
                            audience:
                              is_supported: false
                          engagement:
                            is_supported: true
                            audience:
                              is_supported: false
                          income:
                            is_supported: false
                          switch:
                            is_supported: false
                          activity:
                            is_supported: false
                          publish:
                            is_supported: false
                      - id: e4de6c01-5b78-4fc0-a651-24f44134457b
                        name: Twitch
                        logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitch.png'
                        created_at: '2021-11-08T18:21:59.819244'
                        updated_at: '2021-11-08T18:21:59.819244'
                        category: ENTERTAINMENT
                        status: ACTIVE
                        url: 'https://www.twitch.tv'
                        products:
                          identity:
                            is_supported: true
                            audience:
                              is_supported: false
                          engagement:
                            is_supported: true
                            audience:
                              is_supported: false
                          income:
                            is_supported: false
                          switch:
                            is_supported: false
                          activity:
                            is_supported: false
                          publish:
                            is_supported: false
                      - id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                        name: Twitter
                        logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        created_at: '2021-11-08T18:21:59.819244'
                        updated_at: '2021-11-08T18:21:59.819244'
                        category: SOCIAL
                        status: ACTIVE
                        url: 'https://twitter.com'
                        products:
                          identity:
                            is_supported: true
                            audience:
                              is_supported: false
                          engagement:
                            is_supported: true
                            audience:
                              is_supported: false
                          income:
                            is_supported: false
                          switch:
                            is_supported: false
                          activity:
                            is_supported: false
                          publish:
                            is_supported: false
                      - id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                        name: YouTube
                        logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        created_at: '2021-11-08T18:21:59.819244'
                        updated_at: '2021-11-08T18:21:59.819244'
                        category: ENTERTAINMENT
                        status: ACTIVE
                        url: 'https://www.youtube.com/'
                        products:
                          identity:
                            is_supported: true
                            audience:
                              is_supported: true
                          engagement:
                            is_supported: true
                            audience:
                              is_supported: true
                          income:
                            is_supported: true
                          switch:
                            is_supported: false
                          activity:
                            is_supported: false
                          publish:
                            is_supported: false
                    metadata:
                      offset: 0
                      limit: 10
                      from_date: null
                      to_date: null
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      tags:
        - Connect
    parameters: []
  '/v1/users/{id}':
    get:
      summary: Retrieve a user
      description: Retrieve the information of the User with the supplied User id.
      operationId: v1ConnectGetUsersById
      parameters:
        - name: id
          in: path
          description: Unique identifier for the user.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the User object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              examples:
                Mark Ruffalo:
                  value:
                    name: Mark Ruffalo
                    external_id: 154813a5-d26e-42f2-8b1d-ebbed59b062d
                    id: b0562ead-6282-404f-9e63-9da7bc0f838f
                    created_at: '2021-12-13T07:54:41.078254'
                    updated_at: '2021-12-13T07:54:41.078254'
                    status: ACTIVE
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      tags:
        - Connect
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the user.
  /v1/users:
    get:
      summary: Retrieve all users
      description: Lists all Users.
      operationId: v1ConnectGetUsers
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: An object with a results property that contains an array of up to limit user objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseList'
              examples:
                Example:
                  value:
                    data:
                      - name: Arvind
                        external_id: c8b24285-e576-4c7a-9196-26c0c401afe83
                        id: 779acd71-23f7-4006-9db2-e9642038c3a7
                        created_at: '2022-03-29T16:16:39.482688'
                        updated_at: '2022-03-29T16:16:39.482688'
                        status: ACTIVE
                      - name: test01
                        external_id: c8b24285-e576-4c7a-9196-26c0c401afe445
                        id: ac9e92f4-1f26-4688-94b5-478f429126c4
                        created_at: '2022-03-29T16:01:47.473103'
                        updated_at: '2022-03-29T16:01:47.473103'
                        status: ACTIVE
                      - name: Arvind
                        external_id: c8b24285-e576-4c7a-9196-26c0c401afe82
                        id: 6cb1e144-b709-4e36-8878-fe66c8125c60
                        created_at: '2022-03-29T16:01:10.507657'
                        updated_at: '2022-03-29T16:01:10.507657'
                        status: ACTIVE
                      - name: Peter Parker
                        external_id: c8b24285-e576-4c7a-9196-26c0c401afe81
                        id: 9546b4fe-cef7-48c4-ab9f-960dd0080728
                        created_at: '2022-03-17T05:47:39.199440'
                        updated_at: '2022-03-17T05:47:39.199440'
                        status: ACTIVE
                      - name: LedAU1GL
                        external_id: YET4z78Goe0fPnY7guGF
                        id: a162c7e0-bc81-4142-8945-3d6a715d0f51
                        created_at: '2022-01-06T08:34:39.926237'
                        updated_at: '2022-01-06T08:34:39.926237'
                        status: ACTIVE
                      - name: 5zS70mBZ
                        external_id: B35UtSEwH06X4G7Oj904
                        id: 9c03319a-ddde-443c-8439-b8f380e9a365
                        created_at: '2022-01-03T10:07:54.077177'
                        updated_at: '2022-01-03T10:07:54.077177'
                        status: ACTIVE
                      - name: GQe38pJo
                        external_id: 3K64ZAT9WGl6T6SJl0Gm
                        id: b4660c4f-5b6d-4ddd-b0ed-832af3a3e153
                        created_at: '2022-01-03T10:07:32.805577'
                        updated_at: '2022-01-03T10:07:32.805577'
                        status: ACTIVE
                      - name: y0hHz1uG
                        external_id: puxaa648u5Fy7VPikXnr
                        id: 4e16b577-c019-4538-ba25-4ef45b38b141
                        created_at: '2022-01-03T10:01:17.679508'
                        updated_at: '2022-01-03T10:01:17.679508'
                        status: ACTIVE
                      - name: DigiQT
                        external_id: '1640699990331'
                        id: b1eacf57-f6b9-478c-a352-fe94974f8691
                        created_at: '2021-12-28T13:59:50.611550'
                        updated_at: '2021-12-28T13:59:50.611550'
                        status: ACTIVE
                      - name: DigiQT
                        external_id: '1640699946482'
                        id: e85f084d-64c7-4271-9b42-ecef8e397b99
                        created_at: '2021-12-28T13:59:07.821132'
                        updated_at: '2021-12-28T13:59:07.821132'
                        status: ACTIVE
                      - name: h51u3qsm
                        external_id: qLSq6eTyfSJvkZ4GD5Rk
                        id: b20ac291-2a1b-49bc-b27a-fdc2d0e789d4
                        created_at: '2021-12-14T05:48:13.354451'
                        updated_at: '2021-12-14T05:48:13.354451'
                        status: ACTIVE
                      - name: 4hbknpdk
                        external_id: AMqGf3gftYw5LIZsLMY7
                        id: 7d28634e-bcc3-4616-b980-9b9c5a73d519
                        created_at: '2021-12-14T05:46:00.780360'
                        updated_at: '2021-12-14T05:46:00.780360'
                        status: ACTIVE
                      - name: 6Mwkkfo0
                        external_id: F23wSDSgoMTdRQrFndH5
                        id: df2c6435-6eb3-471a-a1fa-6bb1b21e9e0b
                        created_at: '2021-12-14T05:45:44.419308'
                        updated_at: '2021-12-14T05:45:44.419308'
                        status: ACTIVE
                      - name: faDzxZG2
                        external_id: kJ7LkWlvX4FjqOXwe0L7
                        id: a066e220-d99c-4737-a763-888271faeb99
                        created_at: '2021-12-14T05:45:37.711996'
                        updated_at: '2021-12-14T05:45:37.711996'
                        status: ACTIVE
                      - name: Kgga4vQX
                        external_id: nZl1fhjUKcvnZ0zjxRyY
                        id: 63ea679d-b421-4de6-91db-94ea4bd78816
                        created_at: '2021-12-14T05:43:07.287532'
                        updated_at: '2021-12-14T05:43:07.287532'
                        status: ACTIVE
                      - name: LztHEgLI
                        external_id: uHuW9HCUKg1YH56u3PjP
                        id: 4532e289-6301-4cdf-af6b-aef83ab01315
                        created_at: '2021-12-13T14:14:49.663789'
                        updated_at: '2021-12-13T14:14:49.663789'
                        status: ACTIVE
                      - name: Chad Becker
                        external_id: aaf8a927-d478-4e98-8ade-6ca5ff244877
                        id: c931d928-c17d-49ee-89d0-ab18a825bd9b
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Simu Liu
                        external_id: 2cf983a9-9db2-4b35-b3f5-2908be48cfd4
                        id: dbada397-ed37-48e5-98bf-018808a186d9
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Justin Gatlin
                        external_id: 488a0a12-3bd4-4e40-b6e2-0dbf4895e6af
                        id: bc200267-631f-42e2-b0d9-aae786ff85de
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Lisa Kudrow
                        external_id: 4a39a4af-fa93-4c80-a1f7-b0f73df70f4e
                        id: c21c3a73-ade9-435b-8033-53d3e0549366
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Jerry Seinfeld
                        external_id: 82a356fc-574f-4065-91e8-b35e8717f596
                        id: c9342ccd-14ec-4fb1-b6c1-8dfc5df7c518
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Sam Curran
                        external_id: 519f061f-30df-4d25-872d-e8732023d017
                        id: 79be6897-e0f4-43d2-8df3-4af15b2862f0
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Jonah Hill
                        external_id: 1c82c935-edb2-4419-96b6-2ca6be72c207
                        id: 3b38559b-892f-475d-b4df-7248ef1fd405
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Mark Ruffalo
                        external_id: 154813a5-d26e-42f2-8b1d-ebbed59b062d
                        id: b0562ead-6282-404f-9e63-9da7bc0f838f
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Robert Downey
                        external_id: 370a5ab7-42b6-4871-95fb-ee7a17c91dc8
                        id: 28722faa-5356-483d-a57b-384fa01859dd
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Peter Parker
                        external_id: 5a3ab477-1be8-4b37-9e61-a51174c40d09
                        id: 8ba1ac32-0f3c-4cf0-8d89-79a183258f6a
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Chris Evans
                        external_id: 2fbada02-9da0-41e7-b1e5-042ee71874e4
                        id: ac0d5da5-f8c1-4139-8945-825986da9c1e
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                      - name: Julia Luis
                        external_id: bae59952-7e03-47bd-9561-5c4d5453bdd9
                        id: 4d913581-99f2-41a8-9309-9b008511c211
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        status: ACTIVE
                    metadata:
                      offset: 0
                      limit: 100
                      from_date: null
                      to_date: null
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      tags:
        - Connect
    parameters: []
    post:
      summary: Create a user
      operationId: v1ConnectPostUsers
      responses:
        '201':
          description: Returns created user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              examples:
                John Doe:
                  value:
                    name: John Doe
                    external_id: 179a0bb4-c572-4477-9457-7dacf1b84848
                    id: 0099ba73-0571-4741-8fc3-ec0d32f47b51
                    created_at: '2022-03-29T17:29:37.974235'
                    updated_at: '2022-03-29T17:29:37.974235'
                    status: ACTIVE
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      description: Create a User.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              Example:
                value:
                  name: John Doe
                  external_id: 179a0bb4-c572-4477-9457-7dacf1b84848
      tags:
        - Connect
  '/v1/users/external_id/{external_id}':
    parameters:
      - schema:
          type: string
        name: external_id
        in: path
        required: true
        description: Unique ID for the user supplied by you
    get:
      summary: Retrieve a user by external ID
      tags:
        - Connect
      responses:
        '200':
          description: Returns the User object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              examples:
                Mark Ruffalo:
                  value:
                    name: Mark Ruffalo
                    external_id: 154813a5-d26e-42f2-8b1d-ebbed59b062d
                    id: b0562ead-6282-404f-9e63-9da7bc0f838f
                    created_at: '2021-12-13T07:54:41.078254'
                    updated_at: '2021-12-13T07:54:41.078254'
                    status: ACTIVE
      operationId: v1ConnectGetUsersByExternalId
      description: Retrieve the information of the User with the supplied External id.
  /v1/sdk-tokens:
    post:
      summary: Create an SDK token
      operationId: v1ConnectPostSdkTokens
      responses:
        '201':
          description: Returns the SDK Token Response object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDKTokenResponse'
              examples:
                Example:
                  value:
                    sdk_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTU0NmI0ZmUtY2VmNy00OGM0LWFiOWYtOTYwZGQwMDgwNzI4IiwidGVuYW50X2lkIjoiMjg1Yjc1Y2EtMjE5MS00ZWEyLWJkMzQtNDdjZGI4NDEzNmVkIiwidGVuYW50X2FwcF9pZCI6IjljOGY0ZTUyLWE4MmQtNGQ0Ny05MmQzLTdmNGQ4MGM4NWZkNiIsInByb2R1Y3RzIjpbIklOQ09NRSIsIkVOR0FHRU1FTlQiLCJFTkdBR0VNRU5UX0FVRElFTkNFIiwiSURFTlRJVFkiXSwiaXNzIjoiaHR0cHM6Ly9hcGkuc2FuZGJveC5nZXRwaHlsbG8uY29tIiwiYXVkIjoiaHR0cHM6Ly9hcGkuc2FuZGJveC5nZXRwaHlsbG8uY29tL3YxL2ludGVybmFsIiwiaWF0IjoxNjQ4NTc1NDQ3LjUyNTAxMywiZXhwIjoxNjQ5MTgwMjQ3LjUyNTAwMn0.0fvAvCTpD1mKukAPq5r2nktLaQuxYWK7vVz2-xNkawc
                    expires_at: '2022-04-05T17:37:27.525002'
      description: Creates the Connect SDK Token. This is required while initializing the Connect SDK.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SDKTokenRequest'
            examples:
              Example:
                value:
                  user_id: 9546b4fe-cef7-48c4-ab9f-960dd0080728
                  products:
                    - IDENTITY
                    - IDENTITY.AUDIENCE
                    - ENGAGEMENT
                    - ENGAGEMENT.AUDIENCE
                    - INCOME
                    - PUBLISH.CONTENT
                    - ACTIVITY
      tags:
        - Connect
    parameters: []
  /v1/links:
    post:
      summary: Create a connection link
      operationId: v1ConnectPostLinks
      responses:
        '201':
          description: Returns the microsite URL along with an invite ID
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLinkResponse'
              examples:
                Example:
                  value:
                    created_at: '2020-03-27T12:56:34.534978'
                    microsite_url: 'http://example.com'
                    invite_id: 7218104b-c64c-4f30-a184-1a1802b5c56b
                    external_id: string
      description: Creates the microsite link to initiate account linking.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLinkRequest'
            examples:
              Example:
                value:
                  name: string
                  external_id: string
      tags:
        - Connect
    parameters: []
  '/v1/accounts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        description: Unique identifier for the account.
        required: true
    get:
      summary: Retrieve an account
      responses:
        '200':
          description: Returns Account object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
              examples:
                Example:
                  value:
                    id: f5e89cea-18b6-4479-a4dd-64a48217e759
                    created_at: '2021-12-13T07:54:41.078254'
                    updated_at: '2021-12-13T07:54:41.078254'
                    user:
                      id: ac0d5da5-f8c1-4139-8945-825986da9c1e
                      name: Chris Evans
                    work_platform:
                      id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                      name: Instagram
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                    platform_username: chris.evans@gmail.com
                    profile_pic_url: null
                    status: CONNECTED
                    platform_profile_name: chrisevans
                    platform_profile_id: '192342567'
                    platform_profile_published_at: null
                    data:
                      identity:
                        status: SYNCED
                        last_sync_at: '2020-01-02T00:00:00.000000'
                        monitoring_type: STANDARD
                      engagement:
                        status: SYNCED
                        last_sync_at: '2020-01-02T00:00:00.000000'
                        refresh_since: null
                        data_available_from: null
                        monitoring_type: STANDARD
                        audience:
                          status: SYNCED
                          last_sync_at: '2020-01-02T00:00:00.000000'
                          refresh_since: null
                          data_available_from: null
                          monitoring_type: STANDARD
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      operationId: v1StreamGetAccountsById
      description: |-
        Retrieve the information of the Account with the supplied Account id. An Account represents the user account on the work platform end. A user can connect multiple account in the same or across multiple work platforms.

        Usually used in conjunction with the "ACCOUNTS.*" webhooks, [read more](../../../API/webhook-events#accounts).
      tags:
        - Connect
  /v1/accounts:
    parameters: []
    get:
      summary: Retrieve all accounts
      operationId: v1StreamGetAccounts
      responses:
        '200':
          description: Returns all Account objects.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
              examples:
                Example:
                  value:
                    data:
                      - id: 9b8cf321-1334-486e-873e-82d9de692abd
                        created_at: '2022-01-06T08:35:23.340738'
                        updated_at: '2022-03-29T13:41:59.357322'
                        user:
                          id: a162c7e0-bc81-4142-8945-3d6a715d0f51
                          name: LedAU1GL
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        platform_username: Adf
                        profile_pic_url: null
                        status: NOT_CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 81c71d15-dcaf-46e1-ab96-a73aea12bcfd
                        created_at: '2022-01-03T10:08:20.936493'
                        updated_at: '2022-01-03T10:08:20.936493'
                        user:
                          id: 9c03319a-ddde-443c-8439-b8f380e9a365
                          name: 5zS70mBZ
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        platform_username: Sadsdfasf
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                          income:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                      - id: 89294fb7-307a-417f-8aec-83e3a22ead58
                        created_at: '2021-12-28T14:00:08.671900'
                        updated_at: '2021-12-28T14:02:11.631364'
                        user:
                          id: b1eacf57-f6b9-478c-a352-fe94974f8691
                          name: DigiQT
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        platform_username: '123'
                        profile_pic_url: null
                        status: NOT_CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: f2c85637-8d3a-4b00-80ef-dfe8dc736832
                        created_at: '2021-12-28T14:01:24.176471'
                        updated_at: '2021-12-28T14:01:24.176471'
                        user:
                          id: b1eacf57-f6b9-478c-a352-fe94974f8691
                          name: DigiQT
                        work_platform:
                          id: ad2fec62-2987-40a0-89fb-23485972598c
                          name: Facebook
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
                        platform_username: '1234'
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 8ee6474b-f255-443c-99da-c7cb2bfa84be
                        created_at: '2021-12-28T13:59:36.732127'
                        updated_at: '2021-12-28T13:59:36.732127'
                        user:
                          id: e85f084d-64c7-4271-9b42-ecef8e397b99
                          name: DigiQT
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        platform_username: '123'
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 1a3af1aa-e15f-4920-9507-c847f9878e19
                        created_at: '2021-12-14T05:48:44.119208'
                        updated_at: '2021-12-14T05:48:44.119208'
                        user:
                          id: b20ac291-2a1b-49bc-b27a-fdc2d0e789d4
                          name: h51u3qsm
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        platform_username: Sda
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: b444a9b7-905a-4f35-b7ce-950d32f6355a
                        created_at: '2021-12-14T05:45:31.414744'
                        updated_at: '2021-12-14T05:45:31.414744'
                        user:
                          id: 63ea679d-b421-4de6-91db-94ea4bd78816
                          name: Kgga4vQX
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        platform_username: Asf
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 7c4f814c-b7ba-4e34-9ce8-3a3bd334883f
                        created_at: '2021-12-14T05:44:11.597584'
                        updated_at: '2021-12-14T05:45:10.952968'
                        user:
                          id: 63ea679d-b421-4de6-91db-94ea4bd78816
                          name: Kgga4vQX
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        platform_username: Hello
                        profile_pic_url: null
                        status: NOT_CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: ce22d588-99b1-4582-9e14-d2dc638b3b26
                        created_at: '2021-12-14T05:44:37.414600'
                        updated_at: '2021-12-14T05:44:37.414600'
                        user:
                          id: 63ea679d-b421-4de6-91db-94ea4bd78816
                          name: Kgga4vQX
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        platform_username: Asghdfha
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 11cb31f6-0d56-4eb4-b4d0-63794f8242fc
                        created_at: '2021-12-13T14:16:09.083338'
                        updated_at: '2021-12-13T14:16:09.083338'
                        user:
                          id: 4532e289-6301-4cdf-af6b-aef83ab01315
                          name: LztHEgLI
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        platform_username: Dsfda
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: e0852c98-0c7f-4498-8626-2bda43cd0667
                        created_at: '2021-12-13T14:15:52.494149'
                        updated_at: '2021-12-13T14:15:52.494149'
                        user:
                          id: 4532e289-6301-4cdf-af6b-aef83ab01315
                          name: LztHEgLI
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        platform_username: Hello
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 9ccb74b5-6074-4ec8-b597-830cbb94f103
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: c931d928-c17d-49ee-89d0-ab18a825bd9b
                          name: Chad Becker
                        work_platform:
                          id: ad2fec62-2987-40a0-89fb-23485972598c
                          name: Facebook
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
                        platform_username: chad.becker@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: Chad Becker Official
                        platform_profile_id: '7720345617123'
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 6ad07dba-6925-4515-abb4-f63875ada3b2
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: 4d913581-99f2-41a8-9309-9b008511c211
                          name: Julia Luis
                        work_platform:
                          id: ad2fec62-2987-40a0-89fb-23485972598c
                          name: Facebook
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
                        platform_username: julia.luis@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: Veep Official
                        platform_profile_id: '7720345617125'
                        platform_profile_published_at: '2020-01-01T00:00:00'
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: a3970259-6740-4131-9058-2f5a4c0d17fa
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: 3b38559b-892f-475d-b4df-7248ef1fd405
                          name: Jonah Hill
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        platform_username: jonah.hill@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: realJonah
                        platform_profile_id: '2725104190'
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 3839334f-6c01-4ad3-8ff1-68e106148702
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: 8ba1ac32-0f3c-4cf0-8d89-79a183258f6a
                          name: Peter Parker
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        platform_username: peter.parker@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: peterparker
                        platform_profile_id: '2725104191'
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: f5e89cea-18b6-4479-a4dd-64a48217e759
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: ac0d5da5-f8c1-4139-8945-825986da9c1e
                          name: Chris Evans
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        platform_username: chris.evans@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: chrisevans
                        platform_profile_id: '192342567'
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                            audience:
                              status: SYNCED
                              last_sync_at: '2020-01-02T00:00:00.000000'
                              refresh_since: null
                              data_available_from: null
                              monitoring_type: STANDARD
                      - id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: 28722faa-5356-483d-a57b-384fa01859dd
                          name: Robert Downey
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        platform_username: robert.downey@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: robertdowney
                        platform_profile_id: '192342568'
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                            audience:
                              status: SYNCED
                              last_sync_at: '2020-01-02T00:00:00.000000'
                              refresh_since: null
                              data_available_from: null
                              monitoring_type: STANDARD
                      - id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: b0562ead-6282-404f-9e63-9da7bc0f838f
                          name: Mark Ruffalo
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        platform_username: mark.ruffalo@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: CBSE WINNERS
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_published_at: '2020-01-01T00:00:00'
                        data:
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                            audience:
                              status: SYNCED
                              last_sync_at: '2020-01-02T00:00:00.000000'
                              refresh_since: null
                              data_available_from: null
                              monitoring_type: STANDARD
                          income:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                      - id: b09dbb96-85e2-44fd-87db-4b891b60745a
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: 79be6897-e0f4-43d2-8df3-4af15b2862f0
                          name: Sam Curran
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        platform_username: sam.curran@gmail.com
                        profile_pic_url: '2020-01-01'
                        status: CONNECTED
                        platform_profile_name: samECB
                        platform_profile_id: '2755104190'
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                            audience:
                              status: SYNCED
                              last_sync_at: '2020-01-02T00:00:00.000000'
                              refresh_since: null
                              data_available_from: null
                              monitoring_type: STANDARD
                      - id: e42ad363-6e49-4b69-9078-41f8820284e0
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: c9342ccd-14ec-4fb1-b6c1-8dfc5df7c518
                          name: Jerry Seinfeld
                        work_platform:
                          id: de55aeec-0dc8-4119-bf90-16b3d1f0c987
                          name: TikTok
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_tiktok.png'
                        platform_username: jerry.seinfeld@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: jerryWho
                        platform_profile_id: '126789012'
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 1fbac095-5343-4367-80b3-247f4c449ad4
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: c21c3a73-ade9-435b-8033-53d3e0549366
                          name: Lisa Kudrow
                        work_platform:
                          id: de55aeec-0dc8-4119-bf90-16b3d1f0c987
                          name: TikTok
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_tiktok.png'
                        platform_username: lisa.kudrow@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: smellyCat
                        platform_profile_id: '126789011'
                        platform_profile_published_at: '2020-01-01T00:00:00'
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: 35bbe1ed-4775-4054-a979-64d319e49a2a
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: bc200267-631f-42e2-b0d9-aae786ff85de
                          name: Justin Gatlin
                        work_platform:
                          id: e4de6c01-5b78-4fc0-a651-24f44134457b
                          name: Twitch
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitch.png'
                        platform_username: justin.gatlin@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: justinGames
                        platform_profile_id: 126789011xyz
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                      - id: afed96b3-be19-4383-aade-9ed4896a04e8
                        created_at: '2021-12-13T07:54:41.078254'
                        updated_at: '2021-12-13T07:54:41.078254'
                        user:
                          id: dbada397-ed37-48e5-98bf-018808a186d9
                          name: Simu Liu
                        work_platform:
                          id: e4de6c01-5b78-4fc0-a651-24f44134457b
                          name: Twitch
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitch.png'
                        platform_username: simu.liu@gmail.com
                        profile_pic_url: null
                        status: CONNECTED
                        platform_profile_name: shangGamer
                        platform_profile_id: 126789011xy234
                        platform_profile_published_at: null
                        data:
                          identity:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            monitoring_type: STANDARD
                          engagement:
                            status: SYNCED
                            last_sync_at: '2020-01-02T00:00:00.000000'
                            refresh_since: null
                            data_available_from: null
                            monitoring_type: STANDARD
                    metadata:
                      offset: 0
                      limit: 100
                      from_date: null
                      to_date: null
      description: Lists all Accounts. An Account represents the user account on the work platform end. A user can connect multiple account in the same or across multiple work platforms.
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/work_platform_id'
        - $ref: '#/components/parameters/user_id'
      tags:
        - Connect
  '/v1/accounts/{id}/disconnect':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        description: Unique identifier for the account.
        required: true
    post:
      summary: Disconnect an account
      operationId: v1DisconnectAccountById
      responses:
        '200':
          description: Returns summary of the deleted account object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisconnectAccountResponse'
              examples:
                Example:
                  value:
                    id: f5e89cea-18b6-4479-a4dd-64a48217e759
                    created_at: '2021-12-13T07:54:41.078254'
                    updated_at: '2022-03-29T17:47:45.428046'
                    user:
                      id: ac0d5da5-f8c1-4139-8945-825986da9c1e
                      name: Chris Evans
                    work_platform:
                      id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                      name: Instagram
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                    status: NOT_CONNECTED
      description: |-
        Disconnect the supplied account id. An Account represents the user account on the work platform end.

        Triggers the "ACCOUNTS.DISCONNECTED" webhook, [read more](../../../API/webhook-events#accounts).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Empty JSON
      tags:
        - Connect
  '/v1/profiles/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the profile.
    get:
      summary: Retrieve a profile
      tags:
        - Identity
      responses:
        '200':
          description: Returns Profile object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              examples:
                Instagram:
                  value:
                    id: 9bd39495-ad21-40f7-a8a6-9c8cf9d6a822
                    created_at: '2021-11-08T18:53:18.337805'
                    updated_at: '2021-11-08T18:53:18.337805'
                    user:
                      id: 28722faa-5356-483d-a57b-384fa01859dd
                      name: Robert Downey
                    account:
                      id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                      platform_username: robert.downey@gmail.com
                    work_platform:
                      id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                      name: Instagram
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                    platform_username: robertdowney
                    full_name: Robert Downey
                    first_name: null
                    last_name: null
                    nick_name: null
                    url: 'https://www.instagram.com/robertdowney/'
                    introduction: null
                    image_url: 'https://www.instagram.com/p/CII66H6h2HX/'
                    date_of_birth: null
                    external_id: robertdowney
                    platform_account_type: null
                    category: null
                    website: null
                    reputation:
                      follower_count: 78976
                      following_count: 567
                      subscriber_count: null
                      content_count: null
                      content_group_count: null
                      watch_time_in_hours: null
                    emails: []
                    phone_numbers: []
                    addresses: []
                    gender: MALE
                    country: US
                    platform_profile_name: null
                    platform_profile_id: null
                    platform_profile_published_at: null
                    is_verified: true
                    is_business: true
                YouTube:
                  value:
                    id: 3640aa41-55d3-4198-9092-ef9ced03d7fb
                    created_at: '2021-11-08T18:53:18.337805'
                    updated_at: '2021-11-08T18:53:18.337805'
                    user:
                      id: b0562ead-6282-404f-9e63-9da7bc0f838f
                      name: Mark Ruffalo
                    account:
                      id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                      platform_username: mark.ruffalo@gmail.com
                    work_platform:
                      id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                      name: YouTube
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                    platform_username: markruffalo
                    full_name: Mark Ruffalo
                    first_name: Mark
                    last_name: Ruffalo
                    nick_name: markruffalo
                    url: 'https://www.youtube.com/c/markruffalo/about'
                    introduction: null
                    image_url: 'https://yt3.ggpht.com/ytc/AAUvwngyIhZUrX85za9RIXCzYNiFzaAoBFuP_ZKBWlVN=s176-c-k-c0x00ffffff-no-rj'
                    date_of_birth: '1989-11-26'
                    external_id: markruffalo
                    platform_account_type: null
                    category: null
                    website: null
                    reputation:
                      follower_count: null
                      following_count: null
                      subscriber_count: 12345
                      content_count: null
                      content_group_count: null
                      watch_time_in_hours: null
                    emails:
                      - type: WORK
                        email_id: mark.ruffalo@gmail.com
                    phone_numbers:
                      - type: WORK
                        phone_number: '+1987654321'
                    addresses:
                      - type: WORK
                        address: '122 Alpine Avenue, Sunnyvale, CA, USA'
                    gender: MALE
                    country: US
                    platform_profile_name: CBSE WINNERS
                    platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                    platform_profile_published_at: '2020-01-01T00:00:00'
                    is_verified: false
                    is_business: false
                Twitter:
                  value:
                    id: 9dd695b0-03e1-47fe-b368-a366d5c3b0f1
                    created_at: '2021-11-08T18:53:18.337805'
                    updated_at: '2021-11-08T18:53:18.337805'
                    user:
                      id: 8ba1ac32-0f3c-4cf0-8d89-79a183258f6a
                      name: Peter Parker
                    account:
                      id: 3839334f-6c01-4ad3-8ff1-68e106148702
                      platform_username: peter.parker@gmail.com
                    work_platform:
                      id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                      name: Twitter
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                    platform_username: peterparker
                    full_name: Peter Parker
                    first_name: null
                    last_name: null
                    nick_name: null
                    url: 'https://twitter.com/peterparker'
                    introduction: null
                    image_url: 'https://twitter.com/peterparker/photo'
                    date_of_birth: '1989-11-26'
                    external_id: peterparker
                    platform_account_type: null
                    category: null
                    website: null
                    reputation:
                      follower_count: 78976
                      following_count: 567
                      subscriber_count: null
                      content_count: null
                      content_group_count: null
                      watch_time_in_hours: null
                    emails: []
                    phone_numbers: []
                    addresses:
                      - type: WORK
                        address: '122 Alpine Avenue, Sunnyvale, CA, USA'
                    gender: null
                    country: US
                    platform_profile_name: null
                    platform_profile_id: null
                    platform_profile_published_at: '2016-01-01T00:00:00'
                    is_verified: false
                    is_business: false
                TikTok:
                  value:
                    id: 74b3c232-2a70-429d-96d7-b4663045b474
                    created_at: '2021-11-08T18:53:18.337805'
                    updated_at: '2021-11-08T18:53:18.337805'
                    user:
                      id: c9342ccd-14ec-4fb1-b6c1-8dfc5df7c518
                      name: Jerry Seinfeld
                    account:
                      id: e42ad363-6e49-4b69-9078-41f8820284e0
                      platform_username: jerry.seinfeld@gmail.com
                    work_platform:
                      id: de55aeec-0dc8-4119-bf90-16b3d1f0c987
                      name: TikTok
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_tiktok.png'
                    platform_username: jerryWho
                    full_name: null
                    first_name: null
                    last_name: null
                    nick_name: null
                    url: 'https://www.tiktok.com/jerryWho/'
                    introduction: null
                    image_url: 'https://www.tiktok.com/p/CII66H6h2HX/'
                    date_of_birth: null
                    external_id: '126789012'
                    platform_account_type: null
                    category: null
                    website: null
                    reputation:
                      follower_count: 25000
                      following_count: 500
                      subscriber_count: null
                      content_count: null
                      content_group_count: null
                      watch_time_in_hours: null
                    emails: []
                    phone_numbers: []
                    addresses: []
                    gender: null
                    country: null
                    platform_profile_name: jerryWho
                    platform_profile_id: '126789012'
                    platform_profile_published_at: null
                    is_verified: false
                    is_business: false
                Twitch:
                  value:
                    id: 135ea13d-5d32-43b0-a3d7-11e186cc58b7
                    created_at: '2021-11-08T18:53:18.337805'
                    updated_at: '2021-11-08T18:53:18.337805'
                    user:
                      id: bc200267-631f-42e2-b0d9-aae786ff85de
                      name: Justin Gatlin
                    account:
                      id: 35bbe1ed-4775-4054-a979-64d319e49a2a
                      platform_username: justin.gatlin@gmail.com
                    work_platform:
                      id: e4de6c01-5b78-4fc0-a651-24f44134457b
                      name: Twitch
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitch.png'
                    platform_username: justinGames
                    full_name: Justin Gatlin
                    first_name: null
                    last_name: null
                    nick_name: null
                    url: 'https://twitch.tv/justinGames'
                    introduction: null
                    image_url: 'https://twitch.tv/justinGames/photo'
                    date_of_birth: null
                    external_id: 126789011xyz
                    platform_account_type: null
                    category: null
                    website: null
                    reputation:
                      follower_count: 55000
                      following_count: 55
                      subscriber_count: null
                      content_count: null
                      content_group_count: null
                      watch_time_in_hours: null
                    emails:
                      - type: WORK
                        email_id: justin.gatlin@gmail.com
                    phone_numbers: []
                    addresses: []
                    gender: null
                    country: null
                    platform_profile_name: justinGames
                    platform_profile_id: 126789011xyz
                    platform_profile_published_at: '2018-01-01T00:00:00'
                    is_verified: false
                    is_business: false
                Facebook:
                  value:
                    id: d11d254b-4258-4d69-b5f8-c92ba4faf971
                    created_at: '2021-11-08T18:53:18.337805'
                    updated_at: '2021-11-08T18:53:18.337805'
                    user:
                      id: c931d928-c17d-49ee-89d0-ab18a825bd9b
                      name: Chad Becker
                    account:
                      id: 9ccb74b5-6074-4ec8-b597-830cbb94f103
                      platform_username: chad.becker@gmail.com
                    work_platform:
                      id: ad2fec62-2987-40a0-89fb-23485972598c
                      name: Facebook
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
                    platform_username: chadbecker
                    full_name: Chad Becker
                    first_name: Chad
                    last_name: Becker
                    nick_name: null
                    url: 'https://www.facebook.com/124638647630368'
                    introduction: Official page of Chef Chad Becker
                    image_url: 'https://scontent.fblr2-1.fna.fbcdn.net/v/t1.18169-1/cp0/c12.12.156.156a/s50x50/216005_336678339759730_918813456_n.jpg'
                    date_of_birth: '1989-11-26'
                    external_id: '124638647630368'
                    platform_account_type: null
                    category: null
                    website: null
                    reputation:
                      follower_count: 78976
                      following_count: null
                      subscriber_count: null
                      content_count: null
                      content_group_count: null
                      watch_time_in_hours: null
                    emails:
                      - type: WORK
                        email_id: chad.becker@gmail.com
                    phone_numbers: []
                    addresses:
                      - type: WORK
                        address: San Francisco
                    gender: MALE
                    country: US
                    platform_profile_name: Chad Becker Official
                    platform_profile_id: '124638647630368'
                    platform_profile_published_at: '2018-01-01T00:00:00'
                    is_verified: true
                    is_business: true
      operationId: v1StreamGetProfileById
      description: |-
        Retrieve the information of the Profile with the supplied Profile id. Profile object contains information related to the identity of the user like name, address, contact details, etc. The data in a profile is tied to a particular work platform account that the user has connected to via Connect SDK.

        Usually used in conjunction with the "PROFILES.*" webhooks, [read more](../../../API/webhook-events#profiles).
      parameters: []
  /v1/profiles:
    get:
      summary: Retrieve all profiles
      tags:
        - Identity
      responses:
        '200':
          description: Returns all Profiles objects.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileList'
              examples:
                Example:
                  value:
                    data:
                      - id: 9dd695b0-03e1-47fe-b368-a366d5c3b0f1
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: 8ba1ac32-0f3c-4cf0-8d89-79a183258f6a
                          name: Peter Parker
                        account:
                          id: 3839334f-6c01-4ad3-8ff1-68e106148702
                          platform_username: peter.parker@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        platform_username: peterparker
                        full_name: Peter Parker
                        first_name: null
                        last_name: null
                        nick_name: null
                        url: 'https://twitter.com/peterparker'
                        introduction: null
                        image_url: 'https://twitter.com/peterparker/photo'
                        date_of_birth: '1989-11-26'
                        external_id: peterparker
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: 78976
                          following_count: 567
                          subscriber_count: null
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails: []
                        phone_numbers: []
                        addresses:
                          - type: WORK
                            address: '122 Alpine Avenue, Sunnyvale, CA, USA'
                        gender: null
                        country: US
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: '2016-01-01T00:00:00'
                        is_verified: false
                        is_business: false
                      - id: 986a12b9-f4df-4dbc-892d-cc4c3490afdf
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: 3b38559b-892f-475d-b4df-7248ef1fd405
                          name: Jonah Hill
                        account:
                          id: a3970259-6740-4131-9058-2f5a4c0d17fa
                          platform_username: jonah.hill@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        platform_username: realJonah
                        full_name: Jonah Hill
                        first_name: null
                        last_name: null
                        nick_name: null
                        url: 'https://twitter.com/realJonah'
                        introduction: They call me Jonah
                        image_url: 'https://twitter.com/realJonah/photo'
                        date_of_birth: null
                        external_id: realJonah
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: 78976
                          following_count: 20000
                          subscriber_count: null
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails: []
                        phone_numbers: []
                        addresses:
                          - type: WORK
                            address: San Francisco
                        gender: null
                        country: San Francisco
                        platform_profile_name: realJonah
                        platform_profile_id: '2725104191'
                        platform_profile_published_at: '2016-01-01T00:00:00'
                        is_verified: true
                        is_business: false
                      - id: 9bd39495-ad21-40f7-a8a6-9c8cf9d6a822
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: 28722faa-5356-483d-a57b-384fa01859dd
                          name: Robert Downey
                        account:
                          id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                          platform_username: robert.downey@gmail.com
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        platform_username: robertdowney
                        full_name: Robert Downey
                        first_name: null
                        last_name: null
                        nick_name: null
                        url: 'https://www.instagram.com/robertdowney/'
                        introduction: null
                        image_url: 'https://www.instagram.com/p/CII66H6h2HX/'
                        date_of_birth: null
                        external_id: robertdowney
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: 78976
                          following_count: 567
                          subscriber_count: null
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails: []
                        phone_numbers: []
                        addresses: []
                        gender: MALE
                        country: US
                        platform_profile_name: null
                        platform_profile_id: null
                        platform_profile_published_at: null
                        is_verified: true
                        is_business: true
                      - id: 3640aa41-55d3-4198-9092-ef9ced03d7fb
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: b0562ead-6282-404f-9e63-9da7bc0f838f
                          name: Mark Ruffalo
                        account:
                          id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                          platform_username: mark.ruffalo@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        platform_username: markruffalo
                        full_name: Mark Ruffalo
                        first_name: Mark
                        last_name: Ruffalo
                        nick_name: markruffalo
                        url: 'https://www.youtube.com/c/markruffalo/about'
                        introduction: null
                        image_url: 'https://yt3.ggpht.com/ytc/AAUvwngyIhZUrX85za9RIXCzYNiFzaAoBFuP_ZKBWlVN=s176-c-k-c0x00ffffff-no-rj'
                        date_of_birth: '1989-11-26'
                        external_id: markruffalo
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: null
                          following_count: null
                          subscriber_count: 12345
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails:
                          - type: WORK
                            email_id: mark.ruffalo@gmail.com
                        phone_numbers:
                          - type: WORK
                            phone_number: '+1987654321'
                        addresses:
                          - type: WORK
                            address: '122 Alpine Avenue, Sunnyvale, CA, USA'
                        gender: MALE
                        country: US
                        platform_profile_name: CBSE WINNERS
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_published_at: '2020-01-01T00:00:00'
                        is_verified: false
                        is_business: false
                      - id: 983eb8df-84d2-4529-bf5f-2b9715267ebc
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: 79be6897-e0f4-43d2-8df3-4af15b2862f0
                          name: Sam Curran
                        account:
                          id: b09dbb96-85e2-44fd-87db-4b891b60745a
                          platform_username: sam.curran@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        platform_username: samcurran
                        full_name: Sam Curran
                        first_name: Sam
                        last_name: Curran
                        nick_name: samcurran
                        url: 'https://www.youtube.com/samcurran'
                        introduction: null
                        image_url: 'https://lh3.googleusercontent.com/a-/AOh14GjzD02WWiFEJYbado8BzKSEDfwt506ftikUApcgRQ=s100'
                        date_of_birth: '1989-11-26'
                        external_id: samcurran
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: null
                          following_count: null
                          subscriber_count: 1500
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails:
                          - type: WORK
                            email_id: sam.curran@gmail.com
                        phone_numbers:
                          - type: WORK
                            phone_number: '+1987654322'
                        addresses:
                          - type: WORK
                            address: '123 Alpine Avenue, Sunnyvale, CA, USA'
                        gender: MALE
                        country: US
                        platform_profile_name: Cricket ECB
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfM55
                        platform_profile_published_at: '2020-01-01T00:00:00'
                        is_verified: true
                        is_business: false
                      - id: 74b3c232-2a70-429d-96d7-b4663045b474
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: c9342ccd-14ec-4fb1-b6c1-8dfc5df7c518
                          name: Jerry Seinfeld
                        account:
                          id: e42ad363-6e49-4b69-9078-41f8820284e0
                          platform_username: jerry.seinfeld@gmail.com
                        work_platform:
                          id: de55aeec-0dc8-4119-bf90-16b3d1f0c987
                          name: TikTok
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_tiktok.png'
                        platform_username: jerryWho
                        full_name: null
                        first_name: null
                        last_name: null
                        nick_name: null
                        url: 'https://www.tiktok.com/jerryWho/'
                        introduction: null
                        image_url: 'https://www.tiktok.com/p/CII66H6h2HX/'
                        date_of_birth: null
                        external_id: '126789012'
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: 25000
                          following_count: 500
                          subscriber_count: null
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails: []
                        phone_numbers: []
                        addresses: []
                        gender: null
                        country: null
                        platform_profile_name: jerryWho
                        platform_profile_id: '126789012'
                        platform_profile_published_at: null
                        is_verified: false
                        is_business: false
                      - id: a97566ef-7ccc-4757-a6a8-7cb698420504
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: c21c3a73-ade9-435b-8033-53d3e0549366
                          name: Lisa Kudrow
                        account:
                          id: 1fbac095-5343-4367-80b3-247f4c449ad4
                          platform_username: lisa.kudrow@gmail.com
                        work_platform:
                          id: de55aeec-0dc8-4119-bf90-16b3d1f0c987
                          name: TikTok
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_tiktok.png'
                        platform_username: smellyCat
                        full_name: null
                        first_name: null
                        last_name: null
                        nick_name: null
                        url: 'https://www.tiktok.com/smellyCat/'
                        introduction: null
                        image_url: 'https://www.tiktok.com/p/CII66H6h2HX/'
                        date_of_birth: null
                        external_id: '126789011'
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: 3500
                          following_count: 1000
                          subscriber_count: null
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails: []
                        phone_numbers: []
                        addresses: []
                        gender: null
                        country: null
                        platform_profile_name: smellyCat
                        platform_profile_id: '126789011'
                        platform_profile_published_at: null
                        is_verified: false
                        is_business: false
                      - id: 135ea13d-5d32-43b0-a3d7-11e186cc58b7
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: bc200267-631f-42e2-b0d9-aae786ff85de
                          name: Justin Gatlin
                        account:
                          id: 35bbe1ed-4775-4054-a979-64d319e49a2a
                          platform_username: justin.gatlin@gmail.com
                        work_platform:
                          id: e4de6c01-5b78-4fc0-a651-24f44134457b
                          name: Twitch
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitch.png'
                        platform_username: justinGames
                        full_name: Justin Gatlin
                        first_name: null
                        last_name: null
                        nick_name: null
                        url: 'https://twitch.tv/justinGames'
                        introduction: null
                        image_url: 'https://twitch.tv/justinGames/photo'
                        date_of_birth: null
                        external_id: 126789011xyz
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: 55000
                          following_count: 55
                          subscriber_count: null
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails:
                          - type: WORK
                            email_id: justin.gatlin@gmail.com
                        phone_numbers: []
                        addresses: []
                        gender: null
                        country: null
                        platform_profile_name: justinGames
                        platform_profile_id: 126789011xyz
                        platform_profile_published_at: '2018-01-01T00:00:00'
                        is_verified: false
                        is_business: false
                      - id: 3c47275b-fef7-4dfb-8cec-6d5d4e8ec9f3
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: dbada397-ed37-48e5-98bf-018808a186d9
                          name: Simu Liu
                        account:
                          id: afed96b3-be19-4383-aade-9ed4896a04e8
                          platform_username: simu.liu@gmail.com
                        work_platform:
                          id: e4de6c01-5b78-4fc0-a651-24f44134457b
                          name: Twitch
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitch.png'
                        platform_username: shangGamer
                        full_name: Simu Liu
                        first_name: null
                        last_name: null
                        nick_name: null
                        url: 'https://twitch.tv/shangGamer'
                        introduction: null
                        image_url: 'https://twitch.tv/shangGamer/photo'
                        date_of_birth: null
                        external_id: 126789011xy234
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: 65000
                          following_count: 25
                          subscriber_count: null
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails:
                          - type: WORK
                            email_id: simu.liu@gmail.com
                        phone_numbers: []
                        addresses: []
                        gender: null
                        country: null
                        platform_profile_name: shangGamer
                        platform_profile_id: 126789011xy234
                        platform_profile_published_at: '2018-01-01T00:00:00'
                        is_verified: false
                        is_business: false
                      - id: d11d254b-4258-4d69-b5f8-c92ba4faf971
                        created_at: '2021-11-08T18:53:18.337805'
                        updated_at: '2021-11-08T18:53:18.337805'
                        user:
                          id: c931d928-c17d-49ee-89d0-ab18a825bd9b
                          name: Chad Becker
                        account:
                          id: 9ccb74b5-6074-4ec8-b597-830cbb94f103
                          platform_username: chad.becker@gmail.com
                        work_platform:
                          id: ad2fec62-2987-40a0-89fb-23485972598c
                          name: Facebook
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
                        platform_username: chadbecker
                        full_name: Chad Becker
                        first_name: Chad
                        last_name: Becker
                        nick_name: null
                        url: 'https://www.facebook.com/124638647630368'
                        introduction: Official page of Chef Chad Becker
                        image_url: 'https://scontent.fblr2-1.fna.fbcdn.net/v/t1.18169-1/cp0/c12.12.156.156a/s50x50/216005_336678339759730_918813456_n.jpg'
                        date_of_birth: '1989-11-26'
                        external_id: '124638647630368'
                        platform_account_type: null
                        category: null
                        website: null
                        reputation:
                          follower_count: 78976
                          following_count: null
                          subscriber_count: null
                          content_count: null
                          content_group_count: null
                          watch_time_in_hours: null
                        emails:
                          - type: WORK
                            email_id: chad.becker@gmail.com
                        phone_numbers: []
                        addresses:
                          - type: WORK
                            address: San Francisco
                        gender: MALE
                        country: US
                        platform_profile_name: Chad Becker Official
                        platform_profile_id: '124638647630368'
                        platform_profile_published_at: '2018-01-01T00:00:00'
                        is_verified: true
                        is_business: true
                    metadata:
                      offset: 0
                      limit: 10
                      from_date: null
                      to_date: null
      operationId: v1StreamGetProfiles
      description: 'Lists all Profiles. Profile object contains information related to the identity of the user like name, address, contact details, etc. The data in a profile is tied to a particular work platform account that the user has connected to via Connect SDK.'
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/account_id'
        - $ref: '#/components/parameters/work_platform_id'
        - $ref: '#/components/parameters/user_id'
    parameters: []
  /v1/profiles/refresh:
    post:
      summary: Refresh a profile
      operationId: v1RefreshProfile
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
      description: |-
        Refresh profile for a connected account. Once InsightIQ processes the request, you can fetch the updated profile by calling the [retrieve a profile API](../reference/openapi.v1.yml/paths/~1v1~1profiles~1{id}/get).


        Subscribe to the ["PROFILES.UPDATED" webhook](../../../API/webhook-events#profiles) to receive a notification once the request is completed.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - Identity
    parameters: []
  /v1/audience:
    get:
      summary: Retrieve audience demographics
      tags:
        - Identity
      responses:
        '200':
          description: Returns all Profiles objects.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Demographics'
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    created_at: '2022-03-27T12:56:34.534978'
                    updated_at: '2022-03-27T12:56:34.534978'
                    user:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: John Doe
                    account:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      platform_username: john.doe@gmail.com
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    countries:
                      - code: US
                        value: 78.9
                    cities:
                      - name: Boulder
                        value: 45.6
                    gender_age_distribution:
                      - gender: FEMALE
                        age_range: 13-18
                        value: 12.3
      operationId: v1GetAudienceDemographics
      description: |-
        Retrieves audience demographics for the given account. Demographics object contains information related to the audience of the user: countries, cities, age & gender distribution, etc. The values in this data are in percentages and are tied to a particular work platform account. This data is lifetime data.

        Usually used in conjunction with the "PROFILES_AUDIENCE.*" webhooks, [read more](../../../API/webhook-events#profile-audience).
      parameters:
        - $ref: '#/components/parameters/account_id_mandatory'
    parameters: []
  '/v1/social/contents/{id}':
    get:
      summary: Retrieve a content item
      tags:
        - Engagement
      responses:
        '200':
          description: Returns Content object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
              examples:
                YouTube:
                  value:
                    id: ca094d06-f9c5-4120-b67d-a6438ab2225b
                    created_at: '2021-11-23T19:37:05.526900'
                    updated_at: '2021-11-23T19:37:05.526900'
                    user:
                      id: b0562ead-6282-404f-9e63-9da7bc0f838f
                      name: Mark Ruffalo
                    account:
                      id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                      platform_username: mark.ruffalo@gmail.com
                    work_platform:
                      id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                      name: YouTube
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                    engagement:
                      like_count: 1097
                      dislike_count: 234
                      comment_count: 45
                      impression_organic_count: 54
                      reach_organic_count: 8767
                      save_count: 24
                      view_count: 234
                      watch_time_in_hours: 0.5
                      share_count: null
                      impression_paid_count: null
                      reach_paid_count: null
                      additional_info: null
                    external_id: cc5db315-a81b-4773-804f-886c3d69c827
                    title: Lesson plan for SATs - Physics
                    format: VIDEO
                    type: VIDEO
                    url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                    media_url: null
                    duration: null
                    description: Lesson plan for SATs - Physics
                    visibility: PUBLIC
                    thumbnail_url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                    published_at: '2021-05-26T00:00:00'
                    platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                    platform_profile_name: CBSE WINNERS
                    sponsored: null
                    collaboration: null
                Instagram:
                  value:
                    id: d37d8394-fe92-414c-9d45-1066bb8a2525
                    created_at: '2021-11-08T18:53:19.836901'
                    updated_at: '2021-11-08T18:53:19.836901'
                    user:
                      id: 28722faa-5356-483d-a57b-384fa01859dd
                      name: Robert Downey
                    account:
                      id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                      platform_username: robert.downey@gmail.com
                    work_platform:
                      id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                      name: Instagram
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                    engagement:
                      like_count: 1097
                      dislike_count: null
                      comment_count: 45
                      impression_organic_count: 54
                      reach_organic_count: 8767
                      save_count: 24
                      view_count: 234
                      watch_time_in_hours: null
                      share_count: null
                      impression_paid_count: null
                      reach_paid_count: null
                      additional_info:
                        followers_gained: 5
                        profile_visits: 69
                        bio_link_clicked: 17
                        story_navigation:
                          automatic_forwards: 34
                          tap_backs: 7
                          tap_exits: 12
                          tap_forwards: 9
                          swipe_backs: 6
                          swipe_downs: 4
                          swipe_forwards: 3
                          swipe_ups: 2
                    external_id: df50e598-0849-4291-8e92-4cf6c4f209ee
                    title: Productivity Grease Monkey
                    format: IMAGE
                    type: STORY
                    url: 'https://www.instagram.com/stories/aliabdaal/3046835439779586649/'
                    media_url: null
                    duration: null
                    description: null
                    visibility: PUBLIC
                    thumbnail_url: null
                    published_at: '2021-05-26T00:00:00'
                    platform_profile_id: null
                    platform_profile_name: null
                    sponsored: null
                    collaboration: null
      operationId: v1StreamGetContentsById
      description: |-
        Retrieve the information of the Content with the supplied Content id.

        Usually used in conjunction with the "CONTENTS.*" webhooks, [read more](../../../API/webhook-events#content).
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the content
  /v1/social/contents:
    get:
      summary: Retrieve all content items
      tags:
        - Engagement
      responses:
        '200':
          description: Returns all Contents objects.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentList'
              examples:
                Example:
                  value:
                    data:
                      - id: ab5eadc8-e8c2-46f9-b000-f5a70bc0b5a8
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 3b38559b-892f-475d-b4df-7248ef1fd405
                          name: Jonah Hill
                        account:
                          id: a3970259-6740-4131-9058-2f5a4c0d17fa
                          platform_username: jonah.hill@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        engagement:
                          like_count: 100
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: null
                          save_count: null
                          view_count: 200
                          watch_time_in_hours: null
                          share_count: 12
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        title: Shout to @tuckerBud for a fab NFT drop
                        format: TEXT
                        type: TWEET
                        url: 'https://twitter.com/theRealJonah/status/1453423367340580866'
                        media_url: null
                        duration: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: 'https://twitter.com/realJonah/1453423367340580867'
                        published_at: '2021-05-28T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: 65c3f449-ee80-4b31-aa51-6dc7b0f1cb97
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 3b38559b-892f-475d-b4df-7248ef1fd405
                          name: Jonah Hill
                        account:
                          id: a3970259-6740-4131-9058-2f5a4c0d17fa
                          platform_username: jonah.hill@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        engagement:
                          like_count: 100
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: null
                          save_count: null
                          view_count: 200
                          watch_time_in_hours: null
                          share_count: 12
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 14ea686e-7c2f-4077-8795-1495c989dc60
                        title: 'Need to do some grown up movie, HMU with scrips'
                        format: TEXT
                        type: TWEET
                        url: 'https://twitter.com/theRealJonah/status/1453423367340580866'
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: 'https://twitter.com/realJonah/1453423367340580867'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: ca094d06-f9c5-4120-b67d-a6438ab2225b
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: b0562ead-6282-404f-9e63-9da7bc0f838f
                          name: Mark Ruffalo
                        account:
                          id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                          platform_username: mark.ruffalo@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        engagement:
                          like_count: 1097
                          dislike_count: 234
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: 0.5
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: cc5db315-a81b-4773-804f-886c3d69c827
                        title: Lesson plan for SATs - Physics
                        format: VIDEO
                        type: VIDEO
                        url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        media_url: null
                        description: Lesson plan for SATs - Physics
                        visibility: PUBLIC
                        thumbnail_url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: CBSE WINNERS
                        sponsored: null
                        collaboration: null
                      - id: d37d8394-fe92-414c-9d45-1066bb8a2525
                        created_at: '2021-11-08T18:53:19.836901'
                        updated_at: '2021-11-08T18:53:19.836901'
                        user:
                          id: 28722faa-5356-483d-a57b-384fa01859dd
                          name: Robert Downey
                        account:
                          id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                          platform_username: robert.downey@gmail.com
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        engagement:
                          like_count: 1097
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: null
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: df50e598-0849-4291-8e92-4cf6c4f209ee
                        title: US Tour
                        format: IMAGE
                        type: IMAGE
                        url: ''
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: null
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: ffc1b919-e500-445b-8d4f-3292e06d320f
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 28722faa-5356-483d-a57b-384fa01859dd
                          name: Robert Downey
                        account:
                          id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                          platform_username: robert.downey@gmail.com
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        engagement:
                          like_count: 1097
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: null
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 40fd3111-e24a-49ac-80a3-01c906df72bc
                        title: 'Just used @venmo, mind = blown!'
                        format: IMAGE
                        type: POST
                        url: 'https://www.instagram.com/p/CWTeRhIvA4X/'
                        media_url: null
                        description: 'Just used @venmo, mind = blown!'
                        visibility: PUBLIC
                        thumbnail_url: 'https://www.instagram.com/p/CWTeRhIvA4X/'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: 93f9c7a6-e328-41dd-ac2f-9f5c8a5095d8
                        created_at: '2021-11-08T18:53:19.836901'
                        updated_at: '2021-11-08T18:53:19.836901'
                        user:
                          id: b0562ead-6282-404f-9e63-9da7bc0f838f
                          name: Mark Ruffalo
                        account:
                          id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                          platform_username: mark.ruffalo@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        engagement:
                          like_count: 1097
                          dislike_count: 234
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: 0.5
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 59578863-ad3b-43dd-b5fd-249073acdf46
                        title: US Tour
                        format: VIDEO
                        type: VIDEO
                        url: ''
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: null
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: CBSE WINNERS
                        sponsored: null
                        collaboration: null
                      - id: 61b8866e-3392-4e91-b5ab-865842912ce8
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 8ba1ac32-0f3c-4cf0-8d89-79a183258f6a
                          name: Peter Parker
                        account:
                          id: 3839334f-6c01-4ad3-8ff1-68e106148702
                          platform_username: peter.parker@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        engagement:
                          like_count: 100
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: null
                          save_count: null
                          view_count: 200
                          watch_time_in_hours: null
                          share_count: 12
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 32f34e83-7078-4c2a-9789-897e3457ce50
                        title: The suit fitting didnt go too well @superman - need your tailor
                        format: TEXT
                        type: TWEET
                        url: 'https://twitter.com/peterparker/status/1453423367340580866'
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: 'https://twitter.com/peterparker/1453423367340580867'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: f48eec05-7a97-4530-8881-b85c659aba84
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 79be6897-e0f4-43d2-8df3-4af15b2862f0
                          name: Sam Curran
                        account:
                          id: b09dbb96-85e2-44fd-87db-4b891b60745a
                          platform_username: sam.curran@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        engagement:
                          like_count: 1097
                          dislike_count: 234
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: 0.5
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: fa489a4d-645d-4687-80e1-c6359be17ee3
                        title: Playing spin in the subcontinet - basics
                        format: VIDEO
                        type: VIDEO
                        url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        media_url: null
                        description: Playing spin in the subcontinet - basics
                        visibility: PUBLIC
                        thumbnail_url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: 7c0dd6f7-ab61-4838-8e33-73b2a3b8714e
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 79be6897-e0f4-43d2-8df3-4af15b2862f0
                          name: Sam Curran
                        account:
                          id: b09dbb96-85e2-44fd-87db-4b891b60745a
                          platform_username: sam.curran@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        engagement:
                          like_count: 1097
                          dislike_count: 234
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: 0.5
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: a5635d8d-96b4-4c3f-8a6a-ed2c9f69582d
                        title: Guide to acing the IPL
                        format: VIDEO
                        type: VIDEO
                        url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        media_url: null
                        description: Guide to acing the IPL
                        visibility: PUBLIC
                        thumbnail_url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: e2193c40-548d-4cf6-871c-6c4e9dfbce38
                        created_at: '2021-11-08T18:53:19.836901'
                        updated_at: '2021-11-08T18:53:19.836901'
                        user:
                          id: 8ba1ac32-0f3c-4cf0-8d89-79a183258f6a
                          name: Peter Parker
                        account:
                          id: 3839334f-6c01-4ad3-8ff1-68e106148702
                          platform_username: peter.parker@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        engagement:
                          like_count: 1097
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: null
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 1cec2e70-9912-4a19-ae9c-abc86561663f
                        title: Helping creators monetize and manage their content.
                        format: OTHER
                        type: TWEET
                        url: 'https://twitter.com/KenM26/status/1396705211620552706'
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: 'https://twitter.com/peterparker'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                    metadata:
                      offset: 0
                      limit: 10
                      from_date: null
                      to_date: null
      operationId: v1StreamGetContents
      description: Lists all Contents.
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/content_from_date'
        - $ref: '#/components/parameters/content_to_date'
        - $ref: '#/components/parameters/account_id_mandatory'
    parameters: []
  /v1/social/contents/refresh:
    post:
      summary: Refresh content items
      operationId: v1RefreshSocialContents
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
      description: |-
        Refresh content items for a connected account for the default refresh period, which is T-90 days for content items. Once InsightIQ processes the request, you can fetch the updated content items by calling the [retrieve content API](../reference/openapi.v1.yml/paths/~1v1~1social~1contents/get).


        Subscribe to the ["CONTENTS.ADDED" and "CONTENTS.UPDATED" webhooks](../../../API/webhook-events#content) to receive a notification once the request is completed. With webhooks, you should use the [retrieve content items in bulk API](../reference/openapi.v1.yml/paths/~1v1~1social~1contents~1search/post) for optimal performance.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - Engagement
    parameters: []
  /v1/social/contents/fetch-historic:
    post:
      summary: Fetch historic content items
      operationId: v1FetchHistoricSocialContents
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchHistoric'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                    from_date: '2019-08-24'
      description: |-
        Fetch content items for a connected account starting from a specific date till today by providing the `from_date`. Once InsightIQ processes the request, you can fetch the updated content items by calling the [retrieve content API](../reference/openapi.v1.yml/paths/~1v1~1social~1contents/get).


        Subscribe to the "CONTENTS.ADDED" and "CONTENTS.UPDATED" [webhooks](../../../API/webhook-events#content) to receive a notification once the request is completed. With webhooks, you should use the [retrieve content items in bulk API](../reference/openapi.v1.yml/paths/~1v1~1social~1contents~1search/post) for optimal performance.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchHistoric'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                  from_date: '2019-08-24'
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - Engagement
    parameters: []
  /v1/social/contents/search:
    post:
      summary: Retrieve content items in bulk
      operationId: postv1socialcontentssearch
      responses:
        '200':
          description: Returns all content objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: cfcc6603-1d8f-47d9-926a-4b91cc143105
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        engagement:
                          like_count: 42134
                          dislike_count: 342
                          comment_count: 4234
                          impression_organic_count: 4234
                          reach_organic_count: 34
                          save_count: 43
                          view_count: 42343
                          watch_time_in_hours: 1.5
                          share_count: 42343
                          impression_paid_count: 4234
                          reach_paid_count: 34
                        external_id: 12ccaf87
                        title: USA Tours
                        format: VIDEO
                        type: VIDEO
                        url: 'https://youtu.be/jzWweY4xPe8'
                        media_url: 'https://video.cdninstagram.com/v/t50.16885-16/273384537_472655704353078_8308247021721136693_n.mp4?_nc_cat=100&vs=661086908417570_1261186177&_nc_vs=HBksFQAYJEdGbUVTeEEyNlZ1NzRLMEJBRFd1NHJPbDBreHpidlZCQUFBRhUAAsgBABUAGCRHSnU0U3hEM2kwQ0VQVk1EQUM3S29OeTlueUJzYnZWQkFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMRUAACbG3%2FGq0JXjPxUCKAJDMywXQCOhysCDEm8YEmRhc2hfYmFzZWxpbmVfMV92MREAdewHAA%3D%3D&ccb=1-5&_nc_sid=59939d&efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjQ4MC5pZ3R2In0%3D&_nc_ohc=qcTIWWC39rQAX9xprW6&_nc_ht=video.cdninstagram.com&edm=AM6HXa8EAAAA&oh=00_AT85xcdCSq921RH5KCSfIukPMfk0QCajZEP5Ym4fY3p1Pw&oe=621D1EA5&_nc_rid=5d42feb0d5'
                        duration: null
                        description: US tours video.
                        visibility: PUBLIC
                        thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: CBSE WINNERS
                        sponsored:
                          is_sponsored: true
                          tags: string
                        collaboration:
                          has_collaborators: true
      description: |-
        Search content items in bulk by providing the IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["CONTENTS.ADDED" and "CONTENTS.UPDATED" webhook](../../../API/webhook-events#content) notifications and pass on to this API to get the updated content items.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - Engagement
    parameters: []
  '/v1/social/content-groups/{id}':
    get:
      summary: Retrieve a content group
      tags:
        - Engagement
      responses:
        '200':
          description: Returns Content Group object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentGroup'
              examples:
                Instagram:
                  value:
                    id: 0474ad16-2705-4fc7-bef8-d3fbc4d640ad
                    created_at: '2021-11-08T18:53:19.836901'
                    updated_at: '2021-11-08T18:53:19.836901'
                    user:
                      id: 28722faa-5356-483d-a57b-384fa01859dd
                      name: Robert Downey
                    account:
                      id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                      platform_username: robert.downey@gmail.com
                    work_platform:
                      id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                      name: Instagram
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                    engagement:
                      like_count: 1097
                      dislike_count: null
                      comment_count: 45
                      impression_organic_count: 54
                      reach_organic_count: 8767
                      save_count: 24
                      view_count: 234
                      watch_time_in_hours: null
                      share_count: null
                      impression_paid_count: null
                      reach_paid_count: null
                    external_id: b30523ca-f8e6-4b88-a853-8ed60aa820bf
                    title: Friends
                    format: COLLECTION
                    type: ALBUM
                    url: ''
                    description: null
                    visibility: PUBLIC
                    thumbnail_url: ''
                    published_at: '2021-05-26T00:00:00'
                    platform_profile_id: null
                    platform_profile_name: null
                    item_count: 1
                YouTube:
                  value:
                    id: ef4490d6-cd9b-4397-8e9b-cbbe81f48b1b
                    created_at: '2021-06-21T05:51:47.100581'
                    updated_at: '2021-06-21T05:51:47.100581'
                    user:
                      id: bf29c8bd-bfd0-4c6b-8e21-8a375ffb7bd7
                      name: Mark Ruffalo
                    account:
                      id: 1ec465d6-0850-41aa-bd17-7fb64ae04c29
                      platform_username: mark.ruffalo@gmail.com
                    work_platform:
                      id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                      name: YouTube
                      logo_url: 'https://insightiq.ai/storage/wp/youtube.png'
                    engagement:
                      like_count: 1097
                      dislike_count: 35
                      comment_count: 45
                      impression_organic_count: 54
                      reach_organic_count: 8767
                      save_count: 24
                      view_count: 234
                      watch_time_in_hours: 2.5
                      share_count: null
                      impression_paid_count: null
                      reach_paid_count: null
                    external_id: d5df88bc-5999-430d-9396-ada0db4c16eb
                    title: Family
                    format: VIDEO
                    type: PLAYLIST
                    url: 'https://youtube.com/fdfasfas'
                    description: US videos
                    visibility: PUBLIC
                    thumbnail_url: 'https://youtube.com/fdfasfas.png'
                    published_at: '2021-05-26T00:00:00'
                    platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                    platform_profile_name: CBSE WINNERS
                    item_count: 1
      operationId: v1StreamGetContentGroupsById
      description: |-
        Retrieve the information of the Content Group with the supplied Content Group id.

        Usually used in conjunction with the "CONTENT-GROUPS.*" webhooks, [read more](../../../API/webhook-events#content-groups).
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the content group
  /v1/social/content-groups:
    get:
      summary: Retrieve all content groups
      tags:
        - Engagement
      responses:
        '200':
          description: Returns all Content Groups objects.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentGroupList'
              examples:
                Example:
                  value:
                    data:
                      - id: 0474ad16-2705-4fc7-bef8-d3fbc4d640ad
                        created_at: '2021-11-08T18:53:19.836901'
                        updated_at: '2021-11-08T18:53:19.836901'
                        user:
                          id: 28722faa-5356-483d-a57b-384fa01859dd
                          name: Robert Downey
                        account:
                          id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                          platform_username: robert.downey@gmail.com
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        engagement:
                          like_count: 1097
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: null
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: b30523ca-f8e6-4b88-a853-8ed60aa820bf
                        title: Friends
                        format: COLLECTION
                        type: ALBUM
                        url: ''
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: ''
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        item_count: 1
                    metadata:
                      offset: 0
                      limit: 100
                      from_date: null
                      to_date: null
      operationId: v1StreamGetContentGroups
      description: Returns all Content Groups objects.
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/content_from_date'
        - $ref: '#/components/parameters/content_to_date'
        - $ref: '#/components/parameters/account_id_mandatory'
    parameters: []
  /v1/social/content-groups/refresh:
    post:
      summary: Refresh content groups
      operationId: v1RefreshSocialContentGroups
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
      description: |-
        Refresh content groups for a connected account for the default refresh period, which is T-90 days for content groups. Once InsightIQ processes the request, you can fetch the updated content items by calling the [retrieve content groups API](../reference/openapi.v1.yml/paths/~1v1~1social~1content-groups/get).


        Subscribe to the ["CONTENT-GROUPS.ADDED" and "CONTENT-GROUPS.UPDATED" webhooks](../../../API/webhook-events#content-groups) to receive a notification once the request is completed. With webhooks, you should use the [retrieve content groups in bulk API](../reference/openapi.v1.yml/paths/~1v1~1social~1content-groups~1search/post) for optimal performance.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - Engagement
    parameters: []
  /v1/social/content-groups/fetch-historic:
    post:
      summary: Fetch historic content groups
      operationId: v1FetchHistoricSocialContentGroups
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchHistoric'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                    from_date: '2019-08-24'
      description: |-
        Fetch content groups for a connected account starting from a specific date till today by providing the `from_date`. Once InsightIQ processes the request, you can fetch the updated content groups by calling the [retrieve content groups API](../reference/openapi.v1.yml/paths/~1v1~1social~1content-groups/get).


        Subscribe to the ["CONTENT-GROUPS.ADDED" and "CONTENT-GROUPS.UPDATED" webhooks](../../../API/webhook-events#content-groups) to receive a notification once the request is completed. With webhooks, you should use the [retrieve content groups in bulk API](../reference/openapi.v1.yml/paths/~1v1~1social~1content-groups~1search/post) for optimal performance.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchHistoric'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                  from_date: '2019-08-24'
      tags:
        - Engagement
    parameters: []
  /v1/social/content-groups/search:
    post:
      summary: Retrieve content group items in bulk
      operationId: postv1socialcontentgroupssearch
      responses:
        '200':
          description: Returns all content group objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentGroupSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: cfcc6603-1d8f-47d9-926a-4b91cc143105
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        engagement:
                          like_count: 3455
                          dislike_count: 52
                          comment_count: 53
                          impression_organic_count: 545
                          reach_organic_count: 453
                          save_count: 5423
                          view_count: 345
                          watch_time_in_hours: 1.5
                          share_count: 5423
                          impression_paid_count: 545
                          reach_paid_count: 453
                        external_id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                        title: USA Tours
                        format: VIDEO
                        type: ALBUM
                        url: 'https://youtu.be/jzWweY4xPe8'
                        description: US tours video.
                        visibility: PUBLIC
                        thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: CBSE WINNERS
                        item_count: 0
      description: |-
        Search content group items in bulk by providing the IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["CONTENT-GROUPS.ADDED" and "CONTENT-GROUPS.UPDATED" webhook](../../../API/webhook-events#content-groups) notifications and pass on to this API to get the updated content group items.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentGroupSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - Engagement
    parameters: []
  '/v1/publications/contents/{id}':
    get:
      summary: Retrieve a publication content item
      tags:
        - Engagement
      responses:
        '200':
          description: Returns Content object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
              examples:
                YouTube:
                  value:
                    id: ca094d06-f9c5-4120-b67d-a6438ab2225b
                    created_at: '2021-11-23T19:37:05.526900'
                    updated_at: '2021-11-23T19:37:05.526900'
                    user:
                      id: b0562ead-6282-404f-9e63-9da7bc0f838f
                      name: Mark Ruffalo
                    account:
                      id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                      platform_username: mark.ruffalo@gmail.com
                    work_platform:
                      id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                      name: YouTube
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                    engagement:
                      like_count: 1097
                      dislike_count: 234
                      comment_count: 45
                      impression_organic_count: 54
                      reach_organic_count: 8767
                      save_count: 24
                      view_count: 234
                      watch_time_in_hours: 0.5
                      share_count: null
                      impression_paid_count: null
                      reach_paid_count: null
                      additional_info: null
                    external_id: cc5db315-a81b-4773-804f-886c3d69c827
                    title: Lesson plan for SATs - Physics
                    format: VIDEO
                    type: VIDEO
                    url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                    media_url: null
                    duration: null
                    description: Lesson plan for SATs - Physics
                    visibility: PUBLIC
                    thumbnail_url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                    published_at: '2021-05-26T00:00:00'
                    platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                    platform_profile_name: CBSE WINNERS
                    sponsored: null
                    collaboration: null
                Instagram:
                  value:
                    id: d37d8394-fe92-414c-9d45-1066bb8a2525
                    created_at: '2021-11-08T18:53:19.836901'
                    updated_at: '2021-11-08T18:53:19.836901'
                    user:
                      id: 28722faa-5356-483d-a57b-384fa01859dd
                      name: Robert Downey
                    account:
                      id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                      platform_username: robert.downey@gmail.com
                    work_platform:
                      id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                      name: Instagram
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                    engagement:
                      like_count: 1097
                      dislike_count: null
                      comment_count: 45
                      impression_organic_count: 54
                      reach_organic_count: 8767
                      save_count: 24
                      view_count: 234
                      watch_time_in_hours: null
                      share_count: null
                      impression_paid_count: null
                      reach_paid_count: null
                      additional_info:
                        followers_gained: 5
                        profile_visits: 69
                        bio_link_clicked: 17
                        story_navigation:
                          automatic_forwards: 34
                          tap_backs: 7
                          tap_exits: 12
                          tap_forwards: 9
                          swipe_backs: 6
                          swipe_downs: 4
                          swipe_forwards: 3
                          swipe_ups: 2
                    external_id: df50e598-0849-4291-8e92-4cf6c4f209ee
                    title: Productivity Grease Monkey
                    format: IMAGE
                    type: STORY
                    url: 'https://www.instagram.com/stories/aliabdaal/3046835439779586649/'
                    media_url: null
                    duration: null
                    description: null
                    visibility: PUBLIC
                    thumbnail_url: null
                    published_at: '2021-05-26T00:00:00'
                    platform_profile_id: null
                    platform_profile_name: null
                    sponsored: null
                    collaboration: null
      operationId: v1pubStreamGetContentsById
      description: |-
        Retrieve the engagement information of the newsletter publication with the supplied content id.

        Usually used in conjunction with the "CONTENTS.*" webhooks, [read more](../../../API/webhook-events#content).
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the content
  /v1/publications/contents:
    get:
      summary: Retrieve all publication content items
      tags:
        - Engagement
      responses:
        '200':
          description: Returns all Contents objects.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentList'
              examples:
                Example:
                  value:
                    data:
                      - id: ab5eadc8-e8c2-46f9-b000-f5a70bc0b5a8
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 3b38559b-892f-475d-b4df-7248ef1fd405
                          name: Jonah Hill
                        account:
                          id: a3970259-6740-4131-9058-2f5a4c0d17fa
                          platform_username: jonah.hill@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        engagement:
                          like_count: 100
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: null
                          save_count: null
                          view_count: 200
                          watch_time_in_hours: null
                          share_count: 12
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        title: Shout to @tuckerBud for a fab NFT drop
                        format: TEXT
                        type: TWEET
                        url: 'https://twitter.com/theRealJonah/status/1453423367340580866'
                        media_url: null
                        duration: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: 'https://twitter.com/realJonah/1453423367340580867'
                        published_at: '2021-05-28T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: 65c3f449-ee80-4b31-aa51-6dc7b0f1cb97
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 3b38559b-892f-475d-b4df-7248ef1fd405
                          name: Jonah Hill
                        account:
                          id: a3970259-6740-4131-9058-2f5a4c0d17fa
                          platform_username: jonah.hill@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        engagement:
                          like_count: 100
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: null
                          save_count: null
                          view_count: 200
                          watch_time_in_hours: null
                          share_count: 12
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 14ea686e-7c2f-4077-8795-1495c989dc60
                        title: 'Need to do some grown up movie, HMU with scrips'
                        format: TEXT
                        type: TWEET
                        url: 'https://twitter.com/theRealJonah/status/1453423367340580866'
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: 'https://twitter.com/realJonah/1453423367340580867'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: ca094d06-f9c5-4120-b67d-a6438ab2225b
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: b0562ead-6282-404f-9e63-9da7bc0f838f
                          name: Mark Ruffalo
                        account:
                          id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                          platform_username: mark.ruffalo@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        engagement:
                          like_count: 1097
                          dislike_count: 234
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: 0.5
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: cc5db315-a81b-4773-804f-886c3d69c827
                        title: Lesson plan for SATs - Physics
                        format: VIDEO
                        type: VIDEO
                        url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        media_url: null
                        description: Lesson plan for SATs - Physics
                        visibility: PUBLIC
                        thumbnail_url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: CBSE WINNERS
                        sponsored: null
                        collaboration: null
                      - id: d37d8394-fe92-414c-9d45-1066bb8a2525
                        created_at: '2021-11-08T18:53:19.836901'
                        updated_at: '2021-11-08T18:53:19.836901'
                        user:
                          id: 28722faa-5356-483d-a57b-384fa01859dd
                          name: Robert Downey
                        account:
                          id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                          platform_username: robert.downey@gmail.com
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        engagement:
                          like_count: 1097
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: null
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: df50e598-0849-4291-8e92-4cf6c4f209ee
                        title: US Tour
                        format: IMAGE
                        type: IMAGE
                        url: ''
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: null
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: ffc1b919-e500-445b-8d4f-3292e06d320f
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 28722faa-5356-483d-a57b-384fa01859dd
                          name: Robert Downey
                        account:
                          id: 44554e73-5879-4764-a37c-fa3a47e25c2a
                          platform_username: robert.downey@gmail.com
                        work_platform:
                          id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                          name: Instagram
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
                        engagement:
                          like_count: 1097
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: null
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 40fd3111-e24a-49ac-80a3-01c906df72bc
                        title: 'Just used @venmo, mind = blown!'
                        format: IMAGE
                        type: POST
                        url: 'https://www.instagram.com/p/CWTeRhIvA4X/'
                        media_url: null
                        description: 'Just used @venmo, mind = blown!'
                        visibility: PUBLIC
                        thumbnail_url: 'https://www.instagram.com/p/CWTeRhIvA4X/'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: 93f9c7a6-e328-41dd-ac2f-9f5c8a5095d8
                        created_at: '2021-11-08T18:53:19.836901'
                        updated_at: '2021-11-08T18:53:19.836901'
                        user:
                          id: b0562ead-6282-404f-9e63-9da7bc0f838f
                          name: Mark Ruffalo
                        account:
                          id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                          platform_username: mark.ruffalo@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        engagement:
                          like_count: 1097
                          dislike_count: 234
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: 0.5
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 59578863-ad3b-43dd-b5fd-249073acdf46
                        title: US Tour
                        format: VIDEO
                        type: VIDEO
                        url: ''
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: null
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: CBSE WINNERS
                        sponsored: null
                        collaboration: null
                      - id: 61b8866e-3392-4e91-b5ab-865842912ce8
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 8ba1ac32-0f3c-4cf0-8d89-79a183258f6a
                          name: Peter Parker
                        account:
                          id: 3839334f-6c01-4ad3-8ff1-68e106148702
                          platform_username: peter.parker@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        engagement:
                          like_count: 100
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: null
                          save_count: null
                          view_count: 200
                          watch_time_in_hours: null
                          share_count: 12
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 32f34e83-7078-4c2a-9789-897e3457ce50
                        title: The suit fitting didnt go too well @superman - need your tailor
                        format: TEXT
                        type: TWEET
                        url: 'https://twitter.com/peterparker/status/1453423367340580866'
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: 'https://twitter.com/peterparker/1453423367340580867'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: f48eec05-7a97-4530-8881-b85c659aba84
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 79be6897-e0f4-43d2-8df3-4af15b2862f0
                          name: Sam Curran
                        account:
                          id: b09dbb96-85e2-44fd-87db-4b891b60745a
                          platform_username: sam.curran@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        engagement:
                          like_count: 1097
                          dislike_count: 234
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: 0.5
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: fa489a4d-645d-4687-80e1-c6359be17ee3
                        title: Playing spin in the subcontinet - basics
                        format: VIDEO
                        type: VIDEO
                        url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        media_url: null
                        description: Playing spin in the subcontinet - basics
                        visibility: PUBLIC
                        thumbnail_url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: 7c0dd6f7-ab61-4838-8e33-73b2a3b8714e
                        created_at: '2021-11-23T19:37:05.526900'
                        updated_at: '2021-11-23T19:37:05.526900'
                        user:
                          id: 79be6897-e0f4-43d2-8df3-4af15b2862f0
                          name: Sam Curran
                        account:
                          id: b09dbb96-85e2-44fd-87db-4b891b60745a
                          platform_username: sam.curran@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        engagement:
                          like_count: 1097
                          dislike_count: 234
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: 0.5
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: a5635d8d-96b4-4c3f-8a6a-ed2c9f69582d
                        title: Guide to acing the IPL
                        format: VIDEO
                        type: VIDEO
                        url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        media_url: null
                        description: Guide to acing the IPL
                        visibility: PUBLIC
                        thumbnail_url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                      - id: e2193c40-548d-4cf6-871c-6c4e9dfbce38
                        created_at: '2021-11-08T18:53:19.836901'
                        updated_at: '2021-11-08T18:53:19.836901'
                        user:
                          id: 8ba1ac32-0f3c-4cf0-8d89-79a183258f6a
                          name: Peter Parker
                        account:
                          id: 3839334f-6c01-4ad3-8ff1-68e106148702
                          platform_username: peter.parker@gmail.com
                        work_platform:
                          id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                          name: Twitter
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
                        engagement:
                          like_count: 1097
                          dislike_count: null
                          comment_count: 45
                          impression_organic_count: 54
                          reach_organic_count: 8767
                          save_count: 24
                          view_count: 234
                          watch_time_in_hours: null
                          share_count: null
                          impression_paid_count: null
                          reach_paid_count: null
                        external_id: 1cec2e70-9912-4a19-ae9c-abc86561663f
                        title: Helping creators monetize and manage their content.
                        format: OTHER
                        type: TWEET
                        url: 'https://twitter.com/KenM26/status/1396705211620552706'
                        media_url: null
                        description: null
                        visibility: PUBLIC
                        thumbnail_url: 'https://twitter.com/peterparker'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: null
                        platform_profile_name: null
                        sponsored: null
                        collaboration: null
                    metadata:
                      offset: 0
                      limit: 10
                      from_date: null
                      to_date: null
      operationId: v1pubStreamGetContents
      description: Lists all publication posts.
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/content_from_date'
        - $ref: '#/components/parameters/content_to_date'
        - $ref: '#/components/parameters/account_id_mandatory'
    parameters: []
  /v1/publications/contents/search:
    post:
      summary: Retrieve publication content items in bulk
      operationId: postv1publicationscontentssearch
      responses:
        '200':
          description: Returns all content objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: cfcc6603-1d8f-47d9-926a-4b91cc143105
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        engagement:
                          like_count: 42134
                          dislike_count: 342
                          comment_count: 4234
                          impression_organic_count: 4234
                          reach_organic_count: 34
                          save_count: 43
                          view_count: 42343
                          watch_time_in_hours: 1.5
                          share_count: 42343
                          impression_paid_count: 4234
                          reach_paid_count: 34
                        external_id: 12ccaf87
                        title: USA Tours
                        format: VIDEO
                        type: VIDEO
                        url: 'https://youtu.be/jzWweY4xPe8'
                        media_url: 'https://video.cdninstagram.com/v/t50.16885-16/273384537_472655704353078_8308247021721136693_n.mp4?_nc_cat=100&vs=661086908417570_1261186177&_nc_vs=HBksFQAYJEdGbUVTeEEyNlZ1NzRLMEJBRFd1NHJPbDBreHpidlZCQUFBRhUAAsgBABUAGCRHSnU0U3hEM2kwQ0VQVk1EQUM3S29OeTlueUJzYnZWQkFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMRUAACbG3%2FGq0JXjPxUCKAJDMywXQCOhysCDEm8YEmRhc2hfYmFzZWxpbmVfMV92MREAdewHAA%3D%3D&ccb=1-5&_nc_sid=59939d&efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjQ4MC5pZ3R2In0%3D&_nc_ohc=qcTIWWC39rQAX9xprW6&_nc_ht=video.cdninstagram.com&edm=AM6HXa8EAAAA&oh=00_AT85xcdCSq921RH5KCSfIukPMfk0QCajZEP5Ym4fY3p1Pw&oe=621D1EA5&_nc_rid=5d42feb0d5'
                        duration: null
                        description: US tours video.
                        visibility: PUBLIC
                        thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
                        published_at: '2021-05-26T00:00:00'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: CBSE WINNERS
                        sponsored:
                          is_sponsored: true
                          tags: string
                        collaboration:
                          has_collaborators: true
      description: |-
        Search content items in bulk by providing the IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["CONTENTS.ADDED" and "CONTENTS.UPDATED" webhook](../../../API/webhook-events#content) notifications and pass on to this API to get the updated content items.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - Engagement
    parameters: []
  /v1/social/comments:
    parameters: []
    get:
      summary: Retrieve all comments
      operationId: v1EngagementGetComments
      responses:
        '200':
          description: Returns all comment objects for the given account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponseList'
              examples:
                Example:
                  value:
                    data:
                      - id: 6923b3d6-b297-4f4b-abf6-0879cf2f7ced
                        created_at: '2021-06-26T00:00:00'
                        updated_at: null
                        published_at: '2021-06-26T00:00:00'
                        user:
                          id: b0562ead-6282-404f-9e63-9da7bc0f838f
                          name: Mark Ruffalo
                        account:
                          id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                          platform_username: mark.ruffalo@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        content:
                          id: ca094d06-f9c5-4120-b67d-a6438ab2225b
                          url: 'https://www.youtube.com/watch?v=ZJ6y8OVJRw8'
                          published_at: '2021-05-26T00:00:00'
                        external_id: aaxxdeeefg1234
                        text: Loved this class! Please post the notes soon!
                        commenter_username: johnNash
                        commenter_display_name: johnNash
                        commenter_id: '77230456700'
                        commenter_profile_url: null
                        like_count: 10
                        reply_count: 0
                      - id: 2ce70230-df5f-468f-bd86-fc549c4b4221
                        created_at: '2021-06-26T00:00:00'
                        updated_at: null
                        published_at: '2021-06-26T00:00:00'
                        user:
                          id: b0562ead-6282-404f-9e63-9da7bc0f838f
                          name: Mark Ruffalo
                        account:
                          id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
                          platform_username: mark.ruffalo@gmail.com
                        work_platform:
                          id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                          name: YouTube
                          logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
                        content:
                          id: 93f9c7a6-e328-41dd-ac2f-9f5c8a5095d8
                          url: ''
                          published_at: '2021-05-26T00:00:00'
                        external_id: aaxxdeeefghyz
                        text: Can you post a followup video to tackle the questions raised?
                        commenter_username: philJackson
                        commenter_display_name: philJackson
                        commenter_id: '77230456789'
                        commenter_profile_url: null
                        like_count: 5
                        reply_count: 0
                    metadata:
                      offset: 0
                      limit: 10
                      from_date: null
                      to_date: null
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      parameters:
        - $ref: '#/components/parameters/account_id_mandatory'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/comment_to_date'
        - $ref: '#/components/parameters/comment_from_date'
        - $ref: '#/components/parameters/content_id_mandatory'
      description: |-
        Lists all comments of the given account.

        Usually used in conjunction with the "CONTENTS_COMMENTS.*" webhooks, [read more](../../../API/webhook-events#content-comments).
      tags:
        - Engagement
  '/v1/social/income/transactions/{id}':
    get:
      summary: Retrieve a social transaction
      tags:
        - Income
      responses:
        '200':
          description: Returns transaction object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialTransaction'
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    created_at: '2020-03-27T12:56:34.534978'
                    updated_at: '2020-03-27T12:56:34.534978'
                    user:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: John Doe
                    account:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      platform_username: john.doe@gmail.com
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    amount: 123.45
                    type: AD
                    cpm: 6.78
                    currency: USD
                    external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                    transaction_at: '2020-03-27T12:56:34.534978'
                    platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                    platform_profile_name: Peter Parker
      operationId: v1GetSocialIncomeTransactionById
      description: |-
        Retrieve the information of the transaction with the supplied transaction ID.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".

        Usually used in conjunction with the "TRANSACTIONS.*" webhooks, [read more](../../../API/webhook-events#income).
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the transaction
  /v1/social/income/transactions:
    get:
      summary: Retrieve social transactions for an account
      tags:
        - Income
      responses:
        '200':
          description: Returns all transaction objects for the given account.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialTransactionList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        amount: 123.45
                        type: AD
                        cpm: 6.78
                        currency: USD
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        transaction_at: '2020-03-27T12:56:34.534978'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
                    metadata:
                      - offset: 0
                        limit: 10
                        from_date: '2020-12-31'
                        to_date: '2021-12-31'
      operationId: v1GetSocialIncomeTransactions
      description: |-
        Lists all transactions of the given social account.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".
      parameters:
        - $ref: '#/components/parameters/transaction_from_date'
        - $ref: '#/components/parameters/transaction_to_date'
        - $ref: '#/components/parameters/account_id_mandatory'
        - $ref: '#/components/parameters/social_transaction_type'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
    parameters: []
  /v1/social/income/transactions/refresh:
    post:
      summary: Refresh social transactions for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
      operationId: v1RefreshSocialIncomeTransactions
      description: |-
        Refresh transactions for a connected social account for the default refresh period, which is T-12 months for transactions. Once InsightIQ processes the request, you can fetch the updated transactions by calling the [retrieve social transactions API](../reference/openapi.v1.yml/paths/~1v1~1social~1income~1transactions/get).


        Subscribe to the ["TRANSACTIONS.ADDED" and "TRANSACTIONS.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve social transactions in bulk API](../reference/openapi.v1.yml/paths/~1v1~1social~1income~1transactions~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
    parameters: []
  /v1/social/income/transactions/fetch-historic:
    post:
      summary: Fetch historic social transactions for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchHistoric'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                    from_date: '2019-08-24'
      operationId: v1FetchHistoricSocialIncomeTransactions
      description: |-
        Fetch transactions for a connected social account starting from a specific date till today by providing the `from_date`. Once InsightIQ processes the request, you can fetch the updated transactions by calling the [retrieve social transactions API](../reference/openapi.v1.yml/paths/~1v1~1social~1income~1transactions/get).


        Subscribe to the ["TRANSACTIONS.ADDED" and "TRANSACTIONS.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve social transactions in bulk API](../reference/openapi.v1.yml/paths/~1v1~1social~1income~1transactions~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchHistoric'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                  from_date: '2019-08-24'
    parameters: []
  /v1/social/income/transactions/search:
    post:
      summary: Retrieve social transactions in bulk
      tags:
        - Income
      responses:
        '200':
          description: Returns all transaction objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialTransactionSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        amount: 123.45
                        type: AD
                        cpm: 6.78
                        currency: USD
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        transaction_at: '2020-03-27T12:56:34.534978'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
      operationId: v1SearchSocialIncomeTransactions
      description: |-
        Search transactions in bulk by providing the IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["TRANSACTIONS.ADDED" and "TRANSACTIONS.UPDATED" webhook](../../../API/webhook-events#income) notifications and pass on to this API to get the updated transaction items.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialTransactionSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
    parameters: []
  '/v1/social/income/payouts/{id}':
    get:
      summary: Retrieve a social payout
      tags:
        - Income
      responses:
        '200':
          description: Returns payout object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercePayout'
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    created_at: '2020-03-27T12:56:34.534978'
                    updated_at: '2020-03-27T12:56:34.534978'
                    user:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: John Doe
                    account:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      platform_username: john.doe@gmail.com
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    amount: 123.45
                    currency: USD
                    status: SCHEDULED
                    payout_interval: AUTOMATIC_DAILY
                    bank_details:
                      name: string
                      account_last_digits: string
                      account_routing_number: string
                    external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                    payout_at: '2020-03-27T12:56:34.534978'
                    platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                    platform_profile_name: Peter Parker
      operationId: v1GetSocialIncomePayoutById
      description: |-
        Retrieve the information of the payout with the supplied payout ID.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".

        Usually used in conjunction with the "PAYOUTS.*" webhooks, [read more](../../../API/webhook-events#income).
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the transaction
  /v1/social/income/payouts:
    get:
      summary: Retrieve social payouts for an account
      tags:
        - Income
      responses:
        '200':
          description: Returns all payout objects for the given account.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercePayoutList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        amount: 123.45
                        currency: USD
                        status: SCHEDULED
                        payout_interval: AUTOMATIC_DAILY
                        bank_details:
                          name: string
                          account_last_digits: string
                          account_routing_number: string
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        payout_at: '2020-03-27T12:56:34.534978'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
                    metadata:
                      - offset: 0
                        limit: 10
                        from_date: '2020-12-31'
                        to_date: '2021-12-31'
      operationId: v1GetSocialIncomePayouts
      description: |-
        Lists all payouts of the given social account.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".
      parameters:
        - $ref: '#/components/parameters/payout_from_date'
        - $ref: '#/components/parameters/payout_to_date'
        - $ref: '#/components/parameters/account_id_mandatory'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
    parameters: []
  /v1/social/income/payouts/refresh:
    post:
      summary: Refresh social payouts for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
      operationId: v1RefreshSocialIncomePayouts
      description: |-
        Refresh payouts for a connected social account for the default refresh period, which is T-12 months for payouts. Once InsightIQ processes the request, you can fetch the updated payouts by calling the [retrieve social payouts API](../reference/openapi.v1.yml/paths/~1v1~1social~1income~1payouts/get).


        Subscribe to the ["PAYOUTS.ADDED" and "PAYOUTS.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve social payouts in bulk API](../reference/openapi.v1.yml/paths/~1v1~1social~1income~1payouts~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
    parameters: []
  /v1/social/income/payouts/fetch-historic:
    post:
      summary: Fetch historic social payouts for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchHistoric'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                    from_date: '2019-08-24'
      operationId: v1FetchHistoricSocialIncomePayouts
      description: |-
        Fetch payouts for a connected social account starting from a specific date till today by providing the `from_date`. Once InsightIQ processes the request, you can fetch the updated payouts by calling the [retrieve social payouts API](../reference/openapi.v1.yml/paths/~1v1~1social~1income~1payouts/get).


        Subscribe to the ["PAYOUTS.ADDED" and "PAYOUTS.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve social payouts in bulk API](../reference/openapi.v1.yml/paths/~1v1~1social~1income~1payouts~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchHistoric'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                  from_date: '2019-08-24'
    parameters: []
  /v1/social/income/payouts/search:
    post:
      summary: Retrieve social payouts in bulk
      tags:
        - Income
      responses:
        '200':
          description: Returns all payout objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercePayoutSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        amount: 123.45
                        currency: USD
                        status: SCHEDULED
                        payout_interval: AUTOMATIC_DAILY
                        bank_details:
                          name: string
                          account_last_digits: string
                          account_routing_number: string
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        payout_at: '2020-03-27T12:56:34.534978'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
      operationId: v1SearchSocialIncomePayouts
      description: |-
        Search payouts in bulk by providing the IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["PAYOUTS.ADDED" and "PAYOUTS.UPDATED" webhook](../../../API/webhook-events#income) notifications and pass on to this API to get the updated payout items.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "social".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommercePayoutSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
    parameters: []
  '/v1/commerce/income/transactions/{id}':
    get:
      summary: Retrieve a e-commerce transaction
      tags:
        - Income
      responses:
        '200':
          description: Returns transaction object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceTransaction'
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    created_at: '2020-03-27T12:56:34.534978'
                    updated_at: '2020-03-27T12:56:34.534978'
                    user:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: John Doe
                    account:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      platform_username: john.doe@gmail.com
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    amount: 123.45
                    currency: USD
                    type: SALE
                    status: SUCCESS
                    external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                    transaction_at: '2020-03-27T12:56:34.534978'
                    platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                    platform_profile_name: Peter Parker
      operationId: v1GetCommerceIncomeTransactionById
      description: |-
        Retrieve the information of the transaction with the supplied transaction ID.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".

        Usually used in conjunction with the "TRANSACTIONS.*" webhooks, [read more](../../../API/webhook-events#income).
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the transaction
  /v1/commerce/income/transactions:
    get:
      summary: Retrieve e-commerce transactions for an account
      tags:
        - Income
      responses:
        '200':
          description: Returns all transaction objects for the given account.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceTransactionList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        amount: 123.45
                        currency: USD
                        type: SALE
                        status: SUCCESS
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        transaction_at: '2020-03-27T12:56:34.534978'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
                    metadata:
                      - offset: 0
                        limit: 10
                        from_date: '2020-12-31'
                        to_date: '2021-12-31'
      operationId: v1GetCommerceIncomeTransactions
      description: |-
        Lists all transactions of the given e-commerce account.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters:
        - $ref: '#/components/parameters/transaction_from_date'
        - $ref: '#/components/parameters/transaction_to_date'
        - $ref: '#/components/parameters/account_id_mandatory'
        - $ref: '#/components/parameters/commerce_transaction_type'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
    parameters: []
  /v1/commerce/income/transactions/refresh:
    post:
      summary: Refresh e-commerce transactions for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
      operationId: v1RefreshCommerceIncomeTransactions
      description: |-
        Refresh transactions for a connected e-commerce account for the default refresh period, which is T-12 months for transactions. Once InsightIQ processes the request, you can fetch the updated transactions by calling the [retrieve e-commerce transactions API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1transactions/get).


        Subscribe to the ["TRANSACTIONS.ADDED" and "TRANSACTIONS.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve e-commerce transactions in bulk API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1transactions~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
    parameters: []
  /v1/commerce/income/transactions/fetch-historic:
    post:
      summary: Fetch historic e-commerce transactions for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchHistoric'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                    from_date: '2019-08-24'
      operationId: v1FetchHistoricCommerceIncomeTransactions
      description: |-
        Fetch transactions for a connected e-commerce account starting from a specific date till today by providing the `from_date`. Once InsightIQ processes the request, you can fetch the updated transactions by calling the [retrieve e-commerce transactions API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1transactions/get).


        Subscribe to the ["TRANSACTIONS.ADDED" and "TRANSACTIONS.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve e-commerce transactions in bulk API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1transactions~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchHistoric'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                  from_date: '2019-08-24'
    parameters: []
  /v1/commerce/income/transactions/search:
    post:
      summary: Retrieve e-commerce transactions in bulk
      tags:
        - Income
      responses:
        '200':
          description: Returns all transaction objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceTransactionSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        amount: 123.45
                        currency: USD
                        type: SALE
                        status: SUCCESS
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        transaction_at: '2020-03-27T12:56:34.534978'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
      operationId: v1SearchCommerceIncomeTransactions
      description: |-
        Search transactions in bulk by providing the IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["TRANSACTIONS.ADDED" and "TRANSACTIONS.UPDATED" webhook](../../../API/webhook-events#income) notifications and pass on to this API to get the updated transaction items.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommerceTransactionSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
    parameters: []
  '/v1/commerce/income/payouts/{id}':
    get:
      summary: Retrieve a e-commerce payout
      tags:
        - Income
      responses:
        '200':
          description: Returns payout object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercePayout'
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    created_at: '2020-03-27T12:56:34.534978'
                    updated_at: '2020-03-27T12:56:34.534978'
                    user:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: John Doe
                    account:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      platform_username: john.doe@gmail.com
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    amount: 123.45
                    currency: USD
                    status: SCHEDULED
                    payout_interval: AUTOMATIC_DAILY
                    bank_details:
                      name: string
                      account_last_digits: string
                      account_routing_number: string
                    external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                    payout_at: '2020-03-27T12:56:34.534978'
                    platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                    platform_profile_name: Peter Parker
      operationId: v1GetCommerceIncomePayoutById
      description: |-
        Retrieve the information of the payout with the supplied payout ID.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".

        Usually used in conjunction with the "PAYOUTS.*" webhooks, [read more](../../../API/webhook-events#income).
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the payout
  /v1/commerce/income/payouts:
    get:
      summary: Retrieve e-commerce payouts for an account
      tags:
        - Income
      responses:
        '200':
          description: Returns all payout objects for the given account.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercePayoutList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        amount: 123.45
                        currency: USD
                        status: SCHEDULED
                        payout_interval: AUTOMATIC_DAILY
                        bank_details:
                          name: string
                          account_last_digits: string
                          account_routing_number: string
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        payout_at: '2020-03-27T12:56:34.534978'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
                    metadata:
                      - offset: 0
                        limit: 10
                        from_date: '2020-12-31'
                        to_date: '2021-12-31'
      operationId: v1GetCommerceIncomePayouts
      description: |-
        Lists all payouts of the given e-commerce account.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters:
        - $ref: '#/components/parameters/payout_from_date'
        - $ref: '#/components/parameters/payout_to_date'
        - $ref: '#/components/parameters/account_id_mandatory'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
    parameters: []
  /v1/commerce/income/payouts/refresh:
    post:
      summary: Refresh e-commerce payouts for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
      operationId: v1RefreshCommerceIncomePayouts
      description: |-
        Refresh payouts for a connected e-commerce account for the default refresh period, which is T-12 months for payouts. Once InsightIQ processes the request, you can fetch the updated payouts by calling the [retrieve e-commerce payouts API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1payouts/get).


        Subscribe to the ["PAYOUTS.ADDED" and "PAYOUTS.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve e-commerce payouts in bulk API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1payouts~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
    parameters: []
  /v1/commerce/income/payouts/fetch-historic:
    post:
      summary: Fetch historic e-commerce payouts for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchHistoric'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                    from_date: '2019-08-24'
      operationId: v1FetchHistoricCommerceIncomePayouts
      description: |-
        Fetch payouts for a connected e-commerce account starting from a specific date till today by providing the `from_date`. Once InsightIQ processes the request, you can fetch the updated payouts by calling the [retrieve e-commerce payouts API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1payouts/get).


        Subscribe to the ["PAYOUTS.ADDED" and "PAYOUTS.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve e-commerce payouts in bulk API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1payouts~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchHistoric'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                  from_date: '2019-08-24'
    parameters: []
  /v1/commerce/income/payouts/search:
    post:
      summary: Retrieve e-commerce payouts in bulk
      tags:
        - Income
      responses:
        '200':
          description: Returns all payout objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercePayoutSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        amount: 123.45
                        currency: USD
                        status: SCHEDULED
                        payout_interval: AUTOMATIC_DAILY
                        bank_details:
                          name: string
                          account_last_digits: string
                          account_routing_number: string
                        external_id: 5790fbc3-b022-437b-abf8-0492c7a82056
                        payout_at: '2020-03-27T12:56:34.534978'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
      operationId: v1SearchCommerceIncomePayouts
      description: |-
        Search payouts in bulk by providing the IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["PAYOUTS.ADDED" and "PAYOUTS.UPDATED" webhook](../../../API/webhook-events#income) notifications and pass on to this API to get the updated payout items.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommercePayoutSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
    parameters: []
  '/v1/commerce/income/balances/{id}':
    get:
      summary: Retrieve a e-commerce balance
      tags:
        - Income
      responses:
        '200':
          description: Returns balance object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceBalance'
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    created_at: '2020-03-27T12:56:34.534978'
                    updated_at: '2020-03-27T12:56:34.534978'
                    user:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: John Doe
                    account:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      platform_username: john.doe@gmail.com
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    balance:
                      - amount: 123.45
                        currency: USD
                    balance_at: '2020-03-27T00:00:00.000000'
                    platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                    platform_profile_name: Peter Parker
      operationId: v1GetCommerceIncomeBalanceById
      description: |-
        Retrieve the information of the balance with the supplied balance ID.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".

        Usually used in conjunction with the "BALANCES.*" webhooks, [read more](../../../API/webhook-events#income).
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the balance
  /v1/commerce/income/balances:
    get:
      summary: Retrieve e-commerce balances for an account
      tags:
        - Income
      responses:
        '200':
          description: Returns all daily balance objects for the given account.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceBalanceList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        balance:
                          - amount: 123.45
                            currency: USD
                        balance_at: '2020-03-27T00:00:00.000000'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
                    metadata:
                      - offset: 0
                        limit: 10
                        from_date: '2020-12-31'
                        to_date: '2021-12-31'
      operationId: v1GetCommerceIncomeBalances
      description: |-
        Lists all daily balances of the given e-commerce account.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters:
        - $ref: '#/components/parameters/balance_from_date'
        - $ref: '#/components/parameters/balance_to_date'
        - $ref: '#/components/parameters/account_id_mandatory'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
    parameters: []
  /v1/commerce/income/balances/refresh:
    post:
      summary: Refresh e-commerce balances for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refresh'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
      operationId: v1RefreshCommerceIncomeBalances
      description: |-
        Refresh balances for a connected e-commerce account for the default refresh period, which is T-12 months for balances. Once InsightIQ processes the request, you can fetch the updated balances by calling the [retrieve e-commerce balances API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1balances/get).


        Subscribe to the ["BALANCES.ADDED" and "BALANCES.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve e-commerce balances in bulk API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1balances~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
    parameters: []
  /v1/commerce/income/balances/fetch-historic:
    post:
      summary: Fetch historic e-commerce balances for an account
      tags:
        - Income
      responses:
        '202':
          description: Accepted
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchHistoric'
              examples:
                Example:
                  value:
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                    from_date: '2019-08-24'
      operationId: v1FetchHistoricCommerceIncomeBalances
      description: |-
        Fetch balances for a connected e-commerce account starting from a specific date till today by providing the `from_date`. Once InsightIQ processes the request, you can fetch the updated balances by calling the [retrieve e-commerce balances API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1balances/get).


        Subscribe to the ["BALANCES.ADDED" and "BALANCES.UPDATED" webhooks](../../../API/webhook-events#income) to receive a notification once the request is completed. With webhooks, you should use the [retrieve e-commerce balances in bulk API](../reference/openapi.v1.yml/paths/~1v1~1commerce~1income~1balances~1search/post) for optimal performance.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchHistoric'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                  from_date: '2019-08-24'
    parameters: []
  /v1/commerce/income/balances/search:
    post:
      summary: Retrieve e-commerce balances in bulk
      tags:
        - Income
      responses:
        '200':
          description: Returns all balance objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceBalanceSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        balance:
                          - amount: 123.45
                            currency: USD
                        balance_at: '2020-03-27T00:00:00.000000'
                        platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
                        platform_profile_name: Peter Parker
      operationId: v1SearchCommerceIncomeBalances
      description: |-
        Search balances in bulk by providing the IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["BALANCES.ADDED" and "BALANCES.UPDATED" webhook](../../../API/webhook-events#income) notifications and pass on to this API to get the updated transaction items.


        Check the `category` field from [the work platform API](../reference/openapi.v1.yml/paths/~1v1~1work-platforms/get) response or the "Category" column in [this data guide](https://airtable.com/shrwEMTWlgECOUhre) to see which platfroms we serve under "commerce".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommerceBalanceSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
    parameters: []
  '/v1/media/activity/artists/{id}':
    get:
      summary: Retrieve an artist (user activity)
      responses:
        '200':
          description: Returns artist object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityArtist'
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    created_at: '2020-03-27T12:56:34.534978'
                    updated_at: '2020-03-27T12:56:34.534978'
                    user:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: John Doe
                    account:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      platform_username: john.doe@gmail.com
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    platform_artist_id: string
                    image_url: 'http://example.com'
                    artist_name: string
                    artist_url: 'http://example.com'
                    genre:
                      - string
                    activity_type: FOLLOWED
      operationId: v1GetMediaActivityArtistById
      description: |-
        Retrieve the information of the artist with the supplied artist ID.

        Usually used in conjunction with the "ACTIVITY-ARTISTS.*" webhooks, [read more](../../../API/webhook-events#activity).
      parameters: []
      tags:
        - Activity
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the artist
  /v1/media/activity/artists:
    get:
      summary: Retrieve artists for an account (user activity)
      responses:
        '200':
          description: Returns all artists for the given account.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityArtistList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        platform_artist_id: string
                        image_url: 'http://example.com'
                        artist_name: string
                        artist_url: 'http://example.com'
                        genre:
                          - string
                        activity_type: FOLLOWED
                    metadata:
                      offset: 0
                      limit: 10
                      from_date: '2020-12-31'
                      to_date: '2021-12-31'
      operationId: v1GetMediaActivityArtists
      description: Lists all `TOP` and `FOLLOWED` artists from the activity history of the given account.
      parameters:
        - $ref: '#/components/parameters/account_id_mandatory'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - Activity
    parameters: []
  /v1/media/activity/artists/search:
    post:
      summary: Retrieve artists for an account (user activity) in bulk
      responses:
        '200':
          description: Returns all activity artist objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityArtistSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        platform_artist_id: string
                        image_url: 'http://example.com'
                        artist_name: string
                        artist_url: 'http://example.com'
                        genre:
                          - string
                        activity_type: FOLLOWED
      operationId: v1SearchMediaActivityArtists
      description: |-
        Search information of the artists in bulk by providing IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["ACTIVITY-ARTISTS.ADDED" and "ACTIVITY-ARTISTS.UPDATED" webhook](../../../API/webhook-events#activity) notifications and pass on to this API to get the updated artist items.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityArtistSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
      tags:
        - Activity
    parameters: []
  '/v1/media/activity/contents/{id}':
    get:
      summary: Retrieve a content (user activity)
      responses:
        '200':
          description: Returns activity content object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityContent'
              examples:
                Example:
                  value:
                    id: cfcc6603-1d8f-47d9-926a-4b91cc143105
                    created_at: '2020-03-27T12:56:34.534978'
                    updated_at: '2020-03-27T12:56:34.534978'
                    user:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: John Doe
                    account:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      platform_username: john.doe@gmail.com
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    platform_content_id: 12ccaf87
                    title: USA Tours
                    format: VIDEO
                    type: VIDEO
                    url: 'https://youtu.be/jzWweY4xPe8'
                    description: US tours video.
                    thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
                    embed_url: 'https://youtu.be/jzWweY4xPe8.png'
                    activity_type: TOP
                    additional_info:
                      genre:
                        - string
                      artists:
                        - string
                      album: string
      operationId: v1GetMediaActivityContentById
      description: |-
        Retrieve the information of the content with the supplied content ID.

        Usually used in conjunction with the "ACTIVITY-CONTENTS.*" webhooks, [read more](../../../API/webhook-events#activity).
      parameters: []
      tags:
        - Activity
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier for the content
  /v1/media/activity/contents:
    get:
      summary: Retrieve contents for an account (user activity)
      responses:
        '200':
          description: Returns all contents for the given account.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityContentList'
              examples:
                Example:
                  value:
                    data:
                      - id: cfcc6603-1d8f-47d9-926a-4b91cc143105
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        platform_content_id: 12ccaf87
                        title: USA Tours
                        format: VIDEO
                        type: VIDEO
                        url: 'https://youtu.be/jzWweY4xPe8'
                        description: US tours video.
                        thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
                        embed_url: 'https://youtu.be/jzWweY4xPe8.png'
                        activity_type: TOP
                        additional_info:
                          genre:
                            - string
                          artists:
                            - string
                          album: string
                    metadata:
                      offset: 0
                      limit: 10
                      from_date: '2020-12-31'
                      to_date: '2021-12-31'
      operationId: v1GetMediaActivityContents
      description: 'Lists all `RECENT`, `TOP` and `SAVED` contents from the activity history of the given account.'
      parameters:
        - $ref: '#/components/parameters/account_id_mandatory'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - Activity
    parameters: []
  /v1/media/activity/contents/search:
    post:
      summary: Retrieve contents for an account (user activity) in bulk
      responses:
        '200':
          description: Returns all activity content objects matching the IDs.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityContentSearchList'
              examples:
                Example:
                  value:
                    data:
                      - id: cfcc6603-1d8f-47d9-926a-4b91cc143105
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        user:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: John Doe
                        account:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          platform_username: john.doe@gmail.com
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        platform_content_id: 12ccaf87
                        title: USA Tours
                        format: VIDEO
                        type: VIDEO
                        url: 'https://youtu.be/jzWweY4xPe8'
                        description: US tours video.
                        thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
                        embed_url: 'https://youtu.be/jzWweY4xPe8.png'
                        activity_type: TOP
                        additional_info:
                          genre:
                            - string
                          artists:
                            - string
                          album: string
      operationId: v1SearchMediaActivityContents
      description: |-
        Search information of the contents in bulk by providing IDs.


        This is best used in combination with webhooks - you can directly take the IDs from ["ACTIVITY-CONTENTS.ADDED" and "ACTIVITY-CONTENTS.UPDATED" webhook](../../../API/webhook-events#activity) notifications and pass on to this API to get the updated content items.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityContentSearch'
            examples:
              Example:
                value:
                  ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08
      tags:
        - Activity
    parameters: []
  /v1/social/creators/profiles/search:
    post:
      summary: Search public profiles of creators
      operationId: postCreatorProfileSearch
      responses:
        '200':
          description: Returns search results according to the given filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatorSearchResponse'
              examples:
                Example:
                  value:
                    data:
                      - platform_username: string
                        url: 'http://example.com'
                        image_url: 'http://example.com'
                        follower_count: 0
                        subscriber_count: 0
                        is_verified: true
                        work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        full_name: string
                        introduction: string
                        platform_account_type: PERSONAL
                        gender: string
                        age_group: string
                        language: string
                        content_count: 0
                        engagement_rate: 0
                        location:
                          city: string
                          state: string
                          country: string
                        contact_details:
                          - type: string
                            value: string
                    metadata:
                      offset: 0
                      limit: 10
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      description: |-
        Search for creator profiles using publicly available data based on available filters.

        This API only returns a maximum of 500 results. For more results, please use the [Async version of this API](../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1profiles~1search-export/post).
      tags:
        - Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatorSearchRequest'
  /v1/social/creators/profiles/quick-search:
    post:
      summary: Search public profiles of creators
      operationId: postQuickCreatorProfileSearch
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickCreatorSearchResponse'
      description: 'Search for creator profiles using publicly available data based on available filters. This API does not return contact information, to obtain contact info please use the /profiles/search API instead.'
      tags:
        - Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatorSearchRequest'
    parameters: []
  /v1/social/creators/profiles/search-export:
    post:
      summary: Asynchronous creator profiles export
      operationId: AsyncCreatorProfileSearch
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Job ID for the request
                  filters:
                    $ref: '#/components/schemas/AsyncCreatorSearchRequest'
                  status:
                    type: string
                    enum:
                      - SUCCESS
                      - IN_PROGRESS
                      - FAILURE
                    description: Status of the job
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                required:
                  - id
                  - filters
                  - status
      description: 'Search for creator profiles using publicly available data based on available filters. This endpoint is asynchronous in nature. CREATOR_SEARCH_EXPORT.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#creator-discovery) for more information.'
      tags:
        - Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncCreatorSearchRequest'
    parameters: []
  '/v1/social/creators/profiles/search-export/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Job ID
    get:
      summary: Fetch creator search export results
      operationId: getasynccsresults
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncCreatorSearchResponse'
      description: |-
        Fetch creator search export results by supplying the job ID.

        Usually used in conjunction with the "CREATORS_SEARCH_EXPORT.*" webhooks, [read more](../../../API/webhook-events#creator-discovery).
      tags:
        - Creator Discovery
      parameters:
        - schema:
            type: integer
            default: 100
          in: query
          name: limit
          description: Number of search results to be returned.
        - schema:
            type: integer
            default: 0
          in: query
          name: offset
          description: Number of search results to skip.
  /v1/social/creators/dictionary/userhandles:
    get:
      summary: Autocomplete functionality for user handles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                      description: InsightIQ's unique identifier for the profile
                    username:
                      type: string
                      description: Profile username
                    fullname:
                      type: string
                      description: Full name of the profile
                    picture:
                      type: string
                      description: Profile display picture
                    followers:
                      type: string
                      description: Follower count
                    is_verified:
                      type: boolean
                      description: Profile verification status
                  required:
                    - user_id
                    - username
                    - fullname
                    - picture
                    - followers
                    - is_verified
      operationId: get-v1-social-creators-dictionary-userhandles
      description: |-
        Retrieve list of userhandles matching the query text.
        Lookalike provides a set of users for whom creator lookalikes data isavailable.
        Topic-tags is related to users for whom we have top tags data.
        Search type is for profiles for whom both audience lookalikes and audience data is available.
      tags:
        - Creator Discovery
      parameters:
        - schema:
            type: string
          in: query
          name: query_text
          description: Search query
          required: true
        - schema:
            type: string
            format: uuid
          in: query
          name: work_platform_id
          required: true
          description: Work platform id
        - schema:
            type: string
          in: query
          name: type
          required: true
          description: 'type in lookalike, search, topic-tags'
        - schema:
            type: integer
          in: query
          name: limit
          description: The number of objects to be returned. It can be between 1 to 1000. The default value is 10
  /v1/social/creators/dictionary/brands:
    parameters: []
    get:
      summary: Get brands for public profiles search
      operationId: get-v1-social-creators-profiles-dictionary-brands
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandsDictResponse'
              examples:
                Example 1:
                  value:
                    brands:
                      - name: 20th Century Fox
                      - name: 2Pac
                      - name: 7-Eleven
                      - name: 7UP
                      - name: A Game of Tones
                      - name: A.P.C.
                      - name: ABC
                      - name: Abercrombie & Fitch
                      - name: Ableton
                      - name: Absolut
                      - name: Abus
                      - name: Acacia Swimwear
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
      parameters: []
      description: |-
        Dictionary of brands for the public profiles search endpoint.

        We recommend caching the response at your end for 15 days.
      tags:
        - Creator Discovery
  /v1/social/creators/dictionary/interests:
    parameters: []
    get:
      summary: Get interests for public profiles search
      operationId: get-v1-social-creators-profiles-dictionary-interests
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestsDictResponse'
              examples:
                Example 1:
                  value:
                    interests:
                      - name: Television & Film
                      - name: Music
                      - name: Shopping & Retail
                      - name: 'Coffee, Tea & Beverages'
                      - name: Camera & Photography
                      - name: 'Clothes, Shoes, Handbags & Accessories'
                      - name: 'Beer, Wine & Spirits'
                      - name: Sports
                      - name: Electronics & Computers
                      - name: Gaming
                      - name: Activewear
                      - name: Art & Design
                      - name: 'Travel, Tourism & Aviation'
                      - name: Business & Careers
                      - name: Beauty & Cosmetics
                      - name: Healthcare & Medicine
                      - name: Jewellery & Watches
                      - name: 'Restaurants, Food & Grocery'
                      - name: 'Toys, Children & Baby'
                      - name: Fitness & Yoga
                      - name: Wedding
                      - name: Tobacco & Smoking
                      - name: Pets
                      - name: Healthy Lifestyle
                      - name: Luxury Goods
                      - name: 'Home Decor, Furniture & Garden'
                      - name: 'Friends, Family & Relationships'
                      - name: Cars & Motorbikes
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
      parameters: []
      description: |-
        Dictionary of interests for the public profiles search endpoint.

        We recommend caching the response at your end for 15 days.
      tags:
        - Creator Discovery
  /v1/social/creators/dictionary/languages:
    parameters: []
    get:
      summary: Get languages for public profiles search
      operationId: get-v1-social-creators-profiles-dictionary-languages
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguagesDictResponse'
              examples:
                Example 1:
                  value:
                    languages:
                      - name: English
                        code: en
                      - name: Spanish
                        code: es
                      - name: Portuguese
                        code: pt
                      - name: French
                        code: fr
                      - name: Arabic
                        code: ar
                      - name: Russian
                        code: ru
                      - name: Italian
                        code: it
                      - name: German
                        code: de
                      - name: Persian
                        code: fa
                      - name: Indonesian
                        code: id
                      - name: Turkish
                        code: tr
                      - name: Japanese
                        code: ja
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
      parameters: []
      description: |-
        Dictionary of languages for the public profiles search endpoint.

        We recommend caching the response at your end for 15 days.
      tags:
        - Creator Discovery
  /v1/social/creators/dictionary/locations:
    parameters: []
    get:
      summary: Get locations for public profiles search
      operationId: get-v1-social-creators-profiles-dictionary-countries
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesDictResponse'
              examples:
                Example 1:
                  value:
                    locations:
                      - id: 0244d71d-3b9c-4f3f-971a-5b2d545911a7
                        name: San Francisco
                        type: city
                      - id: 431025c0-888b-4305-a737-590303ea2659
                        name: Franca
                        type: city
                      - id: 531f6797-c8eb-41ea-b3c5-9ac472b72a5f
                        name: France
                        type: country
                      - id: fc031241-109e-460f-8b59-1f1e77c2e642
                        name: Frankfurt
                        type: city
          headers: {}
      parameters:
        - schema:
            type: integer
            example: 10
          in: query
          name: limit
          description: The number of objects to be returned. It can be between 1 to 100. The default value is 10
        - schema:
            type: integer
            example: 0
          in: query
          name: offset
          description: The number of objects to skip. Use this argument for pagination. The default value is 0.
        - schema:
            type: string
          in: query
          name: search_string
          description: 'The user can search location by passing a substring '
      description: |-
        Dictionary of countries for the public profiles search endpoint.

        We recommend caching the response at your end for 15 days.
      tags:
        - Creator Discovery
      requestBody:
        content: {}
  /v1/social/creators/dictionary/topics:
    parameters: []
    get:
      summary: Get topic tags for public profiles search
      operationId: get-v1-social-creators-profiles-dictionary-topics
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicTagsDictResponse'
              examples:
                Example:
                  value:
                    data:
                      - name: string
                        value: string
          headers: {}
      parameters:
        - schema:
            type: integer
            example: 10
            default: 25
          in: query
          name: limit
          description: The number of objects to be returned. It can be between 1 to 100. The default value is 10
        - schema:
            type: string
          in: query
          name: identifier
          required: true
          description: Name of the tag
        - schema:
            type: string
            format: uuid
          in: query
          name: work_platform_id
          required: true
          description: Work platform ID
      description: Dictionary of topic tags for the public profiles search endpoint.
      tags:
        - Creator Discovery
      requestBody:
        content: {}
  /v1/social/creators/dictionary/topics/relevance:
    parameters: []
    get:
      summary: Get topic tag weight for public profiles search
      operationId: get-v1-social-creators-profiles-dictionary-topics-relevance
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicTagsRelevanceDictResponse'
              examples:
                Example:
                  value:
                    data:
                      - name: string
                        distance: 0
                        frequency: 0
          headers: {}
      parameters:
        - schema:
            type: integer
            example: 10
            default: 60
          in: query
          name: limit
          description: The number of objects to be returned. It can be between 1 to 100. The default value is 10
        - schema:
            type: string
          in: query
          name: identifier
          required: true
          description: Name of the tag obtained from tags dictionary
        - schema:
            type: string
            format: uuid
          in: query
          name: work_platform_id
          required: true
          description: Work platform ID
      description: Dictionary of relevance weights of topic tags for the public profiles search endpoint.
      tags:
        - Creator Discovery
      requestBody:
        content: {}
  /v1/social/creators/profiles:
    parameters: []
    get:
      summary: Get follower count and other basic profile information
      operationId: basicprofileapi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  platform_username:
                    type: string
                    description: Profile username
                  url:
                    type: string
                    format: uri
                    description: Profile url
                  image_url:
                    type: string
                    description: Profile image url
                    format: uri
                  full_name:
                    type: string
                    description: Full name
                  follower_count:
                    type: integer
                    description: Follower count
                  following_count:
                    type: integer
                    description: Following count
                  subscriber_count:
                    type: integer
                    description: Subscriber count. Only for YouTube.
                  is_verified:
                    type: boolean
                  is_business:
                    type: boolean
                  is_private:
                    type: boolean
                  content_count:
                    type: integer
                    description: Total number of content items
                  total_view_count:
                    type: integer
                    description: Total channel view count. Only for YouTube.
                  introduction:
                    type: string
                    description: Bio description.
                  category:
                    type: string
                    description: 'Category of creator account. Only for Instagram, if it''s a business/creator account.'
                  external_id:
                    type: string
                    description: Unique profile identifier by the platform.
                  platform_profile_id:
                    type: string
                    description: Unique profile identifier by the platform.
                  profile_links:
                    type: array
                    description: Links in bio.
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          format: uri
                required:
                  - work_platform
                  - platform_username
                  - url
                  - external_id
                  - platform_profile_id
      parameters:
        - schema:
            type: string
          in: query
          name: identifier
          description: 'Identifier of the profile:   username or profile URL'
          required: true
        - schema:
            type: string
            format: uuid
          in: query
          name: work_platform_id
          description: Work platform id
          required: true
      description: 'Get live updated follower count and other related information (bios, verification status, profile images etc)'
      tags:
        - Creator Discovery
      requestBody:
        content: {}
  /v1/social/creators/profiles/contact-info:
    parameters: []
    post:
      summary: Get direct contact information of a profile
      operationId: basicprofile-with-contact-api
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  profile:
                    type: object
                    required:
                      - platform_username
                      - url
                      - external_id
                      - platform_profile_id
                    properties:
                      platform_username:
                        type: string
                        description: Profile username
                      url:
                        type: string
                        format: uri
                        description: Profile url
                      image_url:
                        type: string
                        description: Profile image url
                        format: uri
                      full_name:
                        type: string
                        description: Full name
                      follower_count:
                        type: integer
                        description: Follower count
                      following_count:
                        type: integer
                        description: Following count
                      subscriber_count:
                        type: integer
                        description: Subscriber count. Only for YouTube.
                      is_verified:
                        type: boolean
                      is_business:
                        type: boolean
                      external_id:
                        type: string
                        description: Unique profile identifier by the platform.
                      platform_profile_id:
                        type: string
                        description: Unique profile identifier by the platform.
                  contact_details:
                    type: array
                    description: Array containing contact details
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Type of contact detail
                        value:
                          type: string
                          description: Value of the contact
                      required:
                        - type
                        - value
                required:
                  - work_platform
                  - profile
              examples:
                Example 1:
                  value:
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    profile:
                      platform_username: string
                      url: 'http://example.com'
                      image_url: 'http://example.com'
                      full_name: string
                      follower_count: 0
                      following_count: 0
                      subscriber_count: 0
                      is_verified: true
                      is_business: true
                      external_id: string
                      platform_profile_id: string
                    contact_details:
                      - type: string
                        value: string
      parameters: []
      description: 'Get contact details of a particular handle on Instagram, YouTube and TikTok, without fetching the analytics.'
      tags:
        - Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - work_platform_id
              properties:
                identifier:
                  type: string
                  description: 'Identifier of the profile: username or profile URL'
                work_platform_id:
                  type: string
                  description: Work platform ID
                  format: uuid
            examples:
              Example 1:
                value:
                  identifier: string
                  work_platform_id: 69dc0dd2-b78e-4013-b0d6-5693bb48b548
  /v1/social/creators/profiles/analytics:
    post:
      summary: Get public analytics of a profile
      operationId: postCreatorProfileAnalytics
      responses:
        '200':
          description: Returns detailed analytics of the given profile
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatorProfileAnalyticsResponse'
      description: Get analytics for creator's profile using publicly available data based on their username or link.
      tags:
        - Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatorProfileAnalyticsRequest'
            examples:
              Example:
                value:
                  identifier: string
                  work_platform_id: string
    parameters: []
  /v1/social/creators/async/profiles/analytics:
    post:
      summary: Create a public profile analytics request
      operationId: asyncpostCreatorProfileAnalytics
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - status
                  - identifier
                  - work_platform
                properties:
                  id:
                    type: string
                    format: uuid
                    description: InsightIQ's unique job ID for the submitted request
                  status:
                    type: string
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                    description: Status of the submitted job
                  identifier:
                    type: string
                    description: Submitted URL/username/handle of the profile
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    status: IN_PROGRESS
                    identifier: string
                    work_platform:
                      id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    pricing:
                      currency: string
                      post_type:
                        reels:
                          min: 2500
                          max: 6000
                        story:
                          min: 2500
                          max: 6000
                        static_post:
                          min: 2500
                          max: 6000
                        carousel:
                          min: 2500
                          max: 6000
                    pricing_explanations:
                      engagement:
                        level: Very High
                        description: 'Very high engagement rate increases pricing, reflecting strong connection with audience.'
                      follower_level:
                        level: Celebrity Influencer
                        description: Celebrity influencer status commands higher pricing due to widespread fame and global appeal.
                      audience_location:
                        level: Tier 1
                        description: 'Audience is primarily in Tier 1 countries, where purchasing power and prices are highest.'
                      audience_credibility:
                        level: High
                        description: 'High follower credibility score increases pricing, reflecting authenticity of audience.'
      description: |-
        Column A | Column B | Column C
        ---------|----------|---------
         A1 | B1 | C1
         A2 | B2 | C2
         A3 | B3 | C3Get analytics for creator's profile using publicly available data based on their username or link. This endpoint is asynchronous in nature. PROFILE_ANALYTICS.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#creator-discovery) for more information.
      tags:
        - Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatorProfileAnalyticsRequest'
            examples:
              Example:
                value:
                  identifier: string
                  work_platform_id: string
    parameters: []
  '/v1/social/creators/async/profiles/analytics/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: InsightIQ's unique job ID for the submitted profile analytics job
    get:
      summary: Fetch public analytics report of a profile
      operationId: get-v1-social-creators-async-profiles-analytics
      description: |-
        Endpoint to get the profile analytics data with the supplied job ID.

        Usually used in conjunction with the "PROFILE_ANALYTICS.*" webhooks, [read more](../../../API/webhook-events#creator-discovery).
      tags:
        - Creator Discovery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncCreatorProfileAnalyticsResponse'
  /v1/professional/creators/profiles/search:
    post:
      summary: Search public profiles of creators
      operationId: postProfessionalCreatorProfileSearch
      responses:
        '200':
          description: Returns search results according to the given filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalCreatorSearchResponse'
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      description: Search for LinkedIn creator profiles using publicly available data based on available filters.
      tags:
        - Professional Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalCreatorSearchRequest'
  /v1/professional/creators/profiles/analytics:
    post:
      summary: Get public analytics of a professional profile
      operationId: post-v1-professional-creators-profiles-analytics
      responses:
        '200':
          description: Returns detailed analytics of the given professional profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalProfilePublicAnalyticsDistResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessionalProfileRequest'
      description: Get analytics of profile using publicly available data based on their profile link.
      tags:
        - Professional Creator Discovery
    parameters: []
  /v1/professional/creators/dictionary/locations:
    parameters: []
    get:
      summary: Get locations for public profiles search
      operationId: get-v1-professional-creators-profiles-dictionary-countries
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalLocationsDictResponse'
              examples: {}
          headers: {}
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/professional_search_dictionary_identifier'
      description: |-
        Dictionary of countries for the public profiles search endpoint.

        We recommend caching the response at your end for 15 days.
      tags:
        - Professional Creator Discovery
      requestBody:
        content: {}
  /v1/professional/creators/dictionary/education-institutes:
    parameters: []
    get:
      summary: Get education institutes for public profiles search
      operationId: get-v1-professional-creators-profiles-dictionary-education-institutes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalEducationInstitutesDictResponse'
              examples: {}
          headers: {}
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/professional_search_dictionary_identifier'
      description: |-
        Dictionary of education institutes for the public profiles search endpoint.

        We recommend caching the response at your end for 15 days.
      tags:
        - Professional Creator Discovery
      requestBody:
        content: {}
  /v1/professional/creators/dictionary/education-degrees:
    parameters: []
    get:
      summary: Get education degrees for public profiles search
      operationId: get-v1-professional-creators-profiles-dictionary-education-degrees
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalEducationDegreesDictResponse'
              examples: {}
          headers: {}
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/professional_search_dictionary_identifier'
      description: |-
        Dictionary of education-degrees for the public profiles search endpoint.

        We recommend caching the response at your end for 15 days.
      tags:
        - Professional Creator Discovery
      requestBody:
        content: {}
  /v1/professional/creators/dictionary/talks-about:
    parameters: []
    get:
      summary: Get talks about topics for public profiles search
      operationId: get-v1-professional-creators-profiles-dictionary-talks-about
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalTalksAboutDictResponse'
              examples: {}
          headers: {}
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/professional_search_dictionary_identifier'
      description: |-
        Dictionary of talks about topics for the public profiles search endpoint.

        We recommend caching the response at your end for 15 days.
      tags:
        - Professional Creator Discovery
      requestBody:
        content: {}
  /v1/professional/creators/dictionary/companies:
    parameters: []
    get:
      summary: Get companies for public profiles search
      operationId: get-v1-professional-creators-profiles-dictionary-companies
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalCompaniesDictResponse'
              examples: {}
          headers: {}
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/professional_search_dictionary_identifier'
      description: |-
        Dictionary of companies for the public profiles search endpoint.

        We recommend caching the response at your end for 15 days.
      tags:
        - Professional Creator Discovery
      requestBody:
        content: {}
  /v1/social/creators/email-lookup:
    post:
      summary: Find social media profiles associated with supplied email ids.
      operationId: emailreverselookup
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Job ID for the request
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                    description: Timestamp of job submission.
                  emails:
                    type: array
                    description: Array of emails to look up for profiles.
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                    description: Status of the job.
                required:
                  - id
                  - created_at
                  - emails
                  - status
      description: 'This API enables you to look up a social media profile associated with a specific email id. EMAIL_LOOKUP.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#creator-discovery) for more information.'
      tags:
        - Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                emails:
                  type: array
                  description: Array of email id's to match profiles to.
                  items:
                    type: string
              required:
                - emails
    parameters: []
  '/v1/social/creators/email-lookup/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Job ID
    get:
      summary: Get results of the reverse email lookup
      operationId: getreversemeaillookup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  lookup_report:
                    type: object
                    required:
                      - matched_count
                      - non_matched_count
                    properties:
                      id:
                        type: string
                        format: uuid
                      emails:
                        type: array
                        items:
                          type: string
                      status:
                        type: string
                        enum:
                          - IN_PROGRESS
                          - SUCCESS
                          - FAILURE
                      matched_count:
                        type: integer
                      non_matched_count:
                        type: integer
                  matched_emails:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                        work_platform:
                          $ref: '#/components/schemas/WorkPlatformAttribute'
                        platform_username:
                          type: string
                        full_name:
                          type: string
                        follower_count:
                          type: integer
                        subscriber_count:
                          type: integer
                        url:
                          type: string
                          format: uri
                        image_url:
                          type: string
                          format: uri
                        is_verified:
                          type: boolean
                      required:
                        - email
                        - work_platform
                        - platform_username
                  non_matched_emails:
                    type: array
                    items:
                      type: string
                required:
                  - lookup_report
                  - matched_emails
                  - non_matched_emails
      description: |-
        Retrieve the results of the email to social profile lookup by supplying the job ID.

        Usually used in conjunction with the "EMAIL_LOOKUP.*" webhooks, [read more](../../../API/webhook-events#creator-discovery).
      tags:
        - Creator Discovery
  /v1/social/creators/audience-overlap:
    post:
      summary: Find audience overlap information
      operationId: audioverlap
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Job ID for the request
                    format: uuid
                  identifiers:
                    type: array
                    description: Array of profile identifiers to find audience overlap between.
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                    description: Status of the job.
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                required:
                  - id
                  - identifiers
                  - status
                  - work_platform
      description: 'Find the unique and overlapping audience among the followers of a set of creators of the same platform. AUDIENCE_OVERLAP.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#creator-discovery) for more information.'
      tags:
        - Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work_platform_id:
                  type: string
                  description: Work platform id
                  format: uuid
                identifiers:
                  type: array
                  description: Array of usernames/profiles to compare the audience overlap. Please pass the identifiers without the preceding @.
                  items:
                    type: string
              required:
                - work_platform_id
                - identifiers
        description: ''
    parameters: []
  '/v1/social/creators/audience-overlap/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Job ID
    get:
      summary: Fetch the audience overlap information
      operationId: getaudioverlap
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                  total_follower_count:
                    type: integer
                  unique_follower_count:
                    type: integer
                  total_subscriber_count:
                    type: integer
                  unique_subscriber_count:
                    type: integer
                  profiles:
                    type: array
                    items:
                      type: object
                      properties:
                        platform_username:
                          type: string
                        follower_count:
                          type: integer
                        subscriber_count:
                          type: integer
                        unique_follower_percentage:
                          type: number
                        overlap_follower_percentage:
                          type: number
                        unique_subscriber_percentage:
                          type: number
                        overlap_subscriber_percentage:
                          type: number
                      required:
                        - platform_username
                        - follower_count
                        - subscriber_count
                        - unique_follower_percentage
                        - overlap_follower_percentage
                        - unique_subscriber_percentage
                        - overlap_subscriber_percentage
                required:
                  - id
                  - status
                  - profiles
      description: |-
        Retrieve the audience overlap information by supplying the job ID.

        Usually used in conjunction with the "AUDIENCE_OVERLAP.*" webhooks, [read more](../../../API/webhook-events#creator-discovery).
      tags:
        - Creator Discovery
  /v1/social/creators/estimated-metrics:
    post:
      summary: Create an estimated reach & impressions request
      operationId: estimatedmetrics
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - profile_url
                  - content_type
                  - work_platform
                  - status
                properties:
                  id:
                    type: string
                    description: Job ID for the request
                    format: uuid
                  profile_url:
                    type: string
                    format: uri
                    description: Creator profile URL for which reach and impressions is estimated.
                  content_type:
                    enum:
                      - REELS
                      - STORY
                      - FEED
                    description: Content type for which the estimation is made.
                  format:
                    description: Format of the content type
                    enum:
                      - IMAGE
                      - VIDEO
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  status:
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                    description: Status of the submitted job
      description: Estimate the reach and impressions for a content item of a creator.
      tags:
        - Creator Discovery
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - profile_url
                - content_type
                - work_platform_id
              properties:
                profile_url:
                  type: string
                  format: uri
                  description: Creator profile URL for which reach and impressions is to be estimated.
                content_type:
                  enum:
                    - REELS
                    - STORY
                    - FEED
                  description: Content type for which the estimation is to be made.
                format:
                  enum:
                    - IMAGE
                    - VIDEO
                  description: Format of the content item. Provide the format if the content type is STORY or FEED.
                work_platform_id:
                  type: string
                  description: Work platform id
                  format: uuid
                  example: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
        description: ''
    parameters: []
  '/v1/social/creators/estimated-metrics/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Job ID
    get:
      summary: Get the estimated reach & impressions for a content item
      operationId: getestimatedmetrics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - profile_url
                  - content_type
                  - status
                  - work_platform
                  - estimated_reach
                  - estimated_impressions
                properties:
                  id:
                    type: string
                    description: Job ID
                  profile_url:
                    type: string
                    description: Submitted profile url
                  content_type:
                    type: string
                    description: Submitted content type
                  format:
                    type: string
                    description: Submitted content format
                  status:
                    type: string
                    description: Status of the submitted job
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  estimated_reach:
                    type: object
                    properties:
                      min:
                        type: number
                        description: Lower bound of the estimated range.
                      max:
                        type: number
                        description: Upper bound of the estimated range.
                      absolute:
                        type: number
                        description: Estimated absolute value.
                  estimated_impressions:
                    type: object
                    properties:
                      min:
                        type: number
                        description: Lower bound of the estimated range.
                      max:
                        type: number
                        description: Upper bound of the estimated range.
                      absolute:
                        type: number
                        description: Estimated absolute value.
      description: Get the estimated reach & impressions for a content item.
      tags:
        - Creator Discovery
      parameters: []
      requestBody:
        content: {}
  /v1/social/creators/contents/fetch:
    post:
      summary: 'Get public content information for a profile or single content item (beta, subject to change)'
      operationId: postCreatorContentsFetch
      responses:
        '200':
          description: Returns detailed analytics of the profile's content or the single content item.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatorContentFetchResponse'
              examples:
                Example:
                  value:
                    data:
                      - work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        engagement:
                          like_count: 42134
                          comment_count: 4234
                          view_count: 42343
                          share_count: 42343
                        platform_content_id: 12ccaf87
                        title: USA Tours
                        format: VIDEO
                        type: VIDEO
                        url: 'https://youtu.be/jzWweY4xPe8'
                        media_url: 'https://video.cdninstagram.com/v/t50.16885-16/273384537_472655704353078_8308247021721136693_n.mp4?_nc_cat=100&vs=661086908417570_1261186177&_nc_vs=HBksFQAYJEdGbUVTeEEyNlZ1NzRLMEJBRFd1NHJPbDBreHpidlZCQUFBRhUAAsgBABUAGCRHSnU0U3hEM2kwQ0VQVk1EQUM3S29OeTlueUJzYnZWQkFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMRUAACbG3%2FGq0JXjPxUCKAJDMywXQCOhysCDEm8YEmRhc2hfYmFzZWxpbmVfMV92MREAdewHAA%3D%3D&ccb=1-5&_nc_sid=59939d&efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjQ4MC5pZ3R2In0%3D&_nc_ohc=qcTIWWC39rQAX9xprW6&_nc_ht=video.cdninstagram.com&edm=AM6HXa8EAAAA&oh=00_AT85xcdCSq921RH5KCSfIukPMfk0QCajZEP5Ym4fY3p1Pw&oe=621D1EA5&_nc_rid=5d42feb0d5'
                        duration: 523
                        description: US tours video.
                        thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
                        published_at: '2021-05-26T00:00:00.000000'
      description: |
        Retrieve the information of a profile's content or information of a single content item with the supplied content url.
      tags:
        - Public Content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatorContentFetchRequest'
            examples:
              Example:
                value:
                  profile_url: 'http://example.com'
                  work_platform_id: string
                  content_type: REELS
      parameters: []
    parameters: []
  /v1/social/creators/async/contents/fetch:
    post:
      summary: Create content fetch request
      operationId: asyncpostCreatorContentsFetch
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncPublicContentJobResponse'
      description: 'Endpoint to submit a request to fetch content data. CONTENTS_FETCH.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#public-content) for more information.'
      tags:
        - Public Content
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncCreatorContentFetchRequest'
    parameters: []
  '/v1/social/creators/async/contents/fetch/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: InsightIQ's unique job ID for the submitted public content request
    get:
      summary: Retrieve content data for a profile or single content item
      operationId: get-v1-social-creators-async-contents-fetch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncCreatorContentFetchResponse'
      description: |-
        Get the content data for a profile or single content item with the supplied job ID.

        Usually used in conjunction with the "CONTENTS_FETCH.*" webhooks, [read more](../../../API/webhook-events#public-content).
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: The number of search results to be returned.
        - schema:
            type: integer
          in: query
          name: offset
          description: The number of search results to skip. Use this argument for pagination.
      tags:
        - Public Content
  /v1/professional/creators/contents/fetch:
    post:
      summary: Create content fetch request for LinkedIn
      operationId: post-v1-professional-creators-contents-fetch
      description: 'Endpoint to submit a request to fetch LinkedIn content data. CONTENTS_FETCH.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#public-content) for more information.'
      tags:
        - Public Content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncCreatorContentFetchRequest'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncPublicContentJobResponse'
  '/v1/professional/creators/contents/fetch/{id}':
    get:
      summary: Retrieve content data for a LinkedIn profile or single LinkedIn content item
      operationId: get-professional-creators-contents-fetch-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncCreatorContentFetchResponse'
      description: |-
        Get the content data for a profile or single content item with the supplied job ID.

        Usually used in conjunction with the "CONTENTS_FETCH.*" webhooks, [read more](../../../API/webhook-events#public-content).
      tags:
        - Public Content
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: The number of search results to be returned.
        - schema:
            type: integer
          in: query
          name: offset
          description: The number of search results to skip. Use this argument for pagination.
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: InsightIQ's unique job ID
  /v1/social/creators/contents/comments:
    post:
      summary: 'Get public comments for a single content item (beta, subject to change)'
      operationId: post-v1-social-creators-contents-comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicCommentsResponse'
              examples:
                Example 1:
                  value:
                    data:
                      - work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        content_url: 'https://insightiq.ai/storage/instagram.png'
                        text: USA Tours
                        commenter_username: Rashford
                        commenter_display_name: Rashford
                        like_count: 42134
                        reply_count: 4234
                        published_at: '2021-05-26T00:00:00.000000'
      tags:
        - Public Content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicCommentsRequest'
            examples: {}
    parameters: []
  /v1/professional/creators/contents/comments:
    post:
      summary: Create comments fetch request for a single LinkedIn content item
      operationId: post-v1-professional-creators-contents-comments
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: InsightIQ's unique job ID for the submitted request
                  content_url:
                    type: string
                    format: uri
                    description: Content url for which the comments will be fetched
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute-Professional'
                required:
                  - id
                  - content_url
                  - work_platform
      tags:
        - Public Content
      description: 'Endpoint to submit a request to fetch LinkedIn content comments data. CONTENT_COMMENTS_FETCH.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#public-comments) for more information.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content_url:
                  type: string
                  format: uri
                  description: LinkedIn Content URL to fetch comments
                work_platform_id:
                  type: string
                  format: uuid
                  description: Work platform ID for the platform on which you want to fetch comments.
              required:
                - content_url
                - work_platform_id
    parameters: []
  '/v1/professional/creators/contents/comments/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: InsightIQ's unique job ID
    get:
      summary: Retrieve comments data for a LinkedIn content item
      operationId: get-v1-professional-creators-contents-comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  '':
                    $ref: '#/components/schemas/ProfessionalCommentsResponse'
      tags:
        - Public Content
      description: |-
        Get the comments data for a single content item with the supplied job ID.

        Usually used in conjunction with the "CONTENT_COMMENTS_FETCH.*" webhooks, [read more](../../../API/webhook-events#public-comments).
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: The number of comments to be returned.
        - schema:
            type: integer
          in: query
          name: offset
          description: The number of comments to skip. Use this argument for pagination.
  /v1/social/creators/contents/audience:
    post:
      summary: Create a content demographics request
      operationId: post-v1-social-creators-contents-audience
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  created_at:
                    type: string
                  post_count:
                    type: integer
                    nullable: true
                  total_like_count:
                    type: integer
                    nullable: true
      tags:
        - Public Content
      description: |-
        Get demographic information about the audience that has interacted with the provided content items. The API retrieves aggregated audience demographics data for up to 5 content items shared by a particular profile. Snapchat Spotlights are the only content type supported currently.

        Usually used in conjunction with the "CONTENT_AUDIENCE_FETCH.*" webhooks, [read more](../../../API/webhook-events#public-comments).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - content_urls
                - work_platform_id
                - identifier
              properties:
                content_urls:
                  type: array
                  description: Content URL to fetch audience. All content items should belong to a single profile only.
                  maxItems: 5
                  minItems: 1
                  items:
                    type: string
                    format: uri
                work_platform_id:
                  type: string
                  format: uuid
                  description: Work platform ID for the platform on which you want to fetch audience.
                identifier:
                  type: string
                  description: Profile URL or username of the profile associated with the content items requested.
  '/v1/social/creators/contents/audience/{id}':
    get:
      summary: Retrieve content demographics
      operationId: get-v1-social-creators-contents-audience-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapchatContentAudienceDemographicsResponse'
      tags:
        - Public Content
      description: |-
        Get demographic information with the supplied job ID. The API retrieves aggregated audience demographics data for up to 5 content items shared by a particular profile. Snapchat Spotlights are the only content type supported currently.

        Usually used in conjunction with the "CONTENT_AUDIENCE_FETCH.*" webhooks, [read more](../../../API/webhook-events#public-comments).
      parameters: []
      requestBody:
        content: {}
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique job ID
  /v1/insights/comments-analytics:
    post:
      summary: Create a comments relevance analysis request
      operationId: post-v1-insights-comments-analytics
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique job ID for the submitted request
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  content_url:
                    type: string
                    format: uri
                    description: Content URL for which the comments will be analysed for relevance
                  brand_profile_url:
                    type: string
                    format: uri
                    description: Profile URL of the brand
                required:
                  - id
                  - work_platform
                  - content_url
                  - brand_profile_url
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    content_url: 'http://example.com'
                    brand_profile_url: 'http://example.com'
      description: 'Endpoint to submit a comments relevance request. COMMENTS_ANALYTICS.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#insights) for more information.'
      tags:
        - Insights
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work_platform_id:
                  type: string
                  format: uuid
                  description: Unique ID of the work platform
                content_url:
                  type: string
                  format: uri
                  description: Content URL for which the comments will be analysed for relevance
                brand_profile_url:
                  type: string
                  format: uri
                  description: Profile URL of the brand
              required:
                - work_platform_id
                - content_url
                - brand_profile_url
            examples:
              Example:
                value:
                  work_platform_id: 69dc0dd2-b78e-4013-b0d6-5693bb48b548
                  content_url: 'http://example.com'
                  brand_profile_url: 'http://example.com'
  '/v1/insights/comments-analytics/{id}':
    get:
      summary: Get comments relevance insights
      operationId: get-v1-insights-comments-analytics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique job ID for the submitted request
                    format: uuid
                  status:
                    type: string
                    description: Status of the submitted request
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  content_url:
                    type: string
                    description: Content URL for which the comments were analysed
                    format: uri
                  brand_profile_url:
                    type: string
                    description: Profile URL of the brand
                    format: uri
                  report_information:
                    $ref: '#/components/schemas/RelevanceReportObject'
                required:
                  - id
                  - status
                  - work_platform
                  - content_url
                  - brand_profile_url
                  - report_information
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    status: IN_PROGRESS
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    content_url: 'http://example.com'
                    brand_profile_url: 'http://example.com'
                    report_information:
                      total_comment_count: 0
                      engagement_relevance_score: 0
                      postive_comment_count: 0
                      negative_comment_count: 0
                      neutral_comment_count: 0
                      purchase_intent_comment_count: 0
      description: |-
        Endpoint to retrieve comments relevance insights with the supplied job ID.

        Usually used in conjunction with the "COMMENTS_ANALYTICS.*" webhooks, [read more](../../../API/webhook-events#insights).
      tags:
        - Insights
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Unique job ID
  '/v1/insights/comments-analytics/{id}/comments':
    get:
      summary: Get the stream of analysed comments
      operationId: get-v1-insights-comments-analytics-stream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments_analytics:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique id of the request
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        work_platform:
                          $ref: '#/components/schemas/WorkPlatformAttribute'
                        content_url:
                          type: string
                          format: uri
                          description: Content URL for which the comments were analysed
                        brand_profile_url:
                          type: string
                          format: uri
                          description: Submitted brand profile URL
                        text:
                          type: string
                          description: Comment text
                        sentiment:
                          type: string
                          enum:
                            - POSITIVE
                            - NEGATIVE
                            - NEUTRAL
                          description: Comment sentiment
                        relevance_score:
                          type: number
                          description: Relevance score of the comment
                        type:
                          type: string
                          description: Type of the comment
                          enum:
                            - IRRELEVANT_COMMENTS
                            - RELEVANT_COMMENTS
                      required:
                        - work_platform
                        - content_url
                        - brand_profile_url
                        - text
                        - sentiment
                        - relevance_score
                        - type
                  metadata:
                    type: object
                    required:
                      - limit
                      - offset
                    properties:
                      limit:
                        type: integer
                        description: The number of comments to be returned. It can be between 1 to 100. The default value is 10.
                      offset:
                        type: integer
                        description: The number of comments to be returned. It can be between 1 to 100. The default value is 10.
                required:
                  - comments_analytics
                  - data
                  - metadata
              examples:
                Example:
                  value:
                    comments_analytics:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    data:
                      - work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        content_url: 'http://example.com'
                        brand_profile_url: 'http://example.com'
                        text: string
                        sentiment: POSITIVE
                        relevance_score: 0
                        type: relevant_comments
                    metadata:
                      limit: 0
                      offset: 0
      description: |-
        Endpoint to retrieve list of comments for which the comments relevance insights is derived with the supplied job ID.

        Usually used in conjunction with the "COMMENTS_ANALYTICS.*" webhooks, [read more](../../../API/webhook-events#insights).
      tags:
        - Insights
      parameters:
        - schema:
            type: string
            enum:
              - RELEVANT_COMMENTS
              - IRRELEVANT_COMMENTS
          in: query
          name: type
          description: Comment type
          required: true
        - schema:
            type: integer
            default: 10
          in: query
          name: limit
          required: true
          description: The number of comments to be returned. It can be between 1 to 100. The default value is 10.
        - schema:
            type: integer
            default: 0
          in: query
          name: offset
          description: The number of comments to skip. Use this argument for pagination. The default value is 0.
          required: true
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Unique job ID
  /v1/insights/profiles/comments-analytics:
    post:
      summary: Create a purchase intent analysis request
      operationId: post-v1-insights-profiles-comments-analytics
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique job ID for the submitted request
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  profile_url:
                    type: string
                    format: uri
                    description: Profile URL for which the comments will be analysed for purchase intent
                required:
                  - id
                  - work_platform
                  - profile_url
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    profile_url: 'http://example.com'
      description: 'Endpoint to submit a purchase intent request. `PROFILE_COMMENTS_ANALYTICS.SUCCESS` webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#insights) for more information.'
      tags:
        - Insights
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work_platform_id:
                  type: string
                  format: uuid
                  description: Unique ID of the work platform
                profile_url:
                  type: string
                  format: uri
                  description: Profile URL for which the comments will be analysed for purchase intent
              required:
                - work_platform_id
                - profile_url
            examples:
              Example:
                value:
                  work_platform_id: 69dc0dd2-b78e-4013-b0d6-5693bb48b548
                  profile_url: 'http://example.com'
  '/v1/insights/profiles/comments-analytics/{id}':
    get:
      summary: Get purchase intent insights
      operationId: get-v1-insights-profiles-comments-analytics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique job ID for the submitted request
                    format: uuid
                  status:
                    type: string
                    description: Status of the submitted request
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  profile_url:
                    type: string
                    description: Profile URL for which the comments were analysed
                    format: uri
                  report_information:
                    $ref: '#/components/schemas/RelevanceReportObject'
                  content_information:
                    type: array
                    description: Array containing information about the content that was analyzed from the given profile to get the purchase intent
                    items:
                      $ref: '#/components/schemas/ContentInformationObject'
                required:
                  - id
                  - status
                  - work_platform
                  - profile_url
                  - report_information
                  - content_information
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    status: IN_PROGRESS
                    work_platform:
                      id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    profile_url: 'http://example.com'
                    report_information:
                      total_comment_count: 0
                      engagement_relevance_score: 0
                      postive_comment_count: 0
                      negative_comment_count: 0
                      neutral_comment_count: 0
                      purchase_intent_comment_count: 0
                    content_information:
                      - content_url: 'http://example.com'
                        status: SUCCESS
                        comment_analytics_job_id: 49684edd-fc34-4866-8b8d-ff5bbf1d3836
      description: |-
        Endpoint to retrieve purchase intent insights with the supplied job ID.

        Usually used in conjunction with the "PROFILE_COMMENTS_ANALYTICS.*" webhooks, [read more](../../../API/webhook-events#insights).
      tags:
        - Insights
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Unique job ID
  '/v1/insights/profiles/comments-analytics/{id}/comments':
    get:
      summary: Get the stream of analysed comments
      operationId: get-v1-insights-profiles-comments-analytics-stream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content_comments_analytics:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique id of the request
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        work_platform:
                          $ref: '#/components/schemas/WorkPlatformAttribute'
                        profile_url:
                          type: string
                          format: uri
                          description: Profile URL for which the comments were analysed
                        content_url:
                          type: string
                          format: uri
                          description: Content URL for which the comments were analysed
                        text:
                          type: string
                          description: Comment text
                        sentiment:
                          type: string
                          enum:
                            - POSITIVE
                            - NEGATIVE
                            - NEUTRAL
                          description: Comment sentiment
                        purchase_intent:
                          type: boolean
                          description: Purchase intent derived from the comment
                      required:
                        - work_platform
                        - profile_url
                        - content_url
                        - text
                        - sentiment
                        - purchase_intent
                  metadata:
                    type: object
                    required:
                      - limit
                      - offset
                    properties:
                      limit:
                        type: integer
                        description: The number of comments to be returned. It can be between 1 to 100. The default value is 10.
                      offset:
                        type: integer
                        description: The number of comments to be returned. It can be between 1 to 100. The default value is 10.
                required:
                  - content_comments_analytics
                  - data
                  - metadata
              examples:
                Example:
                  value:
                    content_comments_analytics:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    data:
                      - work_platform:
                          id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                          name: Instagram
                          logo_url: 'https://insightiq.ai/storage/instagram.png'
                        profile_url: 'http://example.com'
                        content_url: 'http://example.com'
                        text: string
                        sentiment: POSITIVE
                        purchase_intent: true
                    metadata:
                      limit: 0
                      offset: 0
      description: |-
        Endpoint to retrieve list of comments for which the purchase intent insights is derived with the supplied job ID.

        Usually used in conjunction with the "PROFILE_COMMENTS_ANALYTICS.*" webhooks, [read more](../../../API/webhook-events#insights).
      tags:
        - Insights
      parameters:
        - schema:
            type: integer
            default: 10
          in: query
          name: limit
          description: The number of comments to be returned. It can be between 1 to 100. The default value is 10.
        - schema:
            type: integer
            default: 0
          in: query
          name: offset
          description: The number of comments to skip. Use this argument for pagination. The default value is 0.
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Unique job ID
  /v1/safety/social-profile-screening:
    post:
      summary: Submit request to get risk details for a profile or a content item
      operationId: get-v1-analytics-safety
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - status
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique job ID for the submitted request.
                  status:
                    type: string
                    enum:
                      - IN_PROGRESS
                      - COMPLETED
                      - FAILURE
                    description: Status of the submitted job.
      description: 'Provide a profile URL or content URL to get the trust and safety score. `SAFETY_FETCH.SUCCESS` webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#safety) for more information.'
      tags:
        - Safety
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/SafetyContentURL'
                - $ref: '#/components/schemas/SafetyProfileURL'
      x-stoplight:
        id: vck6qm93zo5ik
  '/v1/safety/social-profile-screening/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique job ID for the submitted job
    get:
      summary: Get the risk details for a profile or content item
      operationId: get-v1-analytics-safety-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoreResponse'
      description: 'Endpoint to retrieve the risk score for a profile or content item. Usually used in conjunction with the "SAFETY_FETCH.*" webhooks, [read more](../../../API/webhook-events#safety).'
      tags:
        - Safety
      x-stoplight:
        id: 9xip32wmjilpr
  '/v1/safety/social-profile-screening/{id}/contents':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique job ID for the submitted job
    get:
      summary: Get the risk details for content items in a profile
      operationId: get-v1-analytics-safety-contents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentRiskScoreResponse'
      description: 'Endpoint to retrieve the risk score for individual content items from a profile. Usually used in conjunction with the "SAFETY_FETCH.*" webhooks, [read more](../../../API/webhook-events#safety).'
      tags:
        - Safety
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - schema:
            type: boolean
            enum:
              - 'true'
          in: query
          name: include_all
          description: All analysed posts (including those that were flagged)
      x-stoplight:
        id: n612o94myzz08
  /v1/safety/media-screening:
    post:
      summary: Submit request to get risk level and summary for a media URL
      operationId: get-v1-analytics-safety-media
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique job ID for the submitted request.
                  status:
                    type: string
                    enum:
                      - IN_PROGRESS
                      - COMPLETED
                      - FAILURE
                    description: Status of the submitted job.
                required:
                  - id
                  - status
      description: 'Provide a media URL to get the trust and safety score. `SAFETY_FETCH.SUCCESS` webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#safety) for more information.'
      tags:
        - Safety
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - media_url
                - description
                - media_type
              properties:
                media_url:
                  type: string
                  format: uri
                  description: Media URL
                description:
                  type: string
                  x-stoplight:
                    id: fn7gbv4cda85b
                  description: Caption/description of the media.
                media_type:
                  type: string
                  description: Media Type
                  enum:
                    - IMAGE
                    - VIDEO
                flagging_criteria_id:
                  type: string
                  x-stoplight:
                    id: c4xwp8ezwqosu
                  example: 13b96940-2bc0-44f0-8258-40fd3a8416ed
            examples:
              Example 1:
                value:
                  media_url: 'http://example.com'
                  description: string
                  media_type: IMAGE
                  flagging_criteria_id: 13b96940-2bc0-44f0-8258-40fd3a8416ed
      x-stoplight:
        id: jvcfibwb77xa0
  '/v1/safety/media-screening/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique job ID for the submitted job
    get:
      summary: Get the risk level and summary for a media URL
      operationId: get-v1-analytics-safety-media-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaRiskScoreResponse'
      description: 'Endpoint to retrieve the risk score for a media URL. Usually used in conjunction with the "SAFETY_FETCH.*" webhooks, [read more](../../../API/webhook-events#safety).'
      tags:
        - Safety
      x-stoplight:
        id: t238lg6e2vykc
  /v1/safety/flagging-criteria:
    post:
      summary: Create flagging criteria for screening
      operationId: post-v1-analytics-safety-flagging-criteria
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    id: 15606fef-63cc-4025-91e5-ed3a749b49e0
                    name: Flagging Criteria name
                    media_types:
                      - IMAGE
                    time_period_in_months: 0
                    content_limit: 0
                    work_platforms:
                      - id: string
                    categories:
                      - 'violence, substances, sexual_indecent_content, hate_speech_aggression, audio_language_toxicity, caption_language_toxicity'
                    keywords:
                      - term: string
                        action:
                          - INCLUDE
                        match_type:
                          - 'EXACT, STEMMING, SYNONYM'
                required:
                  - id
                  - name
                  - media_types
                  - time_period_in_months
                  - content_limit
                  - work_platforms
                  - categories
                  - keywords
                properties:
                  id:
                    type: string
                    nullable: true
                  name:
                    type: string
                    nullable: true
                  media_types:
                    type: array
                    nullable: true
                    items: {}
                  time_period_in_months:
                    type: integer
                    description: Defines the timeframe (in months) for analyzing posts. Only content created within this period will be considered.
                    nullable: true
                  content_limit:
                    type: integer
                    description: Maximum number of content items to be evaluated.
                    nullable: true
                  work_platforms:
                    type: array
                    items:
                      x-stoplight:
                        id: ejc6i9380g0n5
                      type: object
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          x-stoplight:
                            id: opovllm0eoyab
                          nullable: true
                  categories:
                    type: array
                    description: List of sensitivities to add in the flagging criteria. Category of risk
                    nullable: true
                    items: {}
                  keywords:
                    type: array
                    nullable: true
                    items:
                      x-stoplight:
                        id: vw9cyrh5z433y
                      type: object
                      properties:
                        term:
                          type: string
                          x-stoplight:
                            id: qjqeddup8pztw
                        action:
                          type: array
                          x-stoplight:
                            id: m7l3pfmbv1uho
                          items:
                            x-stoplight:
                              id: w55ewai5rfvzo
                            enum: []
                        match_type:
                          type: array
                          x-stoplight:
                            id: k4pmeuyc8yreq
                          items:
                            x-stoplight:
                              id: 3bjzlxt78vfsz
                            type: string
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: string
                    media_types:
                      - string
                    time_period_in_months: 0
                    content_limit: 0
                    work_platforms:
                      - id: string
                    categories:
                      - violence
                      - substances
                      - sexual_indecent_content
                      - hate_speech_aggression
                      - audio_language_toxicity
                      - caption_language_toxicity
                    keywords:
                      - term: string
                        action:
                          - EXCLUDE
                        match_type:
                          - EXACT
      description: Create flagging criteria for social media background screening reports.
      tags:
        - Safety
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScreeningFlaggingCriteria'
      x-stoplight:
        id: lvtb4dp4wcnlh
    get:
      summary: Get all flagging criteria for screening
      operationId: get-v1-analytics-safety-flagging-criteria
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    data:
                      - id: 15606fef-63cc-4025-91e5-ed3a749b49e0
                        name: Flagging Criteria name
                        media_types: null
                        time_period_in_months: null
                        content_limit: null
                        work_platforms: null
                        categories:
                          - violence
                          - substances
                          - sexual_indecent_content
                          - hate_speech_aggression
                          - audio_language_toxicity
                          - caption_language_toxicity
                        keywords: null
                    metadata:
                      offset: 0
                      limit: 10
                properties:
                  data:
                    $ref: '#/components/schemas/ScreeningFlaggingCriteriaList'
                  metadata:
                    type: object
                    properties:
                      offset:
                        type: integer
                      limit:
                        type: integer
              examples:
                Example 1:
                  value:
                    data:
                      - id: string
                        name: string
                        media_types: null
                        time_period_in_months: null
                        content_limit: null
                        work_platforms:
                          - id: string
                        categories:
                          - string
                        keywords:
                          - term: string
                            action: INCLUDE
                            match_type:
                              - EXACT
                    metadata:
                      offset: 0
                      limit: 0
      description: Get all flagging criteria for social media background screening reports.
      tags:
        - Safety
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      x-stoplight:
        id: 320dkzwlyd8c9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreeningFlaggingCriteriaList'
  '/v1/safety/flagging-criteria/{id}':
    get:
      summary: Get specific flagging criteria for screening
      operationId: get-v1-analytics-safety-flagging-criteria
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningFlaggingCriteriaList'
              examples:
                Example 1:
                  value:
                    data:
                      - id: string
                        name: string
                        media_types: null
                        time_period_in_months: null
                        content_limit: null
                        work_platforms: null
                        categories:
                          - string
                        keywords: null
      description: Get a specific flagging criteria by ID for social media background screening reports.
      tags:
        - Safety
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - schema:
            type: string
          in: query
          name: id
          description: Unique ID associated with a flagging id
      x-stoplight:
        id: t0b9xfsewn7ab
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /v1/safety/profile-screening:
    post:
      summary: Submit request to generate social media screening report for a set of PII
      operationId: get-v1-analytics-profile-screening
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - status
                properties:
                  id:
                    type: string
                    format: uuid
                  status:
                    enum:
                      - FAILURE
                      - IN_PROGRESS
                      - SUCCESS
      description: 'Endpoint to submit Personal Identifiable information (PII) for social media background screening reports. Usually used in conjunction with the "SAFETY_FETCH.*" webhooks, [read more](../../../API/webhook-events#safety).'
      tags:
        - Safety
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileScreeningRequest'
      x-stoplight:
        id: l30tnr1e9uvqq
  '/v1/safety/profile-screening/{id}':
    get:
      summary: Get social media screening report for a set of PII
      operationId: get-v1-analytics-profile-screening-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileScreeningResponse'
      description: 'Endpoint to retrieve the social media background screening reports. Usually used in conjunction with the "SAFETY_FETCH.*" webhooks, [read more](../../../API/webhook-events#safety).'
      tags:
        - Safety
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                include_all:
                  type: boolean
                  x-stoplight:
                    id: nd9oa71hd7off
                  default: true
      x-stoplight:
        id: 4as3xu42fsha0
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique id of the submitted request
  '/v1/safety/profile-screening/{id}/contents':
    get:
      summary: Get content level social media screening report for a set of PII
      operationId: get-v1-analytics-profile-screening-id-contents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileScreeningContentResponse'
      description: 'Endpoint to retrieve the social media background screening reports at content level. Usually used in conjunction with the "SAFETY_FETCH.*" webhooks, [read more](../../../API/webhook-events#safety).'
      tags:
        - Safety
      requestBody:
        content: {}
      x-stoplight:
        id: sh7kwbcmi8a2x
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: integer
          in: query
          name: offset
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique id of the submitted request
  /v1/social/contents/publish:
    post:
      summary: Publish content to a platform
      responses:
        '202':
          description: 'Returns the publish object, which is currently being processed.'
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishContentResponse'
              examples:
                Example:
                  value:
                    data:
                      id: string
                      user:
                        id: string
                        name: string
                      account:
                        id: string
                        platform_username: string
                      work_platform:
                        id: string
                        name: string
                        logo_url: string
                      status: string
                      title: string
                      format: string
                      type: string
                      description: string
                      visibility: string
                      additional_info:
                        share_to_feed: false
                      media:
                        - media_type: string
                          source_media_url: null
                          source_thumbnail_url: string
                          thumbnail_offset: 0
                          additional_info: {}
                      published_info:
                        content_id: string
                        url: string
                        media_url: string
                        thumbnail_url: string
                        published_at: string
                        platform_content_id: string
                    platform_error:
                      type: string
                      error_code: string
                      message: string
      operationId: v1SocialContentPublish
      description: |-
        Publish content to a platform by providing the account ID.


        Check the [publishing content page](../../../API/publishing-content) for detailed info on how to use this API.


        Subscribe to the ["CONTENTS.PUBLISH_SUCCESS", "CONTENTS.PUBLISH_READY" and "CONTENTS.PUBLISH_FAILURE" webhooks](../../../API/webhook-events#publish) to receive a notification once the request is completed. With webhooks, you should use the [check status of content publish API](../reference/openapi.v1.yml/paths/~1v1~1social~1contents~1publish~1{id}/get) to check the detailed status of the publish request.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishContentRequest'
            examples:
              Example:
                value:
                  account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                  title: string
                  description: string
                  type: TWEET
                  visibility: PUBLIC
                  retry: false
                  additional_info:
                    share_to_feed: false
                  media:
                    - media_type: IMAGE
                      source_media_url: 'http://example.com'
                      source_thumbnail_url: 'http://example.com'
                      thumbnail_offset: 0
                      additional_info: {}
      tags:
        - Publish
    parameters: []
  '/v1/social/contents/publish/{id}':
    get:
      summary: Check status of content publish
      responses:
        '200':
          description: Returns status of the content publish request.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishContentResponse'
              examples:
                Example:
                  value:
                    data:
                      id: string
                      user:
                        id: string
                        name: string
                      account:
                        id: string
                        platform_username: string
                      work_platform:
                        id: string
                        name: string
                        logo_url: string
                      status: string
                      title: string
                      format: string
                      type: string
                      description: string
                      visibility: string
                      additional_info:
                        share_to_feed: false
                      media:
                        - media_type: string
                          source_media_url: null
                          source_thumbnail_url: string
                          thumbnail_offset: 0
                          additional_info: {}
                      published_info:
                        content_id: string
                        url: string
                        media_url: string
                        thumbnail_url: string
                        published_at: string
                        platform_content_id: string
                    platform_error:
                      type: string
                      error_code: string
                      message: string
      operationId: v1GetSocialContentPublish
      description: |-
        Check status of the content publish request by ID.


        This is best used in combination with webhooks - you can directly take the publish ID from ["CONTENTS.PUBLISH_SUCCESS", "CONTENTS.PUBLISH_READY" and "CONTENTS.PUBLISH_FAILURE" webhook](../../../API/webhook-events#publish) notifications and pass on to this API to get the updated status of publishing request.
      parameters: []
      tags:
        - Publish
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique ID of the publish request
  '/v1/webhooks/{id}':
    get:
      summary: Retrieve a webhook
      description: Retrieve the information of the Webhook with the supplied Webhook id.
      operationId: v1WebhookGetWebhooksById
      responses:
        '200':
          description: Returns the Webhook object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
              examples:
                Example:
                  value:
                    url: 'https://domainname.com/webhook'
                    id: 0994b847-cc69-4d98-bc99-c5e65e762add
                    created_at: '2020-03-27T12:56:34.534978'
                    updated_at: '2020-03-27T12:56:34.534978'
                    is_active: true
                    events:
                      - ACCOUNTS.CONNECTED
                    name: string
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      tags:
        - Webhook
    put:
      summary: Update a webhook
      operationId: v1WebhookPutWebhooksById
      responses:
        '200':
          description: Returns the updated Webhook object.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
              examples:
                Example:
                  value:
                    url: 'http://0.0.0.0:8000/webhook'
                    id: 2fe2d9d8-6aeb-407b-91a7-0a2d6acfdae2
                    created_at: '2022-03-29T17:11:04.527315'
                    updated_at: '2022-03-29T18:54:37.301102'
                    is_active: true
                    events:
                      - PROFILES.ADDED
                      - PROFILES.UPDATED
                    name: string
      description: Update a webhook information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
            examples:
              Example:
                value:
                  url: 'http://0.0.0.0:8000/webhook'
                  events:
                    - PROFILES.ADDED
                    - PROFILES.UPDATED
                  name: string
        description: Updated webhook object.
      tags:
        - Webhook
    parameters:
      - schema:
          type: string
          example: 0994b847-cc69-4d98-bc99-c5e65e762add
          format: uuid
        name: id
        in: path
        required: true
        description: Unique identifier for the webhook.
    delete:
      summary: Delete a webhook
      operationId: v1WebhookDeleteWebhooksById
      responses:
        '204':
          description: No Content
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      description: Delete a webhook information
      tags:
        - Webhook
  /v1/webhooks:
    get:
      summary: Retrieve all webhooks
      description: Lists all Webhooks.
      operationId: v1WebhookGetWebhooks
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponseList'
              examples:
                Example:
                  value:
                    data:
                      - url: 'https://domainname.com/webhook'
                        id: 0994b847-cc69-4d98-bc99-c5e65e762add
                        created_at: '2020-03-27T12:56:34.534978'
                        updated_at: '2020-03-27T12:56:34.534978'
                        is_active: true
                        events:
                          - ACCOUNTS.CONNECTED
                        name: string
                    metadata:
                      offset: 0
                      limit: 10
                      from_date: '2020-12-31'
                      to_date: '2021-12-31'
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      tags:
        - Webhook
    parameters: []
    post:
      summary: Create a webhook
      operationId: v1WebhookPostWebhooks
      responses:
        '201':
          description: Returns created webhook object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
              examples:
                Example:
                  value:
                    url: 'https://domainname.com/webhook'
                    id: 0994b847-cc69-4d98-bc99-c5e65e762add
                    created_at: '2020-03-27T12:56:34.534978'
                    updated_at: '2020-03-27T12:56:34.534978'
                    is_active: true
                    events:
                      - ACCOUNTS.CONNECTED
                    name: string
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
      description: Create a Webhook.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
            examples:
              Example:
                value:
                  url: 'http://0.0.0.0:8000/webhook'
                  events:
                    - PROFILES.ADDED
                    - PROFILES.UPDATED
                  name: string
      tags:
        - Webhook
  /v1/webhooks/send:
    post:
      summary: Send a mock webhook notification
      operationId: v1WebhookPostWebhooksSend
      responses:
        '200':
          description: Returns the Webhook object having event name for which notification is successfully sent.
          headers:
            request-id:
              $ref: '#/components/headers/request_id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookPayload'
              examples:
                Example:
                  value:
                    event: PROFILES.ADDED
                    id: 674c9030-640a-4c83-a680-666361044f67
                    name: profile added
                    data:
                      account_id: 4544993eac6f4c4a9ec27e23f6cb8c56
                      user_id: 6bd84fa308f84e66abf108fd3d29f9ef
                      profile_id: 74e5f67b9df04cbeba0894d749561447
                      last_updated_time: '2021-11-10T12:59:51.534978'
      description: Sends a webhook notification on the registered webhook URL.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWebhookPayload'
            examples:
              Example:
                value:
                  payload:
                    event: PROFILES.ADDED
                    id: 674c9030-640a-4c83-a680-666361044f67
                    name: profile added
                    data:
                      account_id: 4544993eac6f4c4a9ec27e23f6cb8c56
                      user_id: 6bd84fa308f84e66abf108fd3d29f9ef
                      profile_id: 74e5f67b9df04cbeba0894d749561447
                      last_updated_time: '2021-11-10T12:59:51.534978'
      tags:
        - Webhook
    parameters: []
  /v1/social/creators/contents/search:
    post:
      summary: Create a social listening request
      operationId: post-v1-social-creators-contents-search
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - work_platform
                  - status
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Social listening job ID
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  status:
                    type: string
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                    description: Status of the submitted request.
                  keyword:
                    type: string
                    description: Submitted keyword/phrase to search for content by.
                  'hashtag ':
                    type: string
                    description: Submitted hashtag to search for content by.
                  mention:
                    type: string
                    description: Submitted profile handle to search for content by.
                  items_limit:
                    type: integer
                    description: Maximum number of items to be fetched.
                  audio_track_info:
                    type: object
                    description: Submitted audio track to fetch TikTok content by.
                    required:
                      - title
                      - id
                    properties:
                      title:
                        type: string
                        description: TikTok title name
                      id:
                        type: string
                        description: TikTok song title id
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    work_platform:
                      id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    status: IN_PROGRESS
                    keyword: string
                    'hashtag ': string
                    mention: string
                    items_limit: 0
                    audio_track_info:
                      title: string
                      id: string
      description: 'Endpoint to submit a social listening request. `CONTENTS_SEARCH.SUCCESS` webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#social-listening) for more information.'
      tags:
        - Social Listening
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - work_platform_id
              properties:
                work_platform_id:
                  type: string
                  format: uuid
                  description: Work platform id
                keyword:
                  type: string
                  description: Keyword/phrase to search for content by. Developer can either pass hashtag or keyword. Developer can either pass a hashtag or a keyword or a mention.
                hashtag:
                  type: string
                  description: 'Hashtag to search for content by (without the # prefix ). Developer can either pass a hashtag or a keyword or a mention.'
                mention:
                  type: string
                  description: Name of the profile/handle to search for content by (without the @ prefix). Developer can either pass a hashtag or a keyword or a mention.
                items_limit:
                  type: integer
                  description: Maximum number of items to be fetched.
                audio_track_info:
                  type: object
                  description: 'Audio track to fetch content by. Only for TikTok, cannot be used in conjunction with hashtag/keyword.'
                  required:
                    - title
                    - id
                  properties:
                    title:
                      type: string
                      description: TikTok title name
                    id:
                      type: string
                      description: TikTok song title id
            examples:
              Example 1:
                value:
                  work_platform_id: 69dc0dd2-b78e-4013-b0d6-5693bb48b548
                  keyword: string
                  hashtag: string
                  mention: string
                  items_limit: 0
                  audio_track_info:
                    title: string
                    id: string
  '/v1/social/creators/contents/search/{id}':
    get:
      summary: Get status of the submitted social listening request
      tags:
        - Social Listening
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Social listening job ID
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  status:
                    type: string
                    description: Status of the submitted request.
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                  keyword:
                    type: string
                    description: Submitted keyword/phrase to search for content by.
                  hashtag:
                    type: string
                    description: Submitted hashtag to search for content by.
                  mention:
                    type: string
                    description: Submitted profile handle to search for content by.
                  from_date:
                    type: string
                    format: date
                    description: Submitted date range to fetch posts from.
                  to_date:
                    type: string
                    format: date
                    description: Submitted date range to fetch posts upto.
                  items_limit:
                    type: integer
                    description: Maximum number of items to be fetched.
                  audio_track_info:
                    type: object
                    description: Submitted audio track to fetch TikTok content by.
                    properties:
                      title:
                        type: string
                        description: TikTok song title.
                      id:
                        type: string
                        description: TikTok song id
                    required:
                      - title
                      - id
                required:
                  - id
                  - work_platform
                  - status
      operationId: get-statusv1-social-creators-contents-search
      description: |-
        Endpoint to know the status of the submitted social listening request by supplying the job ID.

        Usually used in conjunction with the "CONTENTS_SEARCH.*" webhooks, [read more](../../../API/webhook-events#social-listening).
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Social listening job ID
  '/v1/social/creators/contents/search/{id}_copy':
    get:
      summary: Get status of the submitted social listening request
      tags:
        - Social Listening
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Social listening job ID
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  status:
                    type: string
                    description: Status of the submitted request.
                    enum:
                      - IN_PROGRESS
                      - SUCCESS
                      - FAILURE
                  keyword:
                    type: string
                    description: Submitted keyword/phrase to search for content by.
                  hashtag:
                    type: string
                    description: Submitted hashtag to search for content by.
                  mention:
                    type: string
                    description: Submitted profile handle to search for content by.
                  from_date:
                    type: string
                    format: date
                    description: Submitted date range to fetch posts from.
                  to_date:
                    type: string
                    format: date
                    description: Submitted date range to fetch posts upto.
                  items_limit:
                    type: integer
                    description: Maximum number of items to be fetched.
                  audio_track_info:
                    type: object
                    description: Submitted audio track to fetch TikTok content by.
                    properties:
                      title:
                        type: string
                        description: TikTok song title.
                      id:
                        type: string
                        description: TikTok song id
                    required:
                      - title
                      - id
                required:
                  - id
                  - work_platform
                  - status
      operationId: get-statusv1-social-creators-contents-search
      description: |-
        Endpoint to know the status of the submitted social listening request by supplying the job ID.

        Usually used in conjunction with the "CONTENTS_SEARCH.*" webhooks, [read more](../../../API/webhook-events#social-listening).
      x-stoplight:
        id: 3d3lt8whop8gp
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Social listening job ID
  '/v1/social/creators/contents/search/{id}/fetch':
    get:
      summary: Get social listening insights
      tags:
        - Social Listening
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialListeningResponse'
      operationId: get-v1-social-creators-contents-search
      description: |-
        Endpoint to retrieve social listening insights with the supplied job ID.

        Usually used in conjunction with the "CONTENTS_SEARCH.*" webhooks, [read more](../../../API/webhook-events#social-listening).
      parameters:
        - schema:
            type: string
            format: date
          in: query
          name: from_date
          description: 'Date range to fetch posts from '
        - schema:
            type: string
            format: date
          in: query
          name: to_date
          description: Data range to fetch posts upto
        - schema:
            type: integer
            default: 10
          in: query
          name: limit
          description: The number of comments to be returned. It can be between 1 to 100. The default value is 10.
        - schema:
            type: integer
            default: 0
          in: query
          name: offset
          description: The number of comments to skip. Use this argument for pagination. The default value is 0.
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Social listening job ID
  /v1/professional/creators/dictionary/topics:
    get:
      summary: Get topic and subtopic tags for professional profiles
      tags:
        - Professional Creator Discovery
      responses:
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsResponse'
      operationId: get-v1-professional-creators-dictionary-topics
      x-stoplight:
        id: j8roq9xrtxpd0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
              properties:
                identifier:
                  type: string
                  x-stoplight:
                    id: 2n7zplaheycsq
                  description: 'Search term '
                  example: Mark
                limit:
                  type: integer
                  x-stoplight:
                    id: 7hieggvr3y892
                  default: 10
                  maximum: 100
                offset:
                  type: integer
                  x-stoplight:
                    id: g6tl3c9rxako0
      description: Dictionary of topic and subtopic tags for the public profiles search endpoint.
  /v1/social/creators/highfollower-audience:
    post:
      summary: Get the number of high-follower followers of a specific creator
      tags:
        - Creator Discovery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighfollowerAudienceCountResponse'
      operationId: post-v1-social-creators-highfollower-audience
      x-stoplight:
        id: ont1emupe4ejc
      description: |-
        Retrieves the number of high-follower followers of a specified social media creator based on multiple filtering parameters.
        <br>
        This API supports three work platforms; YouTube, TiKTok, and Instagram. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceDataRequest'
  '/v1/social/creators/highfollower-audience/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Fetching profile information of followers of a  creator who match the given criteria
      tags:
        - Creator Discovery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceDataResponse'
          headers:
            header-0:
              schema:
                type: string
      operationId: get-v1-social-creators-highfollower-audience-id
      x-stoplight:
        id: c1rkgsnekzmj9
      description: |-
        For API to return the number of followers as well as their profile data, value of `dry_run` has to be `false`. 
        <br>
        This API supports three work platforms; YouTube, TiKTok, and Instagram. 
  /v1/social/creators/async/contents/comments/fetch:
    post:
      summary: Create comments fetch request for a content item
      tags:
        - Public Content
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    id: generated-uuid
                    work_platform:
                      id: instagram-uuid
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    status: IN_PROGRESS
                    content_url: IG1234567890
                required:
                  - id
                  - work_platform
                properties:
                  id:
                    type: string
                    description: InsightIQ's unique job ID for the submitted request
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  status:
                    enum:
                      - SUCCESS
                      - IN PROGRESS
                      - FAILURE
                    description: Status of the submitted request
                  content_url:
                    type: string
                    description: URL of the content for which the comments will be fetched
              examples:
                Example 1:
                  value:
                    id: generated-uuid
                    work_platform:
                      id: instagram-uuid
                      name: Instagram
                      logo_url: 'https://insightiq.ai/storage/instagram.png'
                    status: IN_PROGRESS
                    content_url: IG1234567890
      operationId: post-v1-social-creators-async-contents-comments-fetch
      x-stoplight:
        id: sw4yb75c5fgdx
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  content_url: IG1234567890
                  work_platform_id: instagram-uuid
                  max_result: '300'
              required:
                - content_url
                - work_platform_id
              properties:
                content_url:
                  type: string
                  description: Content URL to fetch comments data
                work_platform_id:
                  type: string
                  description: Platform identifier for work platform on which you want to fetch comments.
                  format: uuid
                max_result:
                  type: integer
                  description: Maximum number of comments fetched
                  default: 100
                  maximum: 600
            examples:
              Example 1:
                value:
                  content_url: IG1234567890
                  work_platform_id: instagram-uuid
                  max_result: '300'
  '/v1/social/creators/async/contents/comments/fetch/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Fetch comments of a content item
      tags:
        - Public Content
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncCommentsFetchResponse'
      operationId: get-v1-social-creators-async-contents-comments-fetch-id
      x-stoplight:
        id: hf06hrncaf3gl
      parameters:
        - schema:
            type: integer
          in: query
          name: 'limit  '
          description: Number of items per page
        - schema:
            type: integer
          in: query
          name: offset
          description: Pagination offset
  /v1/professional/companies/contents/fetch:
    post:
      summary: Create content fetch request for company profile on LinkedIn
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    id: xx
                    work_platform:
                      id: 36410629-f907-43ba-aa0d-434ca9c0501a
                      name: LinkedIn
                      logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_linkedin.png'
                    profile_url: 'https://www.linkedin.com/company/the-ken/'
                required:
                  - id
                  - work_platform
                  - status
                properties:
                  id:
                    type: string
                    description: InsightIQ's unique job ID for the submitted request
                    format: uuid
                  profile_url:
                    type: string
                    description: Profile url for which the posts data will be fetched
                  content_url:
                    type: string
                    x-stoplight:
                      id: l9y2mx6wxvwoa
                    description: URL of the content
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  status:
                    $ref: '#/components/schemas/RequestJobStatus'
      operationId: post-v1-professional-companies
      x-stoplight:
        id: tpj5sra70aabn
      parameters: []
      description: 'Endpoint to submit a request to fetch LinkedIn content data for a company profile. CONTENTS_FETCH.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the [webhook events guide](../../../API/webhook-events#public-content) for more information.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  profile_url: 'https://www.linkedin.com/company/the-ken/'
                  work_platform_id: 36410629-f907-43ba-aa0d-434ca9c0501a
              required:
                - work_platform_id
              properties:
                profile_url:
                  type: string
                  format: uri
                  description: URL of the profile you want to get content data for
                content_url:
                  type: string
                  x-stoplight:
                    id: 4b276tdgqjlq6
                  format: uri
                  description: URL of the content you want to get data for
                work_platform_id:
                  type: string
                  description: Work platform ID for the platform of the above profile url
                  format: uuid
                from_date:
                  type: string
                  x-stoplight:
                    id: aod25vfl5bv8g
                  format: date
                to_date:
                  type: string
                  x-stoplight:
                    id: 28odtsk9oup9w
                  format: date
      tags:
        - Public Content
    parameters: []
  '/v1/professional/companies/contents/fetch/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: InsightIQ's unique job ID
    get:
      summary: Retrieve content data for company profile on LinkedIn
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyProfileContentResponse'
      operationId: get-v1-professional-companies-contents-fetch-id
      x-stoplight:
        id: 5dxsgn082khq8
      parameters:
        - schema:
            type: integer
            maximum: 100
            minimum: 1
            default: 10
          in: query
          name: limit
          description: The number of search results to be returned.
        - schema:
            type: integer
            default: 0
          in: query
          name: offset
          description: The number of search results to skip. Use this argument for pagination.
      description: |-
        Get the content data for a company profile or single content item with the supplied job ID.

        Usually used in conjunction with the "CONTENTS_FETCH.*" webhooks, [read more](../../../API/webhook-events#public-content).
components:
  schemas:
    WorkPlatform:
      type: object
      title: WorkPlatform
      description: 'Work Platform refers to the Creator''s platform e.g. Instagram, YouTube, Patreon, etc.'
      properties:
        id:
          type: string
          description: Unique identifier for the work platform.
          example: 179a0bb4-c572-4477-9457-7dacf1b84848
          format: uuid
        name:
          type: string
          description: Name of the work platform
          example: Instagram
        logo_url:
          type: string
          description: Image URL for the work platform logo.
          example: 'https://insightiq.ai/storage/instagram.png'
          format: uri
        created_at:
          type: string
          description: Object creation timestamp (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Object updation timestamp (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        category:
          type: string
          description: Category of the work platform.
          example: MEDIA
          enum:
            - MEDIA
            - EDUCATION
            - SOCIAL
            - ENTERTAINMENT
            - LIFESTYLE
            - BUSINESS
        status:
          type: string
          description: Current status of the work platform.
          example: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
        url:
          type: string
          description: URL of the work platform.
          example: 'https://www.instagram.com'
          format: uri
        products:
          type: object
          required:
            - identity
            - engagement
            - income
            - switch
            - activity
            - publish
          properties:
            identity:
              type: object
              required:
                - is_supported
                - audience
              properties:
                is_supported:
                  type: boolean
                  description: will be **true** if   Identity APIs are available for the work platform.
                audience:
                  type: object
                  required:
                    - is_supported
                  properties:
                    is_supported:
                      type: boolean
                      description: will be **true** if   Audience Demmographics APIs are available for the work platform.
            engagement:
              type: object
              required:
                - is_supported
                - audience
              properties:
                is_supported:
                  type: boolean
                  description: will be **true** if   Engagement APIs are available for the work platform.
                audience:
                  type: object
                  required:
                    - is_supported
                  properties:
                    is_supported:
                      type: boolean
                      description: will be **true** if   Comment APIs are available for the work platform.
            income:
              type: object
              required:
                - is_supported
              properties:
                is_supported:
                  type: boolean
                  description: will be **true** if   Income APIs are available for the work platform.
            switch:
              type: object
              required:
                - is_supported
              properties:
                is_supported:
                  type: boolean
                  description: will be **true** if   Deposit Switch APIs are available for the work platform.
            activity:
              type: object
              required:
                - is_supported
              properties:
                is_supported:
                  type: boolean
                  description: will be **true** if   Activity APIs are available for the work platform.
            publish:
              type: object
              required:
                - is_supported
              properties:
                is_supported:
                  type: boolean
                  description: will be **true** if   Publish APIs are available for the work platform.
      required:
        - id
        - name
        - logo_url
        - created_at
        - updated_at
        - category
        - status
        - url
        - products
      x-examples:
        Example 1:
          id: 179a0bb4-c572-4477-9457-7dacf1b84848
          name: Instagram
          logo_url: 'https://insightiq.ai/storage/instagram.png'
          created_at: '2020-03-27T12:56:34.534978'
          updated_at: '2020-03-27T12:56:34.534978'
          category: MEDIA
          status: ACTIVE
          url: 'https://www.instagram.com'
          products:
            identity:
              is_supported: true
              audience:
                is_supported: true
            engagement:
              is_supported: true
              audience:
                is_supported: true
            income:
              is_supported: true
            switch:
              is_supported: true
            activity:
              is_supported: true
            publish:
              is_supported: true
    UserResponse:
      type: object
      description: User objects represent distinct users that have connected their work platform via   Connect.
      title: User
      properties:
        name:
          type: string
          description: Name of the user.
          example: John Doe
        external_id:
          type: string
          description: External ID of the user as supplied by you.
          example: 179a0bb4-c572-4477-9457-7dacf1b84848
        id:
          type: string
          description: Unique ID of the user.
          example: 0994b847-cc69-4d98-bc99-c5e65e762add
          format: uuid
        created_at:
          type: string
          description: User creation timestamp (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:34:56.534978'
          format: date-time
        updated_at:
          type: string
          description: User updation timestamp (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        status:
          type: string
          description: User status on  .
          example: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
      required:
        - name
        - external_id
        - id
        - created_at
        - updated_at
        - status
    WebhookResponse:
      type: object
      description: 'Webhook object represents an endpoint, on which webhook notifications will be delivered.'
      title: WebhookResponse
      properties:
        url:
          type: string
          description: URL to which webhook notifications will be delivered.
          example: 'https://domainname.com/webhook'
          format: uri
        id:
          type: string
          description: Unique ID of the webhook.
          example: 0994b847-cc69-4d98-bc99-c5e65e762add
          format: uuid
        created_at:
          type: string
          description: 'UTC date and time of the object, when it was created, in ISO 8601 format.'
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: 'UTC date and time of the object, when it was updated recently, in ISO 8601 format.'
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        is_active:
          type: boolean
          default: true
          description: |-
            **true** if webhook is active else **false**. 

            Note:
            If it fails to deliver the webhook in 3 attempts then it sets is_active to **false** and will not deliver notifications until you fix it and update the status by invoking the PUT /v1/webhooks/{webhook_id} API.
        events:
          type: array
          description: Event type for which the webhook notification is delivered
          items:
            type: string
            example: ACCOUNTS.CONNECTED
            enum:
              - ACCOUNTS.CONNECTED
              - ACCOUNTS.DISCONNECTED
              - PROFILES.ADDED
              - PROFILES.UPDATED
              - PROFILES_AUDIENCE.ADDED
              - PROFILES_AUDIENCE.UPDATED
              - CONTENTS.ADDED
              - CONTENTS.UPDATED
              - CONTENTS_COMMENTS.ADDED
              - CONTENTS_COMMENTS.UPDATED
              - CONTENT-GROUPS.ADDED
              - CONTENT-GROUPS.UPDATED
              - TRANSACTIONS.ADDED
              - TRANSACTIONS.UPDATED
              - PAYOUTS.ADDED
              - PAYOUTS.UPDATED
              - BALANCES.ADDED
              - BALANCES.UPDATED
              - CONTENTS.PUBLISH_SUCCESS
              - CONTENTS.PUBLISH_READY
              - CONTENTS.PUBLISH_FAILURE
              - SESSION.EXPIRED
              - ACTIVITY-ARTISTS.ADDED
              - ACTIVITY-ARTISTS.UPDATED
              - ACTIVITY-CONTENTS.ADDED
              - ACTIVITY-CONTENTS.UPDATED
        name:
          type: string
          maxLength: 100
          minLength: 1
          description: Reference name for the webhook
      required:
        - url
        - id
        - created_at
        - updated_at
        - is_active
        - events
        - name
    CreateWebhookRequest:
      type: object
      description: 'Webhook object represents an endpoint, on which webhook notifications will be delivered.'
      title: CreateWebhookRequest
      properties:
        url:
          type: string
          description: URL to which the webhook notification will be delivered.
          example: 'https://domainname.com/webhook'
          format: uri
        events:
          type: array
          description: Event type for which webhook will send the notification.
          items:
            type: string
            example: ACCOUNTS.CONNECTED
            enum:
              - ACCOUNTS.CONNECTED
              - ACCOUNTS.DISCONNECTED
              - PROFILES.ADDED
              - PROFILES.UPDATED
              - PROFILES_AUDIENCE.ADDED
              - PROFILES_AUDIENCE.UPDATED
              - CONTENTS.ADDED
              - CONTENTS.UPDATED
              - CONTENTS_COMMENTS.ADDED
              - CONTENTS_COMMENTS.UPDATED
              - CONTENT-GROUPS.ADDED
              - CONTENT-GROUPS.UPDATED
              - TRANSACTIONS.ADDED
              - TRANSACTIONS.UPDATED
              - PAYOUTS.ADDED
              - PAYOUTS.UPDATED
              - BALANCES.ADDED
              - BALANCES.UPDATED
              - CONTENTS.PUBLISH_SUCCESS
              - CONTENTS.PUBLISH_READY
              - CONTENTS.PUBLISH_FAILURE
              - SESSION.EXPIRED
              - ACTIVITY-ARTISTS.ADDED
              - ACTIVITY-ARTISTS.UPDATED
              - ACTIVITY-CONTENTS.ADDED
              - ACTIVITY-CONTENTS.UPDATED
        name:
          type: string
          maxLength: 100
          minLength: 1
          description: Reference name for the webhook
      required:
        - url
        - events
        - name
    UpdateWebhookRequest:
      type: object
      description: 'Webhook object represents an endpoint, on which webhook notifications will be delivered.'
      title: UpdateWebhookRequest
      properties:
        url:
          type: string
          description: URL to which the webhook notification will be delivered.
          example: 'https://domainname.com/webhook'
          format: uri
        events:
          type: array
          description: Event type for which webhook will send the notification.
          items:
            type: string
            example: ACCOUNTS.CONNECTED
            enum:
              - ACCOUNTS.CONNECTED
              - ACCOUNTS.DISCONNECTED
              - PROFILES.ADDED
              - PROFILES.UPDATED
              - PROFILES_AUDIENCE.ADDED
              - PROFILES_AUDIENCE.UPDATED
              - CONTENTS.ADDED
              - CONTENTS.UPDATED
              - CONTENTS_COMMENTS.ADDED
              - CONTENTS_COMMENTS.UPDATED
              - CONTENT-GROUPS.ADDED
              - CONTENT-GROUPS.UPDATED
              - TRANSACTIONS.ADDED
              - TRANSACTIONS.UPDATED
              - PAYOUTS.ADDED
              - PAYOUTS.UPDATED
              - BALANCES.ADDED
              - BALANCES.UPDATED
              - CONTENTS.PUBLISH_SUCCESS
              - CONTENTS.PUBLISH_READY
              - CONTENTS.PUBLISH_FAILURE
              - SESSION.EXPIRED
              - ACTIVITY-ARTISTS.ADDED
              - ACTIVITY-ARTISTS.UPDATED
              - ACTIVITY-CONTENTS.ADDED
              - ACTIVITY-CONTENTS.UPDATED
        is_active:
          type: boolean
          default: true
          description: |-
            **true** if webhook should be set to active else **false**. 

            Note:
            If   fails to deliver the webhook in 3 attempts then it sets is_active to **false** and will not deliver notifications until you fix it and update the status by invoking the PUT /v1/webhooks/{webhook_id} API.
        name:
          type: string
          maxLength: 100
          minLength: 1
          description: Reference name for the webhook
      required:
        - url
        - events
        - name
    WebhookPayload:
      type: object
      description: Webhook object to send notification on the registered webhook URL.
      title: WebhookPayload
      properties:
        event:
          type: string
          enum:
            - ACCOUNTS.CONNECTED
            - ACCOUNTS.DISCONNECTED
            - PROFILES.ADDED
            - PROFILES.UPDATED
            - PROFILES_AUDIENCE.ADDED
            - PROFILES_AUDIENCE.UPDATED
            - CONTENTS.ADDED
            - CONTENTS.UPDATED
            - CONTENTS_COMMENTS.ADDED
            - CONTENTS_COMMENTS.UPDATED
            - CONTENT-GROUPS.ADDED
            - CONTENT-GROUPS.UPDATED
            - TRANSACTIONS.ADDED
            - TRANSACTIONS.UPDATED
            - PAYOUTS.ADDED
            - PAYOUTS.UPDATED
            - BALANCES.ADDED
            - BALANCES.UPDATED
            - CONTENTS.PUBLISH_SUCCESS
            - CONTENTS.PUBLISH_READY
            - CONTENTS.PUBLISH_FAILURE
            - SESSION.EXPIRED
            - ACTIVITY-ARTISTS.ADDED
            - ACTIVITY-ARTISTS.UPDATED
            - ACTIVITY-CONTENTS.ADDED
            - ACTIVITY-CONTENTS.UPDATED
          description: Name of the event for which webhook is being triggered
        name:
          type: string
          description: Description of the event
        data:
          type: object
          description: 'Corresponding data payload, [read about the events and corresponding payloads here](../../../API/webhook-events)'
      required:
        - event
        - data
    SendWebhookPayload:
      type: object
      description: Webhook object to send notification on the registered webhook URL.
      title: SendWebhookPayload
      properties:
        payload:
          $ref: '#/components/schemas/WebhookPayload'
      required:
        - payload
    UserRequest:
      title: UserRequest
      type: object
      description: Payload of the User going to create.
      properties:
        name:
          type: string
          description: Name of the user.
          example: John Doe
        external_id:
          type: string
          description: |
            Unique ID for the user supplied by you. Avoid passing PII such as the user's email or phone number as the external ID.
          example: 179a0bb4-c572-4477-9457-7dacf1b84848
          maxLength: 100
      required:
        - name
        - external_id
    SDKTokenRequest:
      title: SDKTokenRequest
      type: object
      description: Payload of the SDK Token going to create.
      properties:
        user_id:
          type: string
          description: Unique ID of the user.
          example: cfcc6603-1d8f-47d9-926a-4b91cc143105
        products:
          type: array
          description: Requested   products.
          items:
            type: string
            example: IDENTITY
            enum:
              - IDENTITY
              - IDENTITY.AUDIENCE
              - ENGAGEMENT
              - ENGAGEMENT.AUDIENCE
              - INCOME
              - PUBLISH.CONTENT
              - ACTIVITY
      required:
        - user_id
        - products
    SDKTokenResponse:
      title: SDKTokenResponse
      type: object
      description: This object represent the SDK Token response body.
      properties:
        sdk_token:
          type: string
          description: Token which is used to initialise the connect SDK.
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTU0NmI0ZmUtY2VmNy00OGM0LWFiOWYtOTYwZGQwMDgwNzI4IiwidGVuYW50X2lkIjoiMjg1Yjc1Y2EtMjE5MS00ZWEyLWJkMzQtNDdjZGI4NDEzNmVkIiwidGVuYW50X2FwcF9pZCI6IjljOGY0ZTUyLWE4MmQtNGQ0Ny05MmQzLTdmNGQ4MGM4NWZkNiIsInByb2R1Y3RzIjpbIklOQ09NRSIsIkVOR0FHRU1FTlQiLCJFTkdBR0VNRU5UX0FVRElFTkNFIiwiSURFTlRJVFkiXSwiaXNzIjoiaHR0cHM6Ly9hcGkuc2FuZGJveC5nZXRwaHlsbG8uY29tIiwiYXVkIjoiaHR0cHM6Ly9hcGkuc2FuZGJveC5nZXRwaHlsbG8uY29tL3YxL2ludGVybmFsIiwiaWF0IjoxNjQ4NTc1NDQ3LjUyNTAxMywiZXhwIjoxNjQ5MTgwMjQ3LjUyNTAwMn0.0fvAvCTpD1mKukAPq5r2nktLaQuxYWK7vVz2-xNkawc
        expires_at:
          type: string
          description: Token expiry time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
      required:
        - sdk_token
        - expires_at
    CreateLinkRequest:
      title: CreateLinkRequest
      type: object
      properties:
        name:
          type: string
          description: Name of the creator
        external_id:
          type: string
          description: A unique ID sent by the developer to identify a creator (this should be unique in the developer's system)
      required:
        - external_id
    CreateLinkResponse:
      title: CreateLinkResponse
      type: object
      required:
        - created_at
        - microsite_url
        - invite_id
        - external_id
      properties:
        created_at:
          type: string
          description: Object creation timestamp (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        microsite_url:
          type: string
          description: Unique link which has the Connect SDK embedded in it for an optimized account connection flow.
          format: uri
        invite_id:
          type: string
          format: uuid
          description: Unique invite ID generated by InsightIQ
        external_id:
          type: string
          description: The unique ID sent by the developer to identify the creator
    Account:
      title: Account
      type: object
      description: Represents work platform accounts that your users link via  . Once a user connects a work platform account from the Connect SDK then an account object is created for the user.
      properties:
        id:
          type: string
          description: Unique ID of the connected account.
          example: 12ccaf87-66c2-4b8e-9bf0-d0e8705334d1
          format: uuid
        created_at:
          type: string
          description: Account creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Account updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        platform_username:
          type: string
          description: |-
            Username of the connected account. This is used to uniquely identify a user on any platform and usually the name that is present in the URLs, used to tag a user etc.

            Ex - For YouTube, it's the channel name in the URL and for Instagram / Twitter / TikTok etc, it's the handle.
          example: john.boyer@gmail.com
          nullable: true
        profile_pic_url:
          type: string
          description: URL of the user's profile image from the work platform.
          format: uri
          example: 'https://platform_domain_name/profile_pic_image.png'
          nullable: true
        status:
          type: string
          description: Account connection status.
          enum:
            - CONNECTED
            - NOT_CONNECTED
            - SESSION_EXPIRED
          example: CONNECTED
        platform_profile_name:
          type: string
          description: |-
            User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

            Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
          example: CBSE WINNERS
        platform_profile_id:
          type: string
          description: |-
            Unique profile ID of the user on the work platform. 

            Ex - For YouTube it's the channel ID and for Instagram it's the Instagram page ID.
          example: UCEyLTzBtHJhlUwkeWhxfMXw
        platform_profile_published_at:
          type: string
          format: date-time
          example: '2020-03-27T12:56:34.534978'
          description: Timestamp when the profile was created on the platform.
          nullable: true
        data:
          type: object
          description: |
            Represents the information category which is available for the connected account.
          properties:
            identity:
              type: object
              description: For accounts that have requested the identity product.
              properties:
                status:
                  type: string
                  description: Status of the data retrieval between   and the work platform.
                  example: SYNCED
                  enum:
                    - SYNCED
                    - IN_PROGRESS
                    - NOT_SUPPORTED
                    - NOT_SYNCED
                    - PARTIAL_SYNCED
                last_sync_at:
                  type: string
                  description: Last sync time for the profile object (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                monitoring_type:
                  type: string
                  enum:
                    - STANDARD
                    - ON_DEMAND
                  example: STANDARD
                  description: Monitoring plan for the identity product.
                audience:
                  type: object
                  description: For accounts that have requested the identity.audience product.
                  properties:
                    status:
                      type: string
                      description: Status of the data retrieval between   and the work platform.
                      example: IN_PROGRESS
                      enum:
                        - SYNCED
                        - IN_PROGRESS
                        - NOT_SUPPORTED
                        - NOT_SYNCED
                        - PARTIAL_SYNCED
                    last_sync_at:
                      type: string
                      description: Last sync time for the engagement object (UTC date and time in ISO 8601 format)
                      example: '2020-03-27T12:56:34.534978'
                      format: date-time
                    monitoring_type:
                      type: string
                      example: STANDARD
                      enum:
                        - STANDARD
                        - ON_DEMAND
                      description: Monitoring plan for the identity.audience product.
                  required:
                    - status
                    - monitoring_type
              required:
                - status
                - monitoring_type
            engagement:
              type: object
              description: For accounts that have requested the engagement product.
              properties:
                status:
                  type: string
                  description: Status of the data retrieval between   and the work platform.
                  example: IN_PROGRESS
                  enum:
                    - SYNCED
                    - IN_PROGRESS
                    - NOT_SUPPORTED
                    - NOT_SYNCED
                    - PARTIAL_SYNCED
                last_sync_at:
                  type: string
                  description: Last sync time for the engagement object (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                refresh_since:
                  type: string
                  description: Time period for which engagement object is refreshed (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                  nullable: true
                data_available_from:
                  type: string
                  description: Start period from which engagement data is available (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                  nullable: true
                monitoring_type:
                  type: string
                  enum:
                    - STANDARD
                    - ON_DEMAND
                  example: STANDARD
                  description: Monitoring plan for the engagement product.
                audience:
                  type: object
                  description: For accounts that have requested the engagement.audience product.
                  properties:
                    status:
                      type: string
                      description: Status of the data retrieval between   and the work platform.
                      example: IN_PROGRESS
                      enum:
                        - SYNCED
                        - IN_PROGRESS
                        - NOT_SUPPORTED
                        - NOT_SYNCED
                        - PARTIAL_SYNCED
                    last_sync_at:
                      type: string
                      description: Last sync time for the engagement object (UTC date and time in ISO 8601 format)
                      example: '2020-03-27T12:56:34.534978'
                      format: date-time
                    refresh_since:
                      type: string
                      description: Time period for which engagement object is refreshed (UTC date and time in ISO 8601 format)
                      example: '2020-03-27T12:56:34.534978'
                      format: date-time
                      nullable: true
                    data_available_from:
                      type: string
                      description: Start period from which engagement data is available (UTC date and time in ISO 8601 format)
                      example: '2020-03-27T12:56:34.534978'
                      format: date-time
                      nullable: true
                    monitoring_type:
                      type: string
                      enum:
                        - STANDARD
                        - ON_DEMAND
                      example: STANDARD
                      description: Monitoring plan for the engagement.audience product.
                  required:
                    - status
                    - monitoring_type
              required:
                - status
                - monitoring_type
            income:
              type: object
              description: For accounts that have requested the income product.
              properties:
                status:
                  type: string
                  description: Status of the data retrieval between   and the work platform.
                  example: IN_PROGRESS
                  enum:
                    - SYNCED
                    - IN_PROGRESS
                    - NOT_SUPPORTED
                    - NOT_SYNCED
                    - PARTIAL_SYNCED
                last_sync_at:
                  type: string
                  description: Last sync time for the income object (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                refresh_since:
                  type: string
                  description: Time period for which income object is refreshed (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                  nullable: true
                data_available_from:
                  type: string
                  description: Start period from which income data is available (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                  nullable: true
                monitoring_type:
                  type: string
                  enum:
                    - STANDARD
                    - ON_DEMAND
                  example: STANDARD
                  description: Monitoring plan for the income product.
              required:
                - status
                - monitoring_type
            activity:
              type: object
              description: For accounts that have requested the activity product.
              properties:
                status:
                  type: string
                  description: Status of the data retrieval between   and the work platform.
                  example: IN_PROGRESS
                  enum:
                    - SYNCED
                    - IN_PROGRESS
                    - NOT_SUPPORTED
                    - NOT_SYNCED
                    - PARTIAL_SYNCED
                last_sync_at:
                  type: string
                  description: Last sync time for the activity object (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                refresh_since:
                  type: string
                  description: Time period for which activity object is refreshed (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                  nullable: true
                data_available_from:
                  type: string
                  description: Start period from which activity data is available (UTC date and time in ISO 8601 format)
                  example: '2020-03-27T12:56:34.534978'
                  format: date-time
                  nullable: true
                monitoring_type:
                  type: string
                  enum:
                    - STANDARD
                    - ON_DEMAND
                  example: STANDARD
                  description: Monitoring plan for the activity product.
              required:
                - status
                - monitoring_type
            publish:
              type: object
              description: For accounts that have requested the publish product.
              properties:
                status:
                  type: string
                  description: Status of the publish connection between   and the work platform.
                  example: IN_PROGRESS
                  enum:
                    - SYNCED
                    - IN_PROGRESS
                    - NOT_SUPPORTED
                    - NOT_SYNCED
                    - PARTIAL_SYNCED
              required:
                - status
      required:
        - id
        - created_at
        - updated_at
        - user
        - work_platform
        - platform_username
        - status
        - platform_profile_name
        - platform_profile_id
        - data
    DisconnectAccountResponse:
      title: DisconnectAccountResponse
      type: object
      description: Represents work platform accounts that your users link via  . Once a user connects a work platform account from the Connect SDK then an account object is created for the user.
      properties:
        id:
          type: string
          description: Unique ID of the connected account.
          example: 12ccaf87-66c2-4b8e-9bf0-d0e8705334d1
          format: uuid
        created_at:
          type: string
          description: Account creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Account updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        status:
          type: string
          description: Account connection status.
          enum:
            - CONNECTED
            - NOT_CONNECTED
            - SESSION_EXPIRED
          example: CONNECTED
      required:
        - id
        - created_at
        - updated_at
        - user
        - work_platform
        - status
    Profile:
      title: Profile
      type: object
      description: Represents the user profile object. The profile object contains information related to the identity of the user. The data in a profile is tied to a particular work platform account that the user has connected to via  .
      properties:
        id:
          type: string
          description: Unique ID of the profile.
          example: 12ccaf87-66c2-4b8e-9bf0-d0e8705334d1
          format: uuid
        created_at:
          type: string
          example: '2020-03-27T12:56:34.534978'
          description: Profile creation time (UTC date and time in ISO 8601 format)
          format: date-time
        updated_at:
          type: string
          example: '2020-03-27T12:56:34.534978'
          description: Profile updation time (UTC date and time in ISO 8601 format)
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        platform_username:
          type: string
          description: |-
            Username of the connected account. This is used to uniquely identify a user on any platform and usually the name that is present in the URLs, used to tag a user etc.

            Ex - For YouTube, it's the channel name in the URL and for Instagram / Twitter / TikTok etc, it's the handle.
          example: johndoe
          nullable: true
        full_name:
          type: string
          description: Full name of the user profile.
          example: John Doe
          nullable: true
        first_name:
          type: string
          description: First name of the user profile.
          example: John
          nullable: true
        last_name:
          type: string
          description: Last name of the user profile.
          example: Doe
          nullable: true
        nick_name:
          type: string
          description: Nickname of the user profile.
          example: John
          nullable: true
        url:
          type: string
          description: Profile URL on the connected platform.
          example: 'https://instagram.com/12ccaf87'
          format: uri
        introduction:
          type: string
          description: |-
            Description of the profile. 

            Ex - For Instagram it's the bio and for YouTube it's the channel introduction.
          example: Cloud architect with enterprise expertise.
          nullable: true
        image_url:
          type: string
          description: URL of the profile image on the platform.
          example: 'https://instagram.com/profiles/12ccaf87.png'
          format: uri
        date_of_birth:
          type: string
          description: Date of birth of the user on the platform.
          example: 11/26/1989
        external_id:
          type: string
          example: 12ccaf87
          description: Unique identifier for the profile on the platform.
        platform_account_type:
          type: string
          description: Account type of the user on the platform.
          example: CREATOR
          nullable: true
        category:
          type: string
          description: |-
            Category of the user's platform account.

            Ex - For Instagram it's the page type which could be beauty, fitness etc
          example: Blog
          nullable: true
        website:
          type: string
          description: User website listed on the platform.
          example: 'https://www.johndoe.com'
          format: uri
          nullable: true
        reputation:
          type: object
          description: Profile reputation object.
          properties:
            follower_count:
              type: integer
              description: Total number of followers of this profile.
              example: 3456778
            following_count:
              type: integer
              description: Total number of profiles this profile is following.
              example: 5678
            subscriber_count:
              type: integer
              description: Total number of subscribers.
              example: 987654
              nullable: true
            paid_subscriber_count:
              type: integer
              description: Total number of paid/premium subscribers.
              nullable: true
            content_count:
              type: integer
              description: 'Total number of content items (videos, images, posts etc).'
              example: 987654
              nullable: true
            content_group_count:
              type: integer
              description: 'Total number of content group items (playlists, albums, collections etc).'
              example: 987654
              nullable: true
            watch_time_in_hours:
              type: integer
              description: Total watch time in hours (available for YouTube).
              example: 55
              nullable: true
            average_open_rate:
              type: number
              description: The historical average open rate of the publication as percentage.
              nullable: true
            average_click_rate:
              type: number
              description: The historical average clickthrough rate of the publication as percentage.
              nullable: true
        emails:
          type: array
          description: Emails object.
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the email ID.
                example: WORK
                enum:
                  - WORK
                  - OTHER
                  - HOME
              email_id:
                type: string
                description: Email ID of the user.
                example: john.doe@upwork.com
                format: email
            required:
              - type
              - email_id
        phone_numbers:
          type: array
          description: Phone numbers object.
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the phone number.
                enum:
                  - WORK
                  - OTHER
                  - HOME
                example: WORK
              phone_number:
                type: string
                description: Phone number of the user.
                example: '+19876543210'
            required:
              - type
              - phone_number
        addresses:
          type: array
          description: Addresses object.
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the address.
                example: HOME
                enum:
                  - HOME
                  - WORK
                  - OTHER
              address:
                type: string
                description: Address of the user.
                example: '520 North Avenue, CA, USA'
            required:
              - type
              - address
        gender:
          type: string
          description: Gender of the user.
          example: MALE
          enum:
            - MALE
            - FEMALE
            - OTHER
            - UNSPECIFIED
          nullable: true
        country:
          type: string
          description: Country of the user on the connected platform.
          example: US
        platform_profile_name:
          type: string
          description: |-
            User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

            Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
          example: CBSE WINNERS
          nullable: true
        platform_profile_id:
          type: string
          description: |-
            Unique profile ID of the user on the work platform. 

            Ex - For YouTube it's the channel ID and for Instagram it's the Instagram page ID.
          example: UCEyLTzBtHJhlUwkeWhxfMXw
          nullable: true
        platform_profile_published_at:
          type: string
          format: date-time
          example: '2020-03-27T12:56:34.534978'
          description: Timestamp when the profile was created on the platform.
          nullable: true
        is_verified:
          type: boolean
          description: '**true** if the user''s profile is verified by the platform.'
          example: true
          format: binary
        is_business:
          type: boolean
          description: '**true** if the user''s profile is business account on the platform.'
          example: true
          format: binary
        work_experiences:
          type: array
          items:
            $ref: '#/components/schemas/WorkExperiences'
        education:
          type: array
          items:
            $ref: '#/components/schemas/Education'
        publications:
          type: array
          items:
            $ref: '#/components/schemas/Publications'
        certifications:
          type: array
          items:
            $ref: '#/components/schemas/Certifications'
        volunteer_experiences:
          type: array
          items:
            $ref: '#/components/schemas/VolunteerExperiences'
        honors:
          type: array
          items:
            $ref: '#/components/schemas/Honors'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Projects'
      required:
        - id
        - created_at
        - updated_at
        - user
        - account
        - work_platform
        - platform_username
        - gender
    ContentList:
      title: ContentList
      type: object
      description: ''
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Content'
        metadata:
          $ref: '#/components/schemas/Metadata'
    Content:
      type: object
      description: 'Represents the Content object. It contains data of media (images, videos, audio) present in a connected account.'
      title: Content
      required:
        - id
        - created_at
        - updated_at
        - external_id
        - title
        - type
        - url
        - duration
        - published_at
        - platform_profile_id
        - platform_profile_name
      properties:
        id:
          type: string
          description: Unique ID of the content item.
          example: cfcc6603-1d8f-47d9-926a-4b91cc143105
          format: uuid
        created_at:
          type: string
          description: Object creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Object updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        engagement:
          type: object
          properties:
            like_count:
              type: integer
              description: Total likes.
              example: 42134
            dislike_count:
              type: integer
              description: Total dislikes.
              example: 342
            comment_count:
              type: integer
              description: Total comments.
              example: 4234
            impression_organic_count:
              type: integer
              description: Total organic impressions.
              example: 4234
            reach_organic_count:
              type: integer
              description: Total organic reach.
              example: 34
            save_count:
              type: integer
              description: Total item saves.
              example: 43
            view_count:
              type: integer
              description: 'Total views excluding replays. '
              example: 42343
            watch_time_in_hours:
              type: number
              description: If format is `video` - total watch time in hours.
              example: 1.5
            share_count:
              type: integer
              description: Total shares.
              example: 42343
              nullable: true
            impression_paid_count:
              type: integer
              description: Total paid impressions.
              example: 4234
              nullable: true
            reach_paid_count:
              type: integer
              description: Total paid reach.
              example: 34
              nullable: true
            email_open_rate:
              type: number
              description: Percentage of emails that have been opened
            email_click_rate:
              type: number
              description: Percentage of emails that have been clicked
            unsubscribe_count:
              type: integer
              description: Number of unsubscribes on the email
            spam_report_count:
              type: integer
              description: Number of email subscribers that report this post as spam
            click_count:
              type: integer
              description: Total web click count on the content item
            additional_info:
              type: object
              description: 'Currently only supported for Instagram. Check out this [Airtable](https://airtable.com/shrySBANO9LhVT7bG) for the supported attributes across the different Instagram content types.'
              nullable: true
              properties:
                followers_gained:
                  type: integer
                  description: Number of new followers gained from a content item.
                  example: 14
                  nullable: true
                profile_visits:
                  type: integer
                  description: Number of profile visits from a content item.
                  example: 123
                  nullable: true
                bio_link_clicked:
                  type: integer
                  description: Number of bio link clicks generated from a content item.
                  example: 9
                  nullable: true
                story_navigation:
                  type: object
                  description: Instagram story navigation metrics.
                  nullable: true
                  properties:
                    automatic_forwards:
                      type: integer
                      description: Number of automatic forwards on a story.
                      example: 5
                      nullable: true
                    tap_backs:
                      type: integer
                      description: Number of tap backs on a story.
                      example: 5
                      nullable: true
                    tap_exits:
                      type: integer
                      description: Number of tap exits on a story.
                      example: 6
                      nullable: true
                    tap_forwards:
                      type: integer
                      description: Number of tap forwards on a story.
                      example: 22
                      nullable: true
                    swipe_backs:
                      type: integer
                      description: Number of swipe backs on a story.
                      example: 3
                      nullable: true
                    swipe_ups:
                      type: integer
                      description: Number of swipe ups on a story.
                      example: 8
                      nullable: true
                    swipe_downs:
                      type: integer
                      description: Number of swipe downs on a story.
                      example: 2
                      nullable: true
                    swipe_forwards:
                      type: integer
                      description: Number of swipe forwards on a story.
                      example: 13
                      nullable: true
            replay_count:
              type: integer
              description: Number of times content was viewed after initial play
            avg_watch_time_in_sec:
              type: integer
              x-stoplight:
                id: cr2p8mcprv013
              description: Average watch time of reel in seconds
        external_id:
          type: string
          description: Unique content ID on the platform.
          example: 12ccaf87
        title:
          type: string
          description: Title of the content item.
          example: USA Tours
        format:
          type: string
          description: Media type of the content item.
          enum:
            - VIDEO
            - IMAGE
            - AUDIO
            - TEXT
            - OTHER
          example: VIDEO
        type:
          type: string
          description: Platform specific content type.
          enum:
            - VIDEO
            - POST
            - STORY
            - TWEET
            - BLOG
            - IMAGE
            - THREAD
            - PODCAST
            - TRACK
            - OTHER
            - REELS
            - STREAM
            - FEED
            - IGTV
            - RETWEET
            - QUOTE
            - REPLY
          example: VIDEO
        url:
          type: string
          description: Platform content URL.
          example: 'https://youtu.be/jzWweY4xPe8'
          format: uri
        media_url:
          type: string
          format: uri
          example: 'https://video.cdninstagram.com/v/t50.16885-16/273384537_472655704353078_8308247021721136693_n.mp4?_nc_cat=100&vs=661086908417570_1261186177&_nc_vs=HBksFQAYJEdGbUVTeEEyNlZ1NzRLMEJBRFd1NHJPbDBreHpidlZCQUFBRhUAAsgBABUAGCRHSnU0U3hEM2kwQ0VQVk1EQUM3S29OeTlueUJzYnZWQkFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMRUAACbG3%2FGq0JXjPxUCKAJDMywXQCOhysCDEm8YEmRhc2hfYmFzZWxpbmVfMV92MREAdewHAA%3D%3D&ccb=1-5&_nc_sid=59939d&efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjQ4MC5pZ3R2In0%3D&_nc_ohc=qcTIWWC39rQAX9xprW6&_nc_ht=video.cdninstagram.com&edm=AM6HXa8EAAAA&oh=00_AT85xcdCSq921RH5KCSfIukPMfk0QCajZEP5Ym4fY3p1Pw&oe=621D1EA5&_nc_rid=5d42feb0d5'
          description: 'Direct media URL of the content item, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.'
          nullable: true
        duration:
          type: integer
          example: 523
          description: Video duration in seconds (only available for YouTube).
          nullable: true
        description:
          type: string
          description: Description of the content item.
          example: 'Super cuteLeopard print cardigan available in navy blue and the coffee color. Only $9.89 reg priced at $34.99 on @amazon #couponcommunity #amazonfinds #like #amazondeals #promocodes #rundeal #explorepage #amazon #neverpayfullprice #onlinedeals"'
        hashtags:
          type: array
          description: 'List of hashtags found in the title or description of the content item. If there are no hashtags in the title or description of the content item, then the attribute will be null.'
          nullable: true
          items:
            type: string
            example: '[''#couponcommunity'', ''#amazonfinds'', ''#like'', ''#amazondeals'', ''#promocodes'', ''#rundeal'', ''#explorepage'', ''#amazon'', ''#neverpayfullprice'', ''#onlinedeals'']'
        mentions:
          type: array
          description: 'List of mentions found in the title or description of the content item. If there are no mentions in the title or description of the content item, then the attribute will be null.'
          nullable: true
          items:
            type: string
            example: '[''@amazon'']'
        visibility:
          type: string
          description: Visibility of the content item.
          enum:
            - PUBLIC
            - PRIVATE
          example: PUBLIC
        thumbnail_url:
          type: string
          example: 'https://youtu.be/jzWweY4xPe8.png'
          format: uri
          description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.'
        persistent_thumbnail_url:
          type: string
          example: 'https://youtu.be/jzWweY4xPe8.png'
          format: uri
          description: Persistent thumbnail URL of the content item.
        published_at:
          type: string
          example: '2021-05-26T00:00:00.000000'
          format: date-time
          description: Publishing timestamp of the content item.
        platform_profile_id:
          type: string
          description: |-
            Unique profile ID of the user on the work platform. 

            Ex - For YouTube it's the channel ID and for Instagram it's the Instagram page ID.
          example: UCEyLTzBtHJhlUwkeWhxfMXw
        platform_profile_name:
          type: string
          example: CBSE WINNERS
          description: |-
            User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

            Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
        authors:
          type: array
          description: Names of the authors of the publication
          items:
            type: string
        audience:
          type: string
          description: Audience type that the post will be accessible to.
          enum:
            - FREE
            - PAID
            - BOTH
        platform:
          type: string
          description: Platform the the post was published to.
          enum:
            - WEB
            - EMAIL
            - BOTH
        content_tags:
          type: array
          description: Content tags associated with the publication.
          items:
            type: string
        sponsored:
          type: object
          nullable: true
          properties:
            is_sponsored:
              type: boolean
              description: Indicates if the content item is sponsored.
              example: true
            tags:
              type: string
              description: Sponsor tag (can include mentions of the sponsor)
        collaboration:
          type: object
          nullable: true
          properties:
            has_collaborators:
              type: boolean
              description: Indicates if the content item has collaborators.
              example: true
        is_owned_by_platform_user:
          type: boolean
          description: '**true**, if the content is owned by the creator. In YouTube, it is possible that content is actually owned by another creator, but current creator has linked that content in their playlist. In such a case the content will still be listed for the current creator.'
          default: true
          deprecated: true
      x-examples:
        Example 1:
          id: cfcc6603-1d8f-47d9-926a-4b91cc143105
          created_at: '2020-03-27T12:56:34.534978'
          updated_at: '2020-03-27T12:56:34.534978'
          user:
            id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
            name: John Doe
          account:
            id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
            platform_username: john.doe@gmail.com
          work_platform:
            id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
            name: Instagram
            logo_url: 'https://insightiq.ai/storage/instagram.png'
          engagement:
            like_count: 42134
            dislike_count: 342
            comment_count: 4234
            impression_organic_count: 4234
            reach_organic_count: 34
            save_count: 43
            view_count: 42343
            watch_time_in_hours: 1.5
            share_count: 42343
            impression_paid_count: 4234
            reach_paid_count: 34
            email_open_rate: 0
            email_click_rate: 0
            unsubscribe_count: 0
            spam_report_count: 0
            click_count: 0
            additional_info:
              followers_gained: 14
              profile_visits: 123
              bio_link_clicked: 9
              story_navigation:
                automatic_forwards: 5
                tap_backs: 5
                tap_exits: 6
                tap_forwards: 22
                swipe_backs: 3
                swipe_ups: 8
                swipe_downs: 2
                swipe_forwards: 13
            replay_count: 0
            avg_watch_time_in_sec: 0
          external_id: 12ccaf87
          title: USA Tours
          format: VIDEO
          type: VIDEO
          url: 'https://youtu.be/jzWweY4xPe8'
          media_url: 'https://video.cdninstagram.com/v/t50.16885-16/273384537_472655704353078_8308247021721136693_n.mp4?_nc_cat=100&vs=661086908417570_1261186177&_nc_vs=HBksFQAYJEdGbUVTeEEyNlZ1NzRLMEJBRFd1NHJPbDBreHpidlZCQUFBRhUAAsgBABUAGCRHSnU0U3hEM2kwQ0VQVk1EQUM3S29OeTlueUJzYnZWQkFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMRUAACbG3%2FGq0JXjPxUCKAJDMywXQCOhysCDEm8YEmRhc2hfYmFzZWxpbmVfMV92MREAdewHAA%3D%3D&ccb=1-5&_nc_sid=59939d&efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjQ4MC5pZ3R2In0%3D&_nc_ohc=qcTIWWC39rQAX9xprW6&_nc_ht=video.cdninstagram.com&edm=AM6HXa8EAAAA&oh=00_AT85xcdCSq921RH5KCSfIukPMfk0QCajZEP5Ym4fY3p1Pw&oe=621D1EA5&_nc_rid=5d42feb0d5'
          duration: 523
          description: 'Super cuteLeopard print cardigan available in navy blue and the coffee color. Only $9.89 reg priced at $34.99 on @amazon #couponcommunity #amazonfinds #like #amazondeals #promocodes #rundeal #explorepage #amazon #neverpayfullprice #onlinedeals"'
          hashtags:
            - '[''#couponcommunity'', ''#amazonfinds'', ''#like'', ''#amazondeals'', ''#promocodes'', ''#rundeal'', ''#explorepage'', ''#amazon'', ''#neverpayfullprice'', ''#onlinedeals'']'
          mentions:
            - '[''@amazon'']'
          visibility: PUBLIC
          thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
          persistent_thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
          published_at: '2021-05-26T00:00:00.000000'
          platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
          platform_profile_name: CBSE WINNERS
          authors:
            - string
          audience: FREE
          platform: WEB
          content_tags:
            - string
          sponsored:
            is_sponsored: true
            tags: string
          collaboration:
            has_collaborators: true
          is_owned_by_platform_user: true
    ContentGroup:
      title: ContentGroup
      type: object
      description: 'Represents the Content Group object. For Instagram, YouTube types of platforms, it will media containers (album, playlist) created/published on that platforms.'
      required:
        - id
        - created_at
        - updated_at
        - external_id
        - title
        - type
        - published_at
        - platform_profile_id
        - platform_profile_name
        - item_count
      properties:
        id:
          type: string
          description: Unique ID of the content group.
          example: cfcc6603-1d8f-47d9-926a-4b91cc143105
          format: uuid
        created_at:
          type: string
          description: Object creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Object updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        engagement:
          type: object
          description: Object having reputation information.
          properties:
            like_count:
              type: integer
              description: Total likes.
              example: 3455
            dislike_count:
              type: integer
              description: Total dislikes.
              example: 52
              nullable: true
            comment_count:
              type: integer
              description: Total comments.
              example: 53
            impression_organic_count:
              type: integer
              description: Total organic impressions.
              example: 545
            reach_organic_count:
              type: integer
              description: Total organic reach.
              example: 453
            save_count:
              type: integer
              description: Total item saves.
              example: 5423
            view_count:
              type: integer
              description: Total views.
              example: 345
            watch_time_in_hours:
              type: number
              description: If format is `video` - total watch time in hours .
              example: 1.5
              nullable: true
            share_count:
              type: integer
              description: Total shares.
              example: 5423
              nullable: true
            impression_paid_count:
              type: integer
              description: Total paid impressions.
              example: 545
              nullable: true
            reach_paid_count:
              type: integer
              description: Total paid reach.
              example: 453
              nullable: true
            avg_watch_time_in_sec:
              type: integer
              x-stoplight:
                id: xrmxds8eu6eew
              description: Average watch time of reel in seconds
        external_id:
          type: string
          description: Unique content group ID on the platform.
          example: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
        title:
          type: string
          description: Title of the content group.
          example: USA Tours
        format:
          type: string
          description: Media type of the content item.
          enum:
            - VIDEO
            - IMAGE
            - AUDIO
            - TEXT
            - COLLECTION
            - OTHER
          example: VIDEO
        type:
          type: string
          description: Platform specific content type.
          enum:
            - ALBUM
            - PLAYLIST
            - OTHER
          example: ALBUM
        url:
          type: string
          description: 'Platform content group URL. Ex - for YouTube, it will the playlist URL.'
          example: 'https://youtu.be/jzWweY4xPe8'
          format: uri
        description:
          type: string
          description: Description of the content group.
          example: US tours video.
          nullable: true
        visibility:
          type: string
          description: Visibility of the content group.
          enum:
            - PUBLIC
            - PRIVATE
          example: PUBLIC
        thumbnail_url:
          type: string
          example: 'https://youtu.be/jzWweY4xPe8.png'
          format: uri
          description: 'Thumbnail URL of the content group, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.'
        published_at:
          type: string
          example: '2021-05-26T00:00:00.000000'
          format: date-time
          description: Publishing timestamp of the content group.
        platform_profile_id:
          type: string
          description: |-
            Unique profile ID of the user on the work platform. 

            Ex - For YouTube it's the channel ID and for Instagram it's the Instagram page ID.
          example: UCEyLTzBtHJhlUwkeWhxfMXw
          nullable: true
        platform_profile_name:
          type: string
          example: CBSE WINNERS
          description: |-
            User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

            Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
          nullable: true
        item_count:
          type: integer
          description: Number of content items in this content group.
        media_url:
          type: string
          description: 'Direct media URL of the first content item in the content group, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.'
          nullable: true
        media_urls:
          type: array
          description: 'Direct media URL of all the content items in the content group, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.'
          nullable: true
          items:
            type: string
            format: uri
      x-examples:
        Example 1:
          id: cfcc6603-1d8f-47d9-926a-4b91cc143105
          created_at: '2020-03-27T12:56:34.534978'
          updated_at: '2020-03-27T12:56:34.534978'
          user:
            id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
            name: John Doe
          account:
            id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
            platform_username: john.doe@gmail.com
          work_platform:
            id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
            name: Instagram
            logo_url: 'https://insightiq.ai/storage/instagram.png'
          engagement:
            like_count: 3455
            dislike_count: 52
            comment_count: 53
            impression_organic_count: 545
            reach_organic_count: 453
            save_count: 5423
            view_count: 345
            watch_time_in_hours: 1.5
            share_count: 5423
            impression_paid_count: 545
            reach_paid_count: 453
            avg_watch_time_in_sec: 110
          external_id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
          title: USA Tours
          format: VIDEO
          type: ALBUM
          url: 'https://youtu.be/jzWweY4xPe8'
          description: US tours video.
          visibility: PUBLIC
          thumbnail_url: 'https://youtu.be/jzWweY4xPe8.png'
          published_at: '2021-05-26T00:00:00.000000'
          platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
          platform_profile_name: CBSE WINNERS
          item_count: 0
          media_url: string
          media_urls:
            - 'http://example.com'
    ContentGroupList:
      title: ContentGroupList
      type: object
      description: ''
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ContentGroup'
        metadata:
          $ref: '#/components/schemas/Metadata'
    Error:
      title: Error
      type: object
      properties:
        error:
          type: object
          properties:
            type:
              type: string
              example: INVALID_REQUEST_PARAMETERS
              description: Type of the error.
            error_code:
              type: string
              description: Code of the error.
              example: MISSING_FIELDS
            message:
              type: string
              description: Message of the error.
              example: 'Request is missing required fields: [enabled, name].'
            request_id:
              type: string
              format: uuid
              description: Unique ID associated with this request. Please quote this request while requesting support.
            http_status_code:
              type: number
              example: 400
              description: 'Standard HTTP status code for the given request, which is also present in the HTTP response'
          required:
            - type
            - error_code
            - message
            - request_id
            - http_status_code
    AccountAttribute:
      title: AccountAttribute
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the account linked to this object.
          example: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
          format: uuid
        platform_username:
          type: string
          description: Username of the account linked to this object.
          example: john.doe@gmail.com
      required:
        - id
        - platform_username
    UserAttribute:
      title: UserAttribute
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the user.
          example: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
          format: uuid
        name:
          type: string
          example: John Doe
          description: Name of the user.
      required:
        - id
        - name
    ContentAttribute:
      title: ContentAttribute
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the content item.
          example: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
          format: uuid
        url:
          type: string
          format: uri
          description: URL of the content item.
        published_at:
          type: string
          format: date-time
          example: '2022-03-27T12:56:34.534978'
          description: Content's published date and time on the platform.
      required:
        - id
        - url
        - published_at
    WorkPlatformAttribute:
      title: WorkPlatformAttribute
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the work platform.
          example: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
          format: uuid
        name:
          type: string
          description: Name of the work platform.
          example: Instagram
        logo_url:
          type: string
          description: Image URL of the work platform logo.
          example: 'https://insightiq.ai/storage/instagram.png'
          format: uri
      required:
        - id
        - name
        - logo_url
    WorkPlatformAttribute-Professional:
      title: WorkPlatformAttribute
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the work platform.
          example: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
          format: uuid
        name:
          type: string
          description: Name of the work platform.
          example: LinkedIn
        logo_url:
          type: string
          description: Image URL of the work platform logo.
          example: 'https://insightiq.ai/storage/linkedin.png'
          format: uri
      required:
        - id
        - name
        - logo_url
    WorkPlatformList:
      title: WorkPlatformList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkPlatform'
        metadata:
          $ref: '#/components/schemas/Metadata'
    UserResponseList:
      title: UserResponseList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        metadata:
          $ref: '#/components/schemas/Metadata'
    WebhookResponseList:
      title: WebhookResponseList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookResponse'
        metadata:
          $ref: '#/components/schemas/Metadata'
    Metadata:
      title: Metadata
      description: Metadata object representing meta information about resources.
      required:
        - offset
        - limit
      allOf:
        - $ref: '#/components/schemas/BasicMetadata'
        - type: object
          properties:
            from_date:
              type: string
              description: From date passed in the query parameter (YYYY-MM-DD).
              example: '2020-12-31'
              format: date
              nullable: true
            to_date:
              type: string
              description: To date passed in the query parameter (YYYY-MM-DD).
              example: '2021-12-31'
              format: date
              nullable: true
    BasicMetadata:
      title: BasicMetadata
      type: object
      description: Basic metadata object representing meta information about resources.
      required:
        - offset
        - limit
      properties:
        offset:
          type: integer
          example: 0
          description: Offset value passed in the query parameter.
          default: 0
        limit:
          type: integer
          example: 10
          description: Limit value passed in the query parameter.
          default: 10
    AccountList:
      title: AccountList
      type: object
      x-examples:
        example-1:
          data:
            - id: 9b8cf321-1334-486e-873e-82d9de692abd
              created_at: '2022-01-06T08:35:23.340738'
              updated_at: '2022-03-29T13:41:59.357322'
              user:
                id: a162c7e0-bc81-4142-8945-3d6a715d0f51
                name: LedAU1GL
              work_platform:
                id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                name: Instagram
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
              platform_username: Adf
              profile_pic_url: null
              status: NOT_CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00.000000'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00.000000'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 81c71d15-dcaf-46e1-ab96-a73aea12bcfd
              created_at: '2022-01-03T10:08:20.936493'
              updated_at: '2022-01-03T10:08:20.936493'
              user:
                id: 9c03319a-ddde-443c-8439-b8f380e9a365
                name: 5zS70mBZ
              work_platform:
                id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                name: YouTube
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
              platform_username: Sadsdfasf
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00.000000'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00.000000'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
                income:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00.000000'
                  monitoring_type: STANDARD
            - id: 89294fb7-307a-417f-8aec-83e3a22ead58
              created_at: '2021-12-28T14:00:08.671900'
              updated_at: '2021-12-28T14:02:11.631364'
              user:
                id: b1eacf57-f6b9-478c-a352-fe94974f8691
                name: DigiQT
              work_platform:
                id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                name: YouTube
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
              platform_username: '123'
              profile_pic_url: null
              status: NOT_CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00.000000'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00.000000'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: f2c85637-8d3a-4b00-80ef-dfe8dc736832
              created_at: '2021-12-28T14:01:24.176471'
              updated_at: '2021-12-28T14:01:24.176471'
              user:
                id: b1eacf57-f6b9-478c-a352-fe94974f8691
                name: DigiQT
              work_platform:
                id: ad2fec62-2987-40a0-89fb-23485972598c
                name: Facebook
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
              platform_username: '1234'
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 8ee6474b-f255-443c-99da-c7cb2bfa84be
              created_at: '2021-12-28T13:59:36.732127'
              updated_at: '2021-12-28T13:59:36.732127'
              user:
                id: e85f084d-64c7-4271-9b42-ecef8e397b99
                name: DigiQT
              work_platform:
                id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                name: YouTube
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
              platform_username: '123'
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 1a3af1aa-e15f-4920-9507-c847f9878e19
              created_at: '2021-12-14T05:48:44.119208'
              updated_at: '2021-12-14T05:48:44.119208'
              user:
                id: b20ac291-2a1b-49bc-b27a-fdc2d0e789d4
                name: h51u3qsm
              work_platform:
                id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                name: Instagram
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
              platform_username: Sda
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: b444a9b7-905a-4f35-b7ce-950d32f6355a
              created_at: '2021-12-14T05:45:31.414744'
              updated_at: '2021-12-14T05:45:31.414744'
              user:
                id: 63ea679d-b421-4de6-91db-94ea4bd78816
                name: Kgga4vQX
              work_platform:
                id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                name: Instagram
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
              platform_username: Asf
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 7c4f814c-b7ba-4e34-9ce8-3a3bd334883f
              created_at: '2021-12-14T05:44:11.597584'
              updated_at: '2021-12-14T05:45:10.952968'
              user:
                id: 63ea679d-b421-4de6-91db-94ea4bd78816
                name: Kgga4vQX
              work_platform:
                id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                name: Instagram
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
              platform_username: Hello
              profile_pic_url: null
              status: NOT_CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: ce22d588-99b1-4582-9e14-d2dc638b3b26
              created_at: '2021-12-14T05:44:37.414600'
              updated_at: '2021-12-14T05:44:37.414600'
              user:
                id: 63ea679d-b421-4de6-91db-94ea4bd78816
                name: Kgga4vQX
              work_platform:
                id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                name: Instagram
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
              platform_username: Asghdfha
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 11cb31f6-0d56-4eb4-b4d0-63794f8242fc
              created_at: '2021-12-13T14:16:09.083338'
              updated_at: '2021-12-13T14:16:09.083338'
              user:
                id: 4532e289-6301-4cdf-af6b-aef83ab01315
                name: LztHEgLI
              work_platform:
                id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                name: Twitter
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
              platform_username: Dsfda
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: e0852c98-0c7f-4498-8626-2bda43cd0667
              created_at: '2021-12-13T14:15:52.494149'
              updated_at: '2021-12-13T14:15:52.494149'
              user:
                id: 4532e289-6301-4cdf-af6b-aef83ab01315
                name: LztHEgLI
              work_platform:
                id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                name: Twitter
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
              platform_username: Hello
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: null
              platform_profile_id: null
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 9ccb74b5-6074-4ec8-b597-830cbb94f103
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: c931d928-c17d-49ee-89d0-ab18a825bd9b
                name: Chad Becker
              work_platform:
                id: ad2fec62-2987-40a0-89fb-23485972598c
                name: Facebook
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
              platform_username: chad.becker@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: Chad Becker Official
              platform_profile_id: '7720345617123'
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 6ad07dba-6925-4515-abb4-f63875ada3b2
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: 4d913581-99f2-41a8-9309-9b008511c211
                name: Julia Luis
              work_platform:
                id: ad2fec62-2987-40a0-89fb-23485972598c
                name: Facebook
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_facebook.png'
              platform_username: julia.luis@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: Veep Official
              platform_profile_id: '7720345617125'
              platform_profile_published_at: '2020-01-01T00:00:00'
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: a3970259-6740-4131-9058-2f5a4c0d17fa
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: 3b38559b-892f-475d-b4df-7248ef1fd405
                name: Jonah Hill
              work_platform:
                id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                name: Twitter
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
              platform_username: jonah.hill@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: realJonah
              platform_profile_id: '2725104190'
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 3839334f-6c01-4ad3-8ff1-68e106148702
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: 8ba1ac32-0f3c-4cf0-8d89-79a183258f6a
                name: Peter Parker
              work_platform:
                id: 7645460a-96e0-4192-a3ce-a1fc30641f72
                name: Twitter
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitter.png'
              platform_username: peter.parker@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: peterparker
              platform_profile_id: '2725104191'
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: f5e89cea-18b6-4479-a4dd-64a48217e759
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: ac0d5da5-f8c1-4139-8945-825986da9c1e
                name: Chris Evans
              work_platform:
                id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                name: Instagram
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
              platform_username: chris.evans@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: chrisevans
              platform_profile_id: '192342567'
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
                  audience:
                    status: SYNCED
                    last_sync_at: '2020-01-02T00:00:00'
                    refresh_since: null
                    data_available_from: null
                    monitoring_type: STANDARD
            - id: 44554e73-5879-4764-a37c-fa3a47e25c2a
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: 28722faa-5356-483d-a57b-384fa01859dd
                name: Robert Downey
              work_platform:
                id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                name: Instagram
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_instagram.png'
              platform_username: robert.downey@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: robertdowney
              platform_profile_id: '192342568'
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
                  audience:
                    status: SYNCED
                    last_sync_at: '2020-01-02T00:00:00'
                    refresh_since: null
                    data_available_from: null
                    monitoring_type: STANDARD
            - id: 1639b5c5-facb-4555-8e55-3433cafe0c6b
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: b0562ead-6282-404f-9e63-9da7bc0f838f
                name: Mark Ruffalo
              work_platform:
                id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                name: YouTube
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
              platform_username: mark.ruffalo@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: CBSE WINNERS
              platform_profile_id: UCEyLTzBtHJhlUwkeWhxfMXw
              platform_profile_published_at: '2020-01-01T00:00:00'
              data:
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
                  audience:
                    status: SYNCED
                    last_sync_at: '2020-01-02T00:00:00'
                    refresh_since: null
                    data_available_from: null
                    monitoring_type: STANDARD
                income:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
            - id: b09dbb96-85e2-44fd-87db-4b891b60745a
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: 79be6897-e0f4-43d2-8df3-4af15b2862f0
                name: Sam Curran
              work_platform:
                id: 14d9ddf5-51c6-415e-bde6-f8ed36ad7054
                name: YouTube
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png'
              platform_username: sam.curran@gmail.com
              profile_pic_url: '2020-01-01'
              status: CONNECTED
              platform_profile_name: samECB
              platform_profile_id: '2755104190'
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
                  audience:
                    status: SYNCED
                    last_sync_at: '2020-01-02T00:00:00'
                    refresh_since: null
                    data_available_from: null
                    monitoring_type: STANDARD
            - id: e42ad363-6e49-4b69-9078-41f8820284e0
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: c9342ccd-14ec-4fb1-b6c1-8dfc5df7c518
                name: Jerry Seinfeld
              work_platform:
                id: de55aeec-0dc8-4119-bf90-16b3d1f0c987
                name: TikTok
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_tiktok.png'
              platform_username: jerry.seinfeld@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: jerryWho
              platform_profile_id: '126789012'
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 1fbac095-5343-4367-80b3-247f4c449ad4
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: c21c3a73-ade9-435b-8033-53d3e0549366
                name: Lisa Kudrow
              work_platform:
                id: de55aeec-0dc8-4119-bf90-16b3d1f0c987
                name: TikTok
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_tiktok.png'
              platform_username: lisa.kudrow@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: smellyCat
              platform_profile_id: '126789011'
              platform_profile_published_at: '2020-01-01T00:00:00'
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: 35bbe1ed-4775-4054-a979-64d319e49a2a
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: bc200267-631f-42e2-b0d9-aae786ff85de
                name: Justin Gatlin
              work_platform:
                id: e4de6c01-5b78-4fc0-a651-24f44134457b
                name: Twitch
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitch.png'
              platform_username: justin.gatlin@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: justinGames
              platform_profile_id: 126789011xyz
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
            - id: afed96b3-be19-4383-aade-9ed4896a04e8
              created_at: '2021-12-13T07:54:41.078254'
              updated_at: '2021-12-13T07:54:41.078254'
              user:
                id: dbada397-ed37-48e5-98bf-018808a186d9
                name: Simu Liu
              work_platform:
                id: e4de6c01-5b78-4fc0-a651-24f44134457b
                name: Twitch
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_twitch.png'
              platform_username: simu.liu@gmail.com
              profile_pic_url: null
              status: CONNECTED
              platform_profile_name: shangGamer
              platform_profile_id: 126789011xy234
              platform_profile_published_at: null
              data:
                identity:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  monitoring_type: STANDARD
                engagement:
                  status: SYNCED
                  last_sync_at: '2020-01-02T00:00:00'
                  refresh_since: null
                  data_available_from: null
                  monitoring_type: STANDARD
          metadata:
            offset: 0
            limit: 100
            from_date: null
            to_date: null
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - data
        - metadata
    ProfileList:
      title: ProfileList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
        metadata:
          $ref: '#/components/schemas/Metadata'
    Comment:
      title: Comment
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the comment.
        created_at:
          type: string
          format: date-time
          example: '2022-03-27T12:56:34.534978'
          description: Object creation time (UTC date and time in ISO 8601 format)
        updated_at:
          type: string
          example: '2022-03-27T12:56:34.534978'
          format: date-time
          description: Object updation time (UTC date and time in ISO 8601 format)
        published_at:
          type: string
          format: date-time
          example: '2022-03-27T12:56:34.534978'
          description: Publishing timestamp of the comment.
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        content:
          $ref: '#/components/schemas/ContentAttribute'
        external_id:
          type: string
          format: uuid
          description: Unique comment ID on the platform.
        text:
          type: string
          description: Text content of the comment.
        commenter_username:
          type: string
          description: Commenter profile username.
        commenter_display_name:
          type: string
          description: Full display name of the commenter profile.
        commenter_id:
          type: string
          description: Unique identifier for the commenter's profile on the platform.
        commenter_profile_url:
          type: string
          description: Commenter's profile URL on the connected platform.
          nullable: true
        like_count:
          type: integer
          description: Total likes.
        reply_count:
          type: integer
          description: Total replies.
      required:
        - id
        - created_at
        - updated_at
        - published_at
        - user
        - account
        - work_platform
        - content
        - external_id
    CommentResponseList:
      title: CommentResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
    FetchHistoric:
      title: FetchHistoric
      type: object
      properties:
        account_id:
          type: string
          description: Unique ID of the account.
          format: uuid
        from_date:
          type: string
          description: 'Starting date from which the content items need to be refreshed, in YYYY-MM-DD format.'
          format: date
      required:
        - account_id
        - from_date
    Refresh:
      title: Refresh
      type: object
      properties:
        account_id:
          type: string
          description: Unique ID of the account.
          format: uuid
      required:
        - account_id
    Demographics:
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
              description: Unique ID of the comment.
            created_at:
              type: string
              format: date-time
              example: '2022-03-27T12:56:34.534978'
              description: Object creation time (UTC date and time in ISO 8601 format)
            updated_at:
              type: string
              example: '2022-03-27T12:56:34.534978'
              format: date-time
              description: Object updation time (UTC date and time in ISO 8601 format)
            user:
              $ref: '#/components/schemas/UserAttribute'
            account:
              $ref: '#/components/schemas/AccountAttribute'
            work_platform:
              $ref: '#/components/schemas/WorkPlatformAttribute'
          required:
            - id
            - created_at
            - updated_at
            - user
            - account
            - work_platform
        - $ref: '#/components/schemas/DemographicsAttributes'
    DemographicsAttributes:
      title: DemographicsAttributes
      type: object
      properties:
        countries:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: 2 letter country code as per ISO 3166-1 alpha-2
                example: US
              value:
                type: number
                description: Percentage value of demographics from the corresponding country
                example: 78.9
            required:
              - code
              - value
        cities:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the city
                example: Boulder
              value:
                type: number
                description: Percentage value of demographics from the corresponding city
                example: 45.6
            required:
              - name
              - value
        gender_age_distribution:
          type: array
          items:
            type: object
            properties:
              gender:
                type: string
                enum:
                  - MALE
                  - FEMALE
                  - OTHERS
                example: FEMALE
                description: Gender of the audience
              age_range:
                type: string
                example: 13-18
                description: Age range of the audience
              value:
                type: number
                example: 12.3
                description: Percentage value of demographics from the corresponding gender in the corresponding age range
            required:
              - gender
              - age_range
              - value
      required:
        - countries
        - cities
        - gender_age_distribution
      description: ''
    SocialTransaction:
      title: SocialTransaction
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the transaction.
        created_at:
          type: string
          description: Object creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Object updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        amount:
          type: number
          example: 123.45
          description: Amount for the given transaction
        type:
          type: string
          enum:
            - AD
            - SUBSCRIPTION
            - ADDITIONAL
          description: Type of the transaction
        cpm:
          type: number
          example: 6.78
          description: '"Cost per thousand impressions", where impressions are the display units, as paid by the platform to show ads on the profile'
          nullable: true
        currency:
          type: string
          description: 3 letter currency code as per ISO 4217
          example: USD
        external_id:
          type: string
          example: 5790fbc3-b022-437b-abf8-0492c7a82056
          description: Transaction ID given by the source platform
          nullable: true
        transaction_at:
          type: string
          format: date-time
          example: '2020-03-27T12:56:34.534978'
          description: Date or timestamp of transaction
        platform_profile_id:
          type: string
          example: UCEyLTzBtHJhlUwkeWhxfMXw
          description: |-
            Unique profile ID of the user on the work platform. 

            Ex - For YouTube it's the channel ID and for Instagram it's the Instagram page ID.
        platform_profile_name:
          type: string
          example: Peter Parker
          description: |-
            User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

            Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
          nullable: true
      required:
        - id
        - created_at
        - updated_at
        - user
        - account
        - work_platform
        - amount
        - type
        - cpm
        - currency
        - external_id
        - transaction_at
        - platform_profile_id
        - platform_profile_name
    SocialTransactionList:
      title: SocialTransactionList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SocialTransaction'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
    CommerceTransaction:
      title: CommerceTransaction
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the transaction.
        created_at:
          type: string
          description: Object creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Object updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        amount:
          type: number
          example: 123.45
          description: Amount for the given transaction
        currency:
          type: string
          description: 3 letter currency code as per ISO 4217
          example: USD
        type:
          type: string
          description: Type of the transaction
          enum:
            - SALE
            - REFUND
            - CANCELLED
            - VOID
            - OTHER
        status:
          type: string
          description: Status of the transaction on the source platform
          enum:
            - SUCCESS
            - FAILURE
            - PENDING
            - OTHER
        external_id:
          type: string
          example: 5790fbc3-b022-437b-abf8-0492c7a82056
          description: Transaction ID given by the source platform
          nullable: true
        transaction_at:
          type: string
          format: date-time
          example: '2020-03-27T12:56:34.534978'
          description: Date or timestamp of transaction
        platform_profile_id:
          type: string
          example: UCEyLTzBtHJhlUwkeWhxfMXw
          description: |-
            Unique profile ID of the user on the work platform. 

            Ex - For YouTube it's the channel ID and for Instagram it's the Instagram page ID.
        platform_profile_name:
          type: string
          example: Peter Parker
          description: |-
            User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

            Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
          nullable: true
      required:
        - id
        - created_at
        - updated_at
        - user
        - account
        - work_platform
        - amount
        - currency
        - type
        - status
        - external_id
        - transaction_at
        - platform_profile_id
        - platform_profile_name
    CommerceTransactionList:
      title: CommerceTransactionList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CommerceTransaction'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
    CommercePayout:
      title: CommercePayout
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the payout.
        created_at:
          type: string
          description: Object creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Object updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        amount:
          type: number
          example: 123.45
          description: Amount for the given payout
        currency:
          type: string
          description: 3 letter currency code as per ISO 4217
          example: USD
        status:
          type: string
          description: Status of the payout on the source platform
          enum:
            - SCHEDULED
            - PAID
            - IN_TRANSIT
            - CANCELLED
        payout_interval:
          type: string
          description: Regular interval at which the source platform processes payouts
          enum:
            - AUTOMATIC_DAILY
            - AUTOMATIC_WEEKLY
            - AUTOMATIC_MONTHLY
            - MANUAL
        bank_details:
          type: object
          description: Bank details to which the payouts are sent
          properties:
            name:
              type: string
              description: Bank name to which the payouts are sent
            account_last_digits:
              type: string
              description: Last 4 characters of the bank account to which the payouts are sent
            account_routing_number:
              type: string
              description: Routing number of the bank account to which the payouts are sent
        external_id:
          type: string
          example: 5790fbc3-b022-437b-abf8-0492c7a82056
          description: Payout ID given by the source platform
          nullable: true
        payout_at:
          type: string
          format: date-time
          example: '2020-03-27T12:56:34.534978'
          description: Date or timestamp of payout
        platform_profile_id:
          type: string
          example: UCEyLTzBtHJhlUwkeWhxfMXw
          description: |-
            Unique profile ID of the user on the work platform. 

            Ex - For YouTube it's the channel ID and for Instagram it's the Instagram page ID.
        platform_profile_name:
          type: string
          example: Peter Parker
          description: |-
            User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

            Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
          nullable: true
      required:
        - id
        - created_at
        - updated_at
        - user
        - account
        - work_platform
        - amount
        - currency
        - status
        - external_id
        - payout_at
        - platform_profile_id
        - platform_profile_name
    CommercePayoutList:
      title: CommercePayoutList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CommercePayout'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
    CommerceBalanceAmount:
      title: CommerceBalanceAmount
      type: object
      description: ''
      properties:
        amount:
          type: number
          example: 123.45
          description: Amount for the given balance
        currency:
          type: string
          description: 3 letter currency code as per ISO 4217
          example: USD
      required:
        - currency
    CommerceBalance:
      title: CommerceBalance
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the balance.
        created_at:
          type: string
          description: Object creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Object updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        balance:
          type: array
          description: List of balances in different currencies on the given date
          items:
            $ref: '#/components/schemas/CommerceBalanceAmount'
        balance_at:
          type: string
          format: date-time
          example: '2020-03-27T00:00:00.000000'
          description: Date of balance
        platform_profile_id:
          type: string
          example: UCEyLTzBtHJhlUwkeWhxfMXw
          description: |-
            Unique profile ID of the user on the work platform. 

            Ex - For YouTube it's the channel ID and for Instagram it's the Instagram page ID.
        platform_profile_name:
          type: string
          example: Peter Parker
          description: |-
            User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

            Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
          nullable: true
      required:
        - id
        - created_at
        - updated_at
        - user
        - account
        - work_platform
        - balance_at
        - platform_profile_id
        - platform_profile_name
    CommerceBalanceList:
      title: CommerceBalanceList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CommerceBalance'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
    ContentSearch:
      title: ContentSearch
      type: object
      properties:
        ids:
          type: array
          minItems: 1
          maxItems: 100
          description: List of upto 100 content IDs for which to fetch data
          items:
            type: string
            format: uuid
      required:
        - ids
    ContentSearchList:
      title: ContentSearchList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Content'
    ContentGroupSearch:
      title: ContentGroupSearch
      type: object
      properties:
        ids:
          type: array
          minItems: 1
          maxItems: 100
          description: List of upto 100 content group IDs for which to fetch data
          items:
            type: string
            format: uuid
      required:
        - ids
    ContentGroupSearchList:
      title: ContentGroupSearchList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ContentGroup'
    SocialTransactionSearch:
      title: SocialTransactionSearch
      type: object
      properties:
        ids:
          type: array
          minItems: 1
          maxItems: 100
          description: List of upto 100 social transaction IDs for which to fetch data
          items:
            type: string
            format: uuid
      required:
        - ids
    SocialTransactionSearchList:
      title: SocialTransactionSearchList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SocialTransaction'
    CommerceTransactionSearch:
      title: CommerceTransactionSearch
      type: object
      properties:
        ids:
          type: array
          minItems: 1
          maxItems: 100
          description: List of upto 100 commerce transaction IDs for which to fetch data
          items:
            type: string
            format: uuid
      required:
        - ids
    CommerceTransactionSearchList:
      title: CommerceTransactionSearchList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CommerceTransaction'
    CommercePayoutSearch:
      title: CommercePayoutSearch
      type: object
      properties:
        ids:
          type: array
          minItems: 1
          maxItems: 100
          description: List of upto 100 commerce payout IDs for which to fetch data
          items:
            type: string
            format: uuid
      required:
        - ids
    CommercePayoutSearchList:
      title: CommercePayoutSearchList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CommercePayout'
    CommerceBalanceSearch:
      title: CommerceBalanceSearch
      type: object
      properties:
        ids:
          type: array
          minItems: 1
          maxItems: 100
          description: List of upto 100 commerce balance IDs for which to fetch data
          items:
            type: string
            format: uuid
      required:
        - ids
    CommerceBalanceSearchList:
      title: CommerceBalanceSearchList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CommerceBalance'
    PublishContentRequest:
      allOf:
        - type: object
          properties:
            account_id:
              type: string
              description: Unique ID of the account.
              format: uuid
          required:
            - account_id
        - $ref: '#/components/schemas/PublishContent'
      title: PublishContentRequest
      x-examples:
        Example:
          account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
          title: string
          description: string
          type: TWEET
          visibility: PUBLIC
          retry: false
          additional_info:
            share_to_feed: false
          media:
            - media_type: IMAGE
              source_media_url: 'http://example.com'
              source_thumbnail_url: 'http://example.com'
              thumbnail_offset: 0
              additional_info: {}
      description: ''
    PublishContent:
      type: object
      x-examples:
        Example:
          title: string
          type: TWEET
          description: string
          visibility: PUBLIC
          retry: true
          additional_info:
            share_to_feed: false
          media:
            - media_type: IMAGE
              source_media_url: 'http://example.com'
              source_thumbnail_url: 'http://example.com'
              thumbnail_offset: 0
              additional_info: {}
      title: PublishContent
      required:
        - type
      properties:
        title:
          type: string
          description: Title of the post (put the entire text here for tweets).
        description:
          type: string
          description: Description for the post being published. Supports HTML for certain platforms (eg. YouTube).
        type:
          type: string
          enum:
            - TWEET
            - REELS
            - VIDEO
            - IMAGE
            - BLOG
            - THREAD
            - POST
            - PODCAST
            - TRACK
            - STREAM
            - FEED
            - SHORTS
          description: Platform specific content type of the post being published.
        visibility:
          type: string
          enum:
            - PUBLIC
            - PRIVATE
            - UNLISTED
          description: Visibility of the post.
          default: PUBLIC
        retry:
          type: boolean
          description: Whether   should retry posting the content in case of any technical failures. Our retry mechanism and policies are defined on our publishing content guide.
          default: false
        additional_info:
          type: object
          description: Platform specific fields come here.
          properties:
            share_to_feed:
              type: boolean
              description: Mandatory for Instagram. Whether you want to share the video only to Reels section or Reels + Feed section.
              default: false
        media:
          type: array
          description: List of media items to be published.
          items:
            $ref: '#/components/schemas/PublishContentMedia'
    PublishContentMedia:
      type: object
      x-examples:
        Example:
          media_type: IMAGE
          source_media_url: 'http://example.com'
          source_thumbnail_url: 'http://example.com'
          thumbnail_offset: 0
          additional_info: {}
      title: PublishContentMedia
      description: Media object to be published.
      properties:
        media_type:
          type: string
          enum:
            - IMAGE
            - VIDEO
          description: Media type of the media item being published.
        source_media_url:
          type: string
          format: uri
          description: Publicly accessible URL for the media to be uploaded.
        source_thumbnail_url:
          type: string
          format: uri
          description: Publicly accessible image URL to be used as the thumbnail to be uploaded.
        thumbnail_offset:
          type: integer
          description: Time offset in milliseconds within the video for the frame that should be used as the thumbnail (Instagram only).
          default: 0
        additional_info:
          type: object
          description: Platform specific fields come here.
      required:
        - media_type
        - source_media_url
    PublishContentResponse:
      type: object
      x-examples:
        Example:
          data:
            id: string
            user:
              id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
              name: John Doe
            account:
              id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
              platform_username: john.doe@gmail.com
            work_platform:
              id: 179a0bb4-c572-4477-9457-7dacf1b84848
              name: Instagram
              logo_url: 'https://insightiq.ai/storage/instagram.png'
              created_at: '2020-03-27T12:56:34.534978'
              updated_at: '2020-03-27T12:56:34.534978'
              category: MEDIA
              status: ACTIVE
              url: 'https://www.instagram.com'
              products:
                identity:
                  is_supported: true
                  audience:
                    is_supported: true
                engagement:
                  is_supported: true
                  audience:
                    is_supported: true
                income:
                  is_supported: true
                switch:
                  is_supported: true
            status: string
            format: string
            published_info:
              content_id: string
              url: string
              media_url: string
              thumbnail_url: string
              published_at: string
              platform_content_id: string
            title: string
            type: TWEET
            description: string
            visibility: PUBLIC
            retry: true
            additional_info:
              share_to_feed: false
            media:
              - media_type: IMAGE
                source_media_url: 'http://example.com'
                source_thumbnail_url: 'http://example.com'
                thumbnail_offset: 0
                additional_info: {}
          platform_error:
            type: string
            error_code: string
            message: string
      title: PublishContentResponse
      properties:
        data:
          allOf:
            - type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: Unique ID for the publishing request.
                user:
                  $ref: '#/components/schemas/UserAttribute'
                account:
                  $ref: '#/components/schemas/AccountAttribute'
                work_platform:
                  $ref: '#/components/schemas/WorkPlatformAttribute'
                status:
                  type: string
                  description: Status of the publishing request.
                  enum:
                    - READY
                    - SUCCESS
                    - FAILURE
                    - IN_PROGRESS
                format:
                  type: string
                  enum:
                    - VIDEO
                    - AUDIO
                    - IMAGE
                    - TEXT
                    - COLLECTION
                  description: Media type of the content being published.
                published_info:
                  type: object
                  description: Info of the published content item.
                  properties:
                    content_id:
                      type: string
                      description: Unique ID of the published content item.
                    url:
                      type: string
                      format: uri
                      description: Platform content URL.
                    media_url:
                      type: string
                      format: uri
                      description: 'Direct media URL of the content item, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.'
                      nullable: true
                    thumbnail_url:
                      type: string
                      format: uri
                      description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.'
                    published_at:
                      type: string
                      format: date-time
                      description: Publishing timestamp of the content item.
                    platform_content_id:
                      type: string
                      description: Unique content ID on the platform.
                  required:
                    - content_id
                    - url
                    - media_url
                    - thumbnail_url
                    - published_at
                    - platform_content_id
              required:
                - id
                - user
                - account
                - work_platform
                - status
                - format
            - $ref: '#/components/schemas/PublishContent'
        platform_error:
          $ref: '#/components/schemas/PlatformError'
    PlatformError:
      type: object
      x-examples:
        Example 1:
          type: INVALID_REQUEST_PARAMETERS
          error_code: INVALID_MEDIA_FORMAT
          message: Image cannot be a GIF.
      title: PlatformError
      description: Error from the platform while trying to publish content item.
      properties:
        type:
          type: string
          description: Type of the error.
          example: INVALID_REQUEST_PARAMETERS
        error_code:
          type: string
          description: Code of the error.
          example: INVALID_MEDIA_FORMAT
        message:
          type: string
          description: Message of the error.
          example: Image cannot be a GIF.
      required:
        - type
        - error_code
        - message
    ActivityArtist:
      title: ActivityArtist
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the artist.
        created_at:
          type: string
          description: Object creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Object updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        platform_artist_id:
          type: string
          description: Unique artist ID given by the source platform.
        image_url:
          type: string
          format: uri
          description: Image URL of the artist on the platform.
          nullable: true
        artist_name:
          type: string
          description: Artist's name on the platform.
        artist_url:
          type: string
          format: uri
          description: URL of the artist's page/profile on the platform.
          nullable: true
        genre:
          type: array
          description: List of genres that the artist is categorised into by the work platform.
          items:
            type: string
        activity_type:
          type: string
          enum:
            - FOLLOWED
            - TOP
          description: Whether the artist is in the `TOP` artists of the user (as defined by the work platform) or is `FOLLOWED` by the user.
      required:
        - id
        - created_at
        - updated_at
        - user
        - account
        - work_platform
        - platform_artist_id
        - artist_name
        - activity_type
    ActivityArtistList:
      title: ActivityArtistList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ActivityArtist'
        metadata:
          $ref: '#/components/schemas/Metadata'
    ActivityContent:
      type: object
      title: ActivityContent
      properties:
        id:
          type: string
          description: Unique ID of the content item.
          example: cfcc6603-1d8f-47d9-926a-4b91cc143105
          format: uuid
        created_at:
          type: string
          description: Object creation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        updated_at:
          type: string
          description: Object updation time (UTC date and time in ISO 8601 format)
          example: '2020-03-27T12:56:34.534978'
          format: date-time
        user:
          $ref: '#/components/schemas/UserAttribute'
        account:
          $ref: '#/components/schemas/AccountAttribute'
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        platform_content_id:
          type: string
          description: Unique content ID on the platform.
          example: 12ccaf87
        title:
          type: string
          description: Title of the content item.
          example: USA Tours
        format:
          type: string
          description: Media type of the content item.
          enum:
            - VIDEO
            - IMAGE
            - AUDIO
            - TEXT
            - OTHER
          example: VIDEO
        type:
          type: string
          description: Platform specific content type.
          enum:
            - VIDEO
            - POST
            - STORY
            - TWEET
            - BLOG
            - IMAGE
            - THREAD
            - PODCAST
            - TRACK
            - OTHER
            - REELS
            - STREAM
            - FEED
            - IGTV
          example: VIDEO
        url:
          type: string
          description: Platform content URL.
          example: 'https://youtu.be/jzWweY4xPe8'
          format: uri
        description:
          type: string
          description: Description of the content item.
          example: US tours video.
        thumbnail_url:
          type: string
          example: 'https://youtu.be/jzWweY4xPe8.png'
          format: uri
          description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.'
        embed_url:
          type: string
          example: 'https://youtu.be/jzWweY4xPe8.png'
          format: uri
          description: 'Embed URL of the content item, which can be used to embed the media item.'
        activity_type:
          type: string
          enum:
            - TOP
            - RECENT
            - SAVED
          description: Whether the media content is in the `TOP` contents of the user (as defined by the work platform) or is `SAVED` by the user or was a `RECENT` media played by the user.
        additional_info:
          type: object
          description: Platform or `type` specific content related fields.
          properties:
            genre:
              type: array
              description: List of genres that the content is categorised into by the platform.
              items:
                type: string
            artists:
              type: array
              description: List of artist names associated with the content.
              items:
                type: string
            album:
              type: string
              description: Name of the album that the track belongs to.
      required:
        - id
        - created_at
        - updated_at
        - platform_content_id
        - title
        - type
        - url
        - activity_type
    ActivityContentList:
      title: ActivityContentList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ActivityContent'
        metadata:
          $ref: '#/components/schemas/Metadata'
    CreatorSearchRequest:
      type: object
      x-examples:
        Example 1:
          work_platform_id: ''
          follower_count:
            min: 0
            max: 100
          content_count:
            min: 0
            max: 100
          audience_gender:
            type: FEMALE
            operator: LT/GT
            percentage_value: 50
          creator_gender: FEMALE
          audience_age:
            min: 0
            max: 100
            percentage_value: 25
          creator_age:
            min: 0
            max: 100
          description_keywords:
            - keyword1 for bio
            - keyword2 for bio
          is_verified: false
          has_contact_details: false
          last_post_timestamp: '2022-12-21T00:00:00.000000'
          audience_language:
            code: en
            percentage_value: '50'
          creator_language:
            code: en
          audience_interests:
            - cycling
            - fitness
          creator_interests:
            - cycling
            - fitness
          audience_brand_affinities:
            - cult.fit
          creator_brand_affinities:
            - cult.fit
          average_likes:
            min: 0
            max: 100
          average_views:
            min: 0
            max: 100
          engagement_rate:
            percentage_value: '2.5'
          has_sponsored_posts: false
          brand_sponsors:
            - cult.fit
          instagram_options:
            reel_views:
              min: 0
              max: 100
          audience_location:
            - bangalore
          follower_growth:
            interval: 1
            interval_unit: MONTH
            operator: LT/GT
            percentage_value: 50
          bio_phrase: exact phrase
          audience_lookalikes: '@hrithik'
          creator_lookalikes: '@hrithik'
          account_type: CREATOR
          sort_by:
            field: ATTRIBUTE_NAME
            order: DESCENDING
          limit: 1000
          offset: 0
      title: CreatorSearchRequest
      required:
        - work_platform_id
        - sort_by
      properties:
        work_platform_id:
          type: string
          description: Target platform to search public profiles on
        follower_count:
          type: object
          description: Filter profiles by follower count
          properties:
            min:
              type: integer
              description: Minimum followers
            max:
              type: integer
              description: Maximum followers
        subscriber_count:
          type: object
          description: Filter profiles by subscriber count
          properties:
            min:
              type: integer
              description: Minimum subscribers
            max:
              type: integer
              description: Maximum subscribers
        content_count:
          type: object
          description: Filter profiles by content count
          properties:
            min:
              type: integer
              description: Minimum number of contents
            max:
              type: integer
              description: Maximum number of contents
        audience_gender:
          type: object
          description: Filter profiles by audience gender
          required:
            - type
            - operator
            - percentage_value
          properties:
            type:
              type: string
              description: 'Gender type: `ANY`, `FEMALE`, `MALE`'
              enum:
                - ANY
                - FEMALE
                - MALE
            operator:
              type: string
              enum:
                - GT
              description: 'Comparison operator, required if the gender is not `ANY`'
            percentage_value:
              type: integer
              description: Percentage value for the comparison
        creator_gender:
          type: string
          enum:
            - ANY
            - FEMALE
            - GENDER_NEUTRAL
            - MALE
            - ORGANIZATION
            - MALE_OR_FEMALE
          description: |-
            Filter profiles on the basis of the gender of the creator.
            `ORGANIZATION` is only valid for Twitch platform
        audience_age:
          type: object
          description: Filter profiles by audience age
          properties:
            min:
              type: integer
              description: Minimum age of audience
            max:
              type: integer
              description: Maximum age of audience
            percentage_value:
              type: integer
              maximum: 100
              minimum: 0
              example: 25
              description: Filter by percentage of audience in the given age range
              x-stoplight:
                id: x0swjtdldpetw
        creator_age:
          type: object
          description: Filter profiles by creator age
          properties:
            min:
              type: integer
              description: Minimum age of creator
            max:
              type: integer
              description: Maximum age of creator
        description_keywords:
          type: string
          description: Filter profiles by a list of keywords that can be found in profile bio/introduction/description/phrases in the video or captions for YouTube.
        is_verified:
          type: boolean
          description: Filter profiles by platform verification status
        has_contact_details:
          type: boolean
          description: Filter profiles by availability of contact details
        specific_contact_details:
          type: array
          description: Contact information
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - BBM
                  - EMAIL
                  - FACEBOOK
                  - INSTAGRAM
                  - ITUNES
                  - KAKAO
                  - KIK
                  - LINEID
                  - LINKTREE
                  - PHONE
                  - PINTEREST
                  - SARAHAH
                  - SAYAT
                  - SKYPE
                  - SNAPCHAT
                  - TELEGRAM
                  - TIKTOK
                  - TUMBLR
                  - TWITCHTV
                  - TWITTER
                  - VIBER
                  - VK
                  - WECHAT
                  - WEIBO
                  - WHATSAPP
                  - YOUTUBE
              preference:
                type: string
                enum:
                  - MUST_HAVE
                  - SHOULD_HAVE
                default: SHOULD_HAVE
        last_post_timestamp:
          type: string
          description: Filter profiles by the timestamp (ISO 8601) of last post
          format: date-time
          example: '2019-08-24T14:15:22'
        audience_language:
          type: array
          description: 'Filter profiles by audience''s language, checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1languages/get). You may also refer the "languages" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
          items:
            type: object
            description: Filter profiles by audience's language
            required:
              - code
              - percentage_value
            properties:
              code:
                type: string
                description: 2 letter language code as per ISO 639-1
              percentage_value:
                type: string
                description: 'Percentage value for the comparison, which would always be a "greater than or equal to" comparison'
        creator_language:
          type: object
          description: 'Filter profiles by creator''s language, checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1languages/get). You may also refer the "languages" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
          properties:
            code:
              type: string
              description: 2 letter language code as per ISO 639-1
        audience_interests:
          type: array
          description: 'List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1interests/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
          items:
            type: string
        audience_interest_affinities:
          type: array
          description: Audience interest affinities
          items:
            type: object
            properties:
              value:
                type: string
                description: 'Name of the '
              operation:
                type: string
                enum:
                  - GT
                description: Name of the operation
              percentage_value:
                type: string
                description: Percentage value
        creator_interests:
          type: array
          description: 'List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1interests/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
          items:
            type: string
        audience_brand_affinities:
          type: array
          description: 'List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1brands/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
          items:
            type: string
        creator_brand_affinities:
          type: array
          description: 'List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1brands/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
          items:
            type: string
        average_likes:
          type: object
          description: Filter profiles by average likes
          properties:
            min:
              type: integer
              description: Minimum average likes of creator
            max:
              type: integer
              description: Maximum average likes of creator
        average_views:
          type: object
          description: Filter profiles by average views
          properties:
            min:
              type: integer
              description: Minimum average views of creator
            max:
              type: integer
              description: Maximum average views of creator
        engagement_rate:
          type: object
          description: Filter profiles by engagement rates
          required:
            - percentage_value
          properties:
            percentage_value:
              type: string
              description: 'Percentage value for the comparison, which would always be a "greater than or equal to" comparison'
        has_sponsored_posts:
          type: boolean
          description: Filter profiles which have sponsored posts. Only for Instagram.
        brand_sponsors:
          type: array
          description: 'Filter profiles which have been sponsored by certain brands, which will return creators who match even 1 of these brands. Only for Instagram.'
          items:
            type: string
        instagram_options:
          type: object
          properties:
            reel_views:
              type: object
              description: Filter profiles by average reels views
              properties:
                min:
                  type: integer
                  description: Minimum average reels views of creator
                max:
                  type: integer
                  description: Maximum average reels views of creator
        audience_locations:
          type: array
          description: 'InsightIQ''s location identifers to be passed to this attribute. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1locations/get) to know the identifier for the location filter of your choice.'
          items:
            type: object
            properties:
              location_id:
                type: string
                format: uuid
                description: InsightIQ's location identifier
              percentage_value:
                type: number
                description: Percentage value for the comparison
              operator:
                type: string
                description: Comparison operator
                enum:
                  - GT
                default: GT
        creator_locations:
          type: array
          description: 'InsightIQ''s location identifers to be passed to this attribute. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1locations/get) to know the identifier for the location filter of your choice.'
          items:
            type: string
            format: uuid
        follower_growth:
          type: object
          description: Filter profiles by follower growth rate
          required:
            - interval
            - interval_unit
            - operator
            - percentage_value
          properties:
            interval:
              type: integer
              description: Time interval of growth
            interval_unit:
              type: string
              description: Unit of time interval
              enum:
                - MONTH
            operator:
              type: string
              description: Comparison operator
              enum:
                - GT
            percentage_value:
              type: integer
              description: Percentage value for the comparison
        subscriber_growth:
          type: object
          description: Filter profiles by subscriber growth rate
          required:
            - interval
            - interval_unit
            - operator
            - percentage_value
          properties:
            interval:
              type: integer
              description: Time interval of growth
            interval_unit:
              type: string
              description: Unit of time interval
              enum:
                - MONTH
            operator:
              type: string
              description: Comparison operator
              enum:
                - GT
            percentage_value:
              type: integer
              description: Percentage value for the comparison
        bio_phrase:
          type: string
          description: Filter profiles by the phrase they use in their bio
        hashtags:
          type: array
          description: Filter profiles by hashtags.
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: 'Please provide hashtags without # prefix'
        mentions:
          type: array
          description: Filter profiles by mentions.
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: ' Please provide mentions without @ prefix'
        topic_relevance:
          type: object
          description: 'Filter profiles by '
          properties:
            name:
              type: array
              description: Pass the topic name.
              items:
                type: string
            weight:
              type: number
              default: 0.5
            threshold:
              type: number
              default: 0.55
        audience_lookalikes:
          type: string
          description: Filter profiles whose posts look like the given handle/username. Please pass the social handle without the preceding @.
        platform_account_type:
          type: string
          enum:
            - ANY
            - BUSINESS
            - CREATOR
            - PERSONAL
            - PARTNERS
            - AFFILIATES
            - 'NULL'
          description: Filter profiles by account type
        creator_account_type:
          type: array
          description: Filter profiles by creator account type
          items:
            type: string
            enum:
              - ANY
              - PERSONAL
              - BUSINESS
              - CREATOR
        creator_lookalikes:
          type: string
          description: Filter profiles whose posts look like the given handle/username. Please pass the social handle with the preceding @.
        audience_location:
          type: array
          description: Avoid using this filter. Use the audience_locations filter instead.
          items:
            type: object
            deprecated: true
            properties:
              name:
                type: string
                description: Name of the location
              percentage_value:
                type: integer
                description: Percentage value for the comparison
              operator:
                type: string
                description: Comparsion operator.
                enum:
                  - GT
                default: GT
        sort_by:
          type: object
          description: Sorting order for the search results
          required:
            - field
            - order
          properties:
            field:
              type: string
              description: Field to sort by.
              enum:
                - AVERAGE_LIKES
                - FOLLOWER_COUNT
                - ENGAGEMENT_RATE
                - DESCRIPTION
                - AVERAGE_VIEWS
                - CONTENT_COUNT
                - REELS_VIEWS
                - FOLLOWER_GROWTH
                - TOTAL_VIEWS_GROWTH
                - TOTAL_LIKES_GROWTH
                - AUDIENCE_LOCATIONS
                - AUDIENCE_LANGUAGE
                - AUDIENCE_BRAND_AFFINITIES
                - AUDIENCE_INTERESTS
                - AUDIENCE_AGE
                - CREATOR_LOOKALIKES
                - AUDIENCE_LOOKALIKES
                - AVERAGE_LIKE
                - AUDIENCE_LOCATION
                - TOPIC_RELEVANCE
                - PEAK_VIEWERS
                - AVG_CONCURRENT_VIEWERS
                - AIRTIME
                - HOURS_WATCHED
            order:
              type: string
              enum:
                - DESCENDING
              description: Ordering pattern
        limit:
          type: integer
          description: The number of search results to be returned. It can be between 1 to 100. The default value is 10. Limit + offset should be less than 500.
          default: 10
          maximum: 500
        offset:
          type: integer
          description: The number of search results to skip. Use this argument for pagination. The default value is 0. Limit + offset should be less than 500.
          default: 0
        audience_source:
          type: string
          enum:
            - ANY
            - LIKERS
            - FOLLOWERS
            - COMMENTERS
          default: LIKERS
          description: Filter profiles by source of the audience data
        total_engagements:
          type: object
          description: Filter profiles by total number of engagements
          properties:
            min:
              type: integer
            max:
              type: integer
        audience_credibility_category:
          type: array
          description: 'Filter profiles according to the given credibility categories given '
          items:
            type: string
            enum:
              - BAD
              - LOW
              - NORMAL
              - HIGH
              - EXCELLENT
        audience_credibility_score:
          type: number
          description: Filter profiles according to the given credibility score or higher
          minimum: 0
          maximum: 1
        is_official_artist:
          type: boolean
          default: false
          description: Filter YouTube profiles which are official artists
        has_audience_info:
          type: boolean
          default: false
          description: Fetches only profiles with audience info
        share_count:
          type: object
          description: Filter TikTok profiles by count of shares
          properties:
            min:
              type: integer
            max:
              type: integer
        save_count:
          type: object
          description: Filter TikTok profiles by count of saves
          properties:
            min:
              type: integer
            max:
              type: integer
        exclude_private_profiles:
          type: boolean
          default: false
          description: Get only private profiles
        creator_age_bracket:
          enum:
            - OVER_18
            - OVER_21
          description: Only for Twitch
        livestream_options:
          type: object
          description: Only for Twitch
          properties:
            recent_activity:
              type: string
              format: uri
              description: 'Game/Category slug on Twitch. For example: if you want to search for League of Legends, the Twitch category link is https://www.twitch.tv/directory/category/league-of-legends. You should input ''league-of-legends'' for this.'
            category:
              enum:
                - IRL
                - GAMING
                - ESPORTS
                - SPORTS
                - MUSIC
                - SLOTS
                - CHESS
            categories_streamed:
              enum:
                - 1
                - 2-5
                - 6-10
                - 11-25
                - 25-1000
            hours_watched:
              type: object
              properties:
                min:
                  type: integer
                max:
                  type: integer
                over_100_percent_growth:
                  type: boolean
            average_concurrent_viewers:
              type: object
              properties:
                min:
                  type: integer
                max:
                  type: integer
                over_100_percent_growth:
                  type: boolean
            absolute_follower_growth:
              type: object
              properties:
                min:
                  type: integer
                max:
                  type: integer
                over_100_percent_growth:
                  type: boolean
            peak_viewers:
              type: object
              properties:
                min:
                  type: integer
                max:
                  type: integer
            vtubers:
              type: object
              properties:
                only_vtubers:
                  type: boolean
                affiliation:
                  enum:
                    - INDEPENDENT
                    - VSHOJO
                    - HOLOLIVE
                    - NIJISANJI
                    - NANASHINKU_774
        post_type:
          x-stoplight:
            id: nvcpxvgv2c37r
          enum:
            - ALL (default)
            - VIDEOS
            - SHORTS
            - STREAMS
          description: 'This filter is only applicable to YouTube. For other platforms, it will be ignored. '
    AsyncCreatorSearchRequest:
      type: object
      x-examples:
        Example 1:
          work_platform_id: ''
          follower_count:
            min: 0
            max: 100
          content_count:
            min: 0
            max: 100
          audience_gender:
            type: FEMALE
            operator: LT/GT
            percentage_value: 50
          creator_gender: FEMALE
          audience_age:
            min: 0
            max: 100
            percentage_value: 25
          creator_age:
            min: 0
            max: 100
          description_keywords:
            - keyword1 for bio
            - keyword2 for bio
          is_verified: false
          has_contact_details: false
          last_post_timestamp: '2022-12-21T00:00:00.000000'
          audience_language:
            code: en
            percentage_value: '50'
          creator_language:
            code: en
          audience_interests:
            - cycling
            - fitness
          creator_interests:
            - cycling
            - fitness
          audience_brand_affinities:
            - cult.fit
          creator_brand_affinities:
            - cult.fit
          average_likes:
            min: 0
            max: 100
          average_views:
            min: 0
            max: 100
          engagement_rate:
            percentage_value: '2.5'
          has_sponsored_posts: false
          brand_sponsors:
            - cult.fit
          instagram_options:
            reel_views:
              min: 0
              max: 100
          audience_location:
            - bangalore
          creator_location:
            - bangalore
          follower_growth:
            interval: 1
            interval_unit: MONTH
            operator: LT/GT
            percentage_value: 50
          bio_phrase: exact phrase
          audience_lookalikes: '@hrithik'
          creator_lookalikes: '@hrithik'
          account_type: CREATOR
          sort_by:
            field: ATTRIBUTE_NAME
            order: DESCENDING
          limit: 1000
          offset: 0
      title: AsyncCreatorSearchRequest
      required:
        - work_platform_id
        - sort_by
        - max_results
      properties:
        work_platform_id:
          type: string
          description: Target platform to search public profiles on
        follower_count:
          type: object
          description: Filter profiles by follower count
          properties:
            min:
              type: integer
              description: Minimum followers
            max:
              type: integer
              description: Maximum followers
        subscriber_count:
          type: object
          description: Filter profiles by subscriber count
          properties:
            min:
              type: integer
              description: Minimum subscribers
            max:
              type: integer
              description: Maximum subscribers
        content_count:
          type: object
          description: Filter profiles by content count
          properties:
            min:
              type: integer
              description: Minimum number of contents
            max:
              type: integer
              description: Maximum number of contents
        audience_gender:
          type: object
          description: Filter profiles by audience gender
          required:
            - type
            - operator
            - percentage_value
          properties:
            type:
              type: string
              description: 'Gender type: `ANY`, `FEMALE`, `MALE`'
              enum:
                - ANY
                - FEMALE
                - MALE
            operator:
              type: string
              enum:
                - GT
              description: 'Comparison operator, required if the gender is not `ANY`'
            percentage_value:
              type: integer
              description: Percentage value for the comparison
        creator_gender:
          type: string
          enum:
            - ANY
            - FEMALE
            - GENDER_NEUTRAL
            - MALE
            - MALE_OR_FEMALE
          description: Filter profiles by gender of the creator
        audience_age:
          type: object
          description: Filter profiles by audience age
          properties:
            min:
              type: integer
              description: Minimum age of audience
            max:
              type: integer
              description: Maximum age of audience
            percentage:
              type: integer
              maximum: 100
              minimum: 0
              example: 25
              description: Filter by percentage of audience in the given age range
        creator_age:
          type: object
          description: Filter profiles by creator age
          properties:
            min:
              type: integer
              description: Minimum age of creator
            max:
              type: integer
              description: Maximum age of creator
        description_keywords:
          type: string
          description: Filter profiles by a list of keywords that can be found in profile bio/introduction/description/phrases in the video or captions for YouTube.
        is_verified:
          type: boolean
          description: Filter profiles by platform verification status
        has_contact_details:
          type: boolean
          description: Filter profiles by availability of contact details
        specific_contact_details:
          type: array
          description: Contact information
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - BBM
                  - EMAIL
                  - FACEBOOK
                  - INSTAGRAM
                  - ITUNES
                  - KAKAO
                  - KIK
                  - LINEID
                  - LINKTREE
                  - PHONE
                  - PINTEREST
                  - SARAHAH
                  - SAYAT
                  - SKYPE
                  - SNAPCHAT
                  - TELEGRAM
                  - TIKTOK
                  - TUMBLR
                  - TWITCHTV
                  - TWITTER
                  - VIBER
                  - VK
                  - WECHAT
                  - WEIBO
                  - WHATSAPP
                  - YOUTUBE
              preference:
                type: string
                enum:
                  - MUST_HAVE
                  - SHOULD_HAVE
                default: SHOULD_HAVE
        last_post_timestamp:
          type: string
          description: Filter profiles by the timestamp (ISO 8601) of last post
          format: date-time
          example: '2019-08-24T14:15:22'
        audience_language:
          type: array
          description: 'Filter profiles by audience''s language, checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1languages/get). You may also refer the "languages" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
          items:
            type: object
            description: Filter profiles by audience's language
            required:
              - code
              - percentage_value
            properties:
              code:
                type: string
                description: 2 letter language code as per ISO 639-1
              percentage_value:
                type: string
                description: 'Percentage value for the comparison, which would always be a "greater than or equal to" comparison'
        creator_language:
          type: object
          description: 'Filter profiles by creator''s language, checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1languages/get). You may also refer the "languages" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
          properties:
            code:
              type: string
              description: 2 letter language code as per ISO 639-1
        audience_interests:
          type: array
          description: 'List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1interests/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
          items:
            type: string
        audience_interest_affinities:
          type: array
          description: Audience interest affinities
          items:
            type: object
            properties:
              value:
                type: string
                description: 'Name of the '
              operation:
                type: string
                enum:
                  - GT
                description: Name of the operation
              percentage_value:
                type: string
                description: Percentage value
        creator_interests:
          type: array
          description: 'List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1interests/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
          items:
            type: string
        audience_brand_affinities:
          type: array
          description: 'List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1brands/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
          items:
            type: string
        creator_brand_affinities:
          type: array
          description: 'List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1brands/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
          items:
            type: string
        average_likes:
          type: object
          description: Filter profiles by average likes
          properties:
            min:
              type: integer
              description: Minimum average likes of creator
            max:
              type: integer
              description: Maximum average likes of creator
        average_views:
          type: object
          description: Filter profiles by average views
          properties:
            min:
              type: integer
              description: Minimum average views of creator
            max:
              type: integer
              description: Maximum average views of creator
        engagement_rate:
          type: object
          description: Filter profiles by engagement rates
          required:
            - percentage_value
          properties:
            percentage_value:
              type: string
              description: 'Percentage value for the comparison, which would always be a "greater than or equal to" comparison'
        has_sponsored_posts:
          type: boolean
          description: Filter profiles which have sponsored posts. Only for Instagram.
        brand_sponsors:
          type: array
          description: 'Filter profiles which have been sponsored by certain brands, which will return creators who match even 1 of these brands. Only for Instagram.'
          items:
            type: string
        instagram_options:
          type: object
          properties:
            reel_views:
              type: object
              description: Filter profiles by average reels views
              properties:
                min:
                  type: integer
                  description: Minimum average reels views of creator
                max:
                  type: integer
                  description: Maximum average reels views of creator
        audience_locations:
          type: array
          description: 'InsightIQ''s location identifers to be passed to this attribute. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1locations/get) to know the identifier for the location filter of your choice.'
          items:
            type: object
            properties:
              location_id:
                type: string
                format: uuid
                description: InsightIQ's location identifier
              percentage_value:
                type: number
                description: Percentage value for the comparison
              operator:
                type: string
                description: Comparison operator
                enum:
                  - GT
                default: GT
        creator_locations:
          type: array
          description: 'InsightIQ''s location identifers to be passed to this attribute. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1locations/get) to know the identifier for the location filter of your choice.'
          items:
            type: string
            format: uuid
        follower_growth:
          type: object
          description: Filter profiles by follower growth rate
          required:
            - interval
            - interval_unit
            - operator
            - percentage_value
          properties:
            interval:
              type: integer
              description: Time interval of growth
            interval_unit:
              type: string
              description: Unit of time interval
              enum:
                - MONTH
            operator:
              type: string
              description: Comparison operator
              enum:
                - GT
            percentage_value:
              type: integer
              description: Percentage value for the comparison
        subscriber_growth:
          type: object
          description: Filter profiles by subscriber growth rate
          required:
            - interval
            - interval_unit
            - operator
            - percentage_value
          properties:
            interval:
              type: integer
              description: Time interval of growth
            interval_unit:
              type: string
              description: Unit of time interval
              enum:
                - MONTH
            operator:
              type: string
              description: Comparison operator
              enum:
                - GT
            percentage_value:
              type: integer
              description: Percentage value for the comparison
        bio_phrase:
          type: string
          description: Filter profiles by the phrase they use in their bio
        hashtags:
          type: array
          description: Filter profiles by hashtags.
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: ' Please provide hashtags without # prefix'
        mentions:
          type: array
          description: Filter profiles by mentions. Please provide mentions without @ prefix
          items:
            type: object
            required:
              - ''
            properties:
              '':
                type: string
                description: Please provide mentions without @ prefix
        topic_relevance:
          type: object
          description: 'Filter profiles by '
          properties:
            name:
              type: array
              description: Pass the topic name.
              items:
                type: string
            weight:
              type: number
              default: 0.5
            threshold:
              type: number
              default: 0.55
        audience_lookalikes:
          type: string
          description: Filter profiles whose audience looks like the given handle/username
        platform_account_type:
          type: string
          enum:
            - ANY
            - BUSINESS
            - CREATOR
            - PERSONAL
          description: Filter profiles by account type
        creator_account_type:
          type: array
          enum:
            - ANY
            - BUSINESS
            - CREATOR
            - PERSONAL
          description: Filter profiles by creator account type
          items:
            type: string
            enum:
              - PERSONAL
              - BUSINESS
              - CREATOR
        creator_lookalikes:
          type: string
          description: Filter profiles whose posts look like the given handle/username
        creator_location:
          type: array
          description: Avoid using this filter. Use the creator_locations filter instead.
          items:
            type: string
            deprecated: true
        audience_location:
          type: array
          description: Avoid using this filter. Use the audience_locations filter instead.
          items:
            type: object
            deprecated: true
            properties:
              name:
                type: string
                description: Name of the location
              percentage_value:
                type: integer
                description: Percentage value for the comparison
              operator:
                type: string
                description: Comparsion operator.
                enum:
                  - GT
                default: GT
        sort_by:
          type: object
          description: Sorting order for the search results
          required:
            - field
            - order
          properties:
            field:
              type: string
              description: Field to sort by.
              enum:
                - AVERAGE_LIKES
                - FOLLOWER_COUNT
                - ENGAGEMENT_RATE
                - DESCRIPTION
                - AVERAGE_VIEWS
                - CONTENT_COUNT
                - REELS_VIEWS
                - FOLLOWER_GROWTH
                - TOTAL_VIEWS_GROWTH
                - TOTAL_LIKES_GROWTH
                - AUDIENCE_LOCATIONS
                - AUDIENCE_LANGUAGE
                - AUDIENCE_BRAND_AFFINITIES
                - AUDIENCE_INTERESTS
                - AUDIENCE_AGE
                - CREATOR_LOOKALIKES
                - AUDIENCE_LOOKALIKES
                - AVERAGE_LIKE
                - AUDIENCE_LOCATION
                - TOPIC_RELEVANCE
            order:
              type: string
              enum:
                - DESCENDING
              description: Ordering pattern
        max_results:
          type: integer
          description: 'Maximum number of search results '
        audience_ethnicity:
          type: object
          description: Filter profiles by ethnicity of the audience
          properties:
            type:
              type: string
              enum:
                - ANY
                - MALE
                - FEMALE
            operator:
              type: string
              enum:
                - GT
            percentage_value:
              type: number
        views_growth:
          type: object
          description: Filter profiles by views growth rate
          properties:
            interval:
              type: integer
              minimum: 1
              maximum: 6
            interval_unit:
              type: string
              enum:
                - month
            operator:
              type: string
              enum:
                - LT
            percentage_value:
              type: number
        audience_source:
          type: string
          enum:
            - ANY
            - LIKERS
            - FOLLOWERS
            - COMMENTERS
          default: LIKERS
          description: Filter profiles by source of the audience data
        total_engagements:
          type: object
          description: Filter profiles by total number of engagements
          properties:
            min:
              type: integer
            max:
              type: integer
        audience_credibility_category:
          type: array
          description: Filter profiles according to the given credibility categories given in the array
          items:
            type: string
            enum:
              - BAD
              - LOW
              - NORMAL
              - HIGH
              - EXCELLENT
        post_type:
          x-stoplight:
            id: gn4go9mkpb71m
          enum:
            - ALL (Default)
            - VIDEOS
            - SHORTS
            - STREAMS
          description: 'The value `ALL` is applicable for YouTube, Instagram and Tiktok. Rest are only applicable to YouTube.'
    CreatorSearchResponse:
      type: object
      x-examples:
        Example:
          data:
            - work_platform: {}
              platform_username: ''
              url: ''
              image_url: ''
              full_name: ''
              introduction: ''
              is_verified: false
              platform_account_type: CREATOR
              gender: ''
              age_group: ''
              language: hi
              follower_count: 100
              subscriber_count: 50
              content_count: 123
              engagement_rate: 1.23
              location:
                city: Bangalore
                state: KA
                country: India
              contact_info:
                - type: email
                  value: mail@example.com
          metadata:
            limit: 10
            offset: 0
      title: CreatorSearchResponse
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/CreatorProfileBasicDetails'
              - type: object
                properties:
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  full_name:
                    type: string
                    description: Profile full name on the platform
                  introduction:
                    type: string
                    description: |-
                      Description of the profile. 

                      Ex - For Instagram it's the bio and for YouTube it's the channel introduction.
                  platform_account_type:
                    type: string
                    description: 'Account type of the profile, such as `PERSONAL`, `CREATOR`, `BUSINESS`, etc.'
                    enum:
                      - PERSONAL
                      - CREATOR
                      - BUSINESS
                      - ANY
                  gender:
                    type: string
                    description: Gender of the profile
                  age_group:
                    type: string
                    description: Age group of the profile
                  language:
                    type: string
                    description: '2 letter language code as per ISO 639-1. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1languages/get). You may also refer the "languages" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
                  content_count:
                    type: integer
                    description: Number of contents posted by the profile
                  engagement_rate:
                    type: number
                    description: 'Profile engagement rate, i.e., total likes of all posts divided by the number of followers'
                  average_likes:
                    type: integer
                    description: Average like count of the profile
                  average_views:
                    type: integer
                    description: Average view count of the profile
                  creator_location:
                    type: object
                    description: 'Profile location details. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1locations/get). You may also refer the "locations" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
                    required:
                      - city
                      - state
                      - country
                    properties:
                      city:
                        type: string
                        description: Profile location city
                      state:
                        type: string
                        description: Profile location state
                      country:
                        type: string
                        description: Profile location country
                  filter_match:
                    $ref: '#/components/schemas/FilterMatch'
                  contact_details:
                    type: array
                    description: Publicly available contact information about the profile
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          description: 'Type of contact, for example `phone`, `email`, `twitter`'
                        value:
                          type: string
                          description: Contact info
                      required:
                        - type
                        - value
                required:
                  - work_platform
                  - full_name
                  - introduction
                  - platform_account_type
                  - gender
                  - age_group
                  - language
                  - content_count
                  - engagement_rate
                  - average_likes
                  - average_views
                  - creator_location
                  - contact_details
        metadata:
          type: object
          description: Metadata object representing meta information about resources.
          properties:
            offset:
              type: integer
              default: 0
            limit:
              type: integer
              default: 10
    QuickCreatorSearchResponse:
      type: object
      x-examples:
        Example:
          data:
            - work_platform: {}
              platform_username: ''
              url: ''
              image_url: ''
              full_name: ''
              introduction: ''
              is_verified: false
              platform_account_type: CREATOR
              gender: ''
              age_group: ''
              language: hi
              follower_count: 100
              subscriber_count: 50
              content_count: 123
              engagement_rate: 1.23
              location:
                city: Bangalore
                state: KA
                country: India
              contact_info:
                - type: email
                  value: mail@example.com
          metadata:
            limit: 10
            offset: 0
      title: QuickCreatorSearchResponse
      required:
        - metadata
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/CreatorProfileBasicDetails'
              - type: object
                required:
                  - work_platform
                  - full_name
                  - introduction
                  - platform_account_type
                  - gender
                  - age_group
                  - language
                  - content_count
                  - engagement_rate
                  - location
                properties:
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  full_name:
                    type: string
                    description: Profile full name on the platform
                  introduction:
                    type: string
                    description: |-
                      Description of the profile. 

                      Ex - For Instagram it's the bio and for YouTube it's the channel introduction.
                  platform_account_type:
                    type: string
                    description: 'Account type of the profile, such as `PERSONAL`, `CREATOR`, `BUSINESS`, etc.'
                    enum:
                      - PERSONAL
                      - CREATOR
                      - BUSINESS
                      - PARTNERS
                      - AFFILIATES
                      - 'NULL'
                  gender:
                    type: string
                    description: Gender of the profile
                  age_group:
                    type: string
                    description: Age group of the profile
                  language:
                    type: string
                    description: '2 letter language code as per ISO 639-1. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1languages/get). You may also refer the "languages" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
                  content_count:
                    type: integer
                    description: Number of contents posted by the profile
                  engagement_rate:
                    type: number
                    description: 'Profile engagement rate, i.e., total likes of all posts divided by the number of followers'
                  location:
                    type: object
                    description: 'Profile location details. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1countries/get). You may also refer the "locations" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
                    required:
                      - city
                      - state
                      - country
                    properties:
                      city:
                        type: string
                        description: Profile location city
                      state:
                        type: string
                        description: Profile location state
                      country:
                        type: string
                        description: Profile location country
                  livestream_metrics:
                    type: object
                    description: Only for Twitch
                    properties:
                      recent_activity:
                        type: string
                      hours_watched:
                        type: integer
                      peak_viewers:
                        type: integer
                      average_viewers:
                        type: number
                        format: float
                      airtime:
                        type: integer
                      follower_growth:
                        type: integer
                      total_live_view_count:
                        type: integer
        metadata:
          $ref: '#/components/schemas/Metadata'
    CreatorProfileAnalyticsRequest:
      type: object
      x-examples:
        Example 1:
          identifier: username/handle/url
          work_platform_id: ''
      title: CreatorProfileAnalyticsRequest
      required:
        - identifier
        - work_platform_id
      properties:
        identifier:
          type: string
          description: URL/username/handle of the profile you want to generate a report for
        work_platform_id:
          type: string
          description: Work platform ID for the platform on which you want to search for the profile using the above identifier
        is_premium:
          type: boolean
          description: Only for Twitch
          default: false
    CreatorProfileAnalyticsResponse:
      type: object
      x-examples:
        Example 1:
          id: string
          work_platform:
            id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
            name: Instagram
            logo_url: 'https://insightiq.ai/storage/instagram.png'
          profile:
            platform_username: string
            url: 'http://example.com'
            image_url: 'http://example.com'
            follower_count: 0
            subscriber_count: 0
            is_verified: true
            full_name: string
            introduction: string
            platform_account_type: string
            gender: string
            age_group: string
            language: string
            average_likes: 0
            average_comments: 0
            average_views: 0
            average_reels_views: 0
            engagement_rate: 0
            content_count: 0
            sponsored_posts_performance: 0
            reputation_history:
              - month: string
                follower_count: 0
                subscriber_count: 0
                following_count: 0
                average_likes: 0
            location:
              city: string
              state: string
              country: string
            top_hashtags:
              - name: string
            top_mentions:
              - name: string
            top_interests:
              - name: string
            brand_affinity:
              - name: string
                value: 0
            top_contents:
              - type: VIDEO
                url: 'http://example.com'
                description: string
                thumbnail_url: 'http://example.com'
                engagement:
                  like_count: 0
                  comment_count: 0
                published_at: '2020-03-27T12:56:34.534978'
            recent_contents:
              - type: VIDEO
                url: 'http://example.com'
                description: string
                thumbnail_url: 'http://example.com'
                engagement:
                  like_count: 0
                  comment_count: 0
                published_at: '2020-03-27T12:56:34.534978'
            posts_hidden_likes_percentage_value: 0
            sponsored_contents:
              - type: VIDEO
                url: 'http://example.com'
                description: string
                thumbnail_url: 'http://example.com'
                engagement:
                  like_count: 0
                  comment_count: 0
                published_at: '2020-03-27T12:56:34.534978'
            lookalikes:
              - platform_username: string
                url: 'http://example.com'
                image_url: 'http://example.com'
                follower_count: 0
                subscriber_count: 0
                is_verified: true
            audience:
              ethnicities:
                - name: string
                  value: 0
              languages:
                - code: string
                  value: 0
              brand_affinity:
                - name: string
                  value: 0
              interests:
                - name: string
                  value: 0
              follower_types:
                - name: MASS_FOLLOWERS
                  value: 0
              lookalikes:
                - platform_username: string
                  url: 'http://example.com'
                  image_url: 'http://example.com'
                  follower_count: 0
                  subscriber_count: 0
                  is_verified: true
              credibility_score: 0
              credibility_score_band:
                - min: 0
                  max: string
                  total_profile_count: 0
              significant_followers_percentage: 0
              significant_followers:
                platform_username: string
                url: 'http://example.com'
                image_url: 'http://example.com'
                follower_count: 0
                subscriber_count: 0
                is_verified: true
              countries:
                - code: US
                  value: 78.9
              cities:
                - name: Boulder
                  value: 45.6
              gender_age_distribution:
                - gender: FEMALE
                  age_range: 13-18
                  value: 12.3
            engagement_rate_histogram:
              - engagement_rate_band:
                  min: 0
                  max: 0
                  '': true
            audience_likes:
              - credibility:
                  min: 0
                  max: 0
                  total_profile_count: 0
            audience_likers:
              countries:
                - code: string
                  value: 0
              cities:
                - name: string
                  value: 0
              gender_age_distribution:
                - gender: string
                  age_range: string
                  value: 0
              ethnicities:
                - name: string
                  value: 0
              languages:
                - code: string
                  value: 0
              brand_affinity:
                - name: string
                  value: 0
              interests:
                - name: string
                  value: 0
              follower_types:
                - type: MASS_FOLLOWERS
                  value: 0
              lookalikes: string
              significant_likers_percentage: 0
              credibility_score: 0
              significant_likers:
                - platform_username: string
                  url: 'http://example.com'
                  image_url: 'http://example.com'
                  follower_count: 0
                  subscriber_count: 0
                  is_verified: true
            contact_details:
              - type: string
                ' value': string
            livestream_metrics:
              hours_watched: 0
              peak_viewers: 0
              average_viewers: -3.402823669209385e+38
              airtime: 0
              days_streamed: 0
              follower_growth:
                percentage: -3.402823669209385e+38
                count: 0
                per_hour: -3.402823669209385e+38
              games:
                - count: 0
                  top:
                    name: string
                    hours_watched: 0
                    hours_watched_percentage: -3.402823669209385e+38
              viewership:
                total_live_view_count: 0
                unique_viewers: 0
                auth_unique_viewers: 0
              estimated_audience:
                daily_average: 0
                average_view_duration: -3.402823669209385e+38
              subscribers:
                total: 0
                income:
                  min: 0
                  max: 0
                tier_breakdown:
                  paid: 0
                  gifted: 0
                  prime: 0
                  tier_1: 0
                  tier_2: 0
                  tier_3: 0
              chat:
                total_messages: 0
                active_chatters: 0
                daily_engagement_rate: -3.402823669209385e+38
                messages_per_chatter: -3.402823669209385e+38
              bits:
                total_bits: 0
                income: -3.402823669209385e+38
          pricing:
            currency: string
            post_type:
              reels:
                min: 2500
                max: 6000
              story:
                min: 2500
                max: 6000
              static_post:
                min: 2500
                max: 6000
              carousel:
                min: 2500
                max: 6000
          pricing_explanations:
            engagement:
              level: Very High
              description: 'Very high engagement rate increases pricing, reflecting strong connection with audience.'
            follower_level:
              level: Celebrity Influencer
              description: Celebrity influencer status commands higher pricing due to widespread fame and global appeal.
            audience_location:
              level: Tier 1
              description: 'Audience is primarily in Tier 1 countries, where purchasing power and prices are highest.'
            audience_credibility:
              level: High
              description: 'High follower credibility score increases pricing, reflecting authenticity of audience.'
      title: CreatorProfileAnalyticsResponse
      required:
        - id
        - work_platform
        - profile
      properties:
        id:
          type: string
          description: Unique ID of the analytics report
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        profile:
          allOf:
            - $ref: '#/components/schemas/CreatorProfileBasicDetails'
            - type: object
              required:
                - full_name
                - introduction
                - platform_account_type
                - gender
                - age_group
                - language
                - average_likes
                - average_comments
                - average_views
                - average_reels_views
                - engagement_rate
                - content_count
                - sponsored_posts_performance
                - reputation_history
                - location
                - top_hashtags
                - top_mentions
                - top_interests
                - top_contents
                - recent_contents
                - posts_hidden_likes_percentage_value
                - sponsored_contents
                - lookalikes
                - audience
                - contact_details
              properties:
                full_name:
                  type: string
                  description: Profile full name on the platform
                introduction:
                  type: string
                  description: |-
                    Description of the profile. 

                    Ex - For Instagram it's the bio and for YouTube it's the channel introduction.
                platform_account_type:
                  type: string
                  description: 'Account type of the profile, such as `PERSONAL`, `CREATOR`, `BUSINESS`, etc.'
                gender:
                  type: string
                  description: Gender of the profile
                age_group:
                  type: string
                  description: Age group of the profile
                language:
                  type: string
                  description: '2 letter language code as per ISO 639-1, heckout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1languages/get). You may also refer the "languages" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
                average_likes:
                  type: integer
                  description: Average number of likes on posts
                average_comments:
                  type: integer
                  description: Average number of comments on posts
                average_views:
                  type: integer
                  description: Average number of views on posts
                average_reels_views:
                  type: integer
                  description: Average number of views on reels
                engagement_rate:
                  type: number
                  description: 'Profile engagement rate, i.e., total average likes of all posts divided by the number of followers'
                content_count:
                  type: integer
                  description: Profile content count
                sponsored_posts_performance:
                  type: number
                  description: Performance of sponsored posts vs organic posts
                reputation_history:
                  type: array
                  description: 'Profile reputation metrics over '
                  items:
                    type: object
                    required:
                      - month
                      - follower_count
                      - subscriber_count
                      - following_count
                      - average_likes
                    properties:
                      month:
                        type: string
                        description: 'Month of the metrics being recorded (ISO 8601 format: "YYYY-MM")'
                      follower_count:
                        type: integer
                        description: Number of followers
                      subscriber_count:
                        type: integer
                        description: Number of subscribers
                      following_count:
                        type: integer
                        description: Number of accounts followed by this profile
                      average_likes:
                        type: integer
                        description: Average number of likes on posts
                location:
                  type: object
                  description: |
                    Profile location details. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1locations/get). You may also refer the "locations" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).
                  required:
                    - city
                    - state
                    - country
                  properties:
                    city:
                      type: string
                      description: Profile location city
                    state:
                      type: string
                      description: Profile location state
                    country:
                      type: string
                      description: Profile location country
                top_hashtags:
                  type: array
                  description: List of top hashtags used by the creator
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: Hashtag
                top_mentions:
                  type: array
                  description: List of top ment used by the creator
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: Mention
                top_interests:
                  type: array
                  description: 'List of top interests of the creator. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1interests/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: Interest
                brand_affinity:
                  type: array
                  description: Brand affinities of the profile
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the brand
                      value:
                        type: number
                        description: Affinity value
                top_contents:
                  type: array
                  description: List of top contents posted on the profile
                  items:
                    $ref: '#/components/schemas/CreatorContentBasicDetails'
                recent_contents:
                  type: array
                  description: List of recent contents posted on the profile
                  items:
                    $ref: '#/components/schemas/CreatorContentBasicDetails'
                posts_hidden_likes_percentage_value:
                  type: number
                  description: Percentage of posts with hidden likes.
                sponsored_contents:
                  type: array
                  description: List of sponsored contents posted on the profile
                  items:
                    $ref: '#/components/schemas/CreatorContentBasicDetails'
                lookalikes:
                  type: array
                  description: List of look alike profiles
                  items:
                    $ref: '#/components/schemas/CreatorProfileBasicDetails'
                audience:
                  allOf:
                    - type: object
                      required:
                        - ethnicities
                        - languages
                        - brand_affinity
                        - interests
                        - follower_types
                        - lookalikes
                        - credibility_score
                        - credibility_score_band
                        - significant_followers_percentage
                        - significant_followers
                      properties:
                        ethnicities:
                          type: array
                          description: Percentage breakdown of audience ethnicities
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                                description: Name of the ethnicity
                              value:
                                type: number
                                description: Percentage of the audience with this ethnicity
                        languages:
                          type: array
                          description: 'Percentage breakdown of audience languages, refer the "language" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
                          items:
                            type: object
                            required:
                              - code
                              - value
                            properties:
                              code:
                                type: string
                                description: 2 letter language code as per ISO 639-1
                              value:
                                type: number
                                description: Percentage of the audience with this language
                        brand_affinity:
                          type: array
                          description: 'Percentage breakdown of audience brand affinities, refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                                description: Name of the brand affinity
                              value:
                                type: number
                                description: Percentage of the audience with this brand affinity
                        interests:
                          type: array
                          description: 'Percentage breakdown of audience interests, refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                                description: Name of the interest topic
                              value:
                                type: number
                                description: Percentage of the audience with this interest
                        follower_types:
                          type: array
                          description: Percentage breakdown of follower categories (only available for Instagram)
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                                enum:
                                  - MASS_FOLLOWERS
                                  - SUSPICIOUS
                                  - INFLUENCERS
                                  - REAL
                                description: Type of the follower category
                              value:
                                type: number
                                description: Percentage of the type of followers
                        lookalikes:
                          type: array
                          description: List of profiles with lookalike audience
                          items:
                            $ref: '#/components/schemas/CreatorProfileBasicDetails'
                        credibility_score:
                          type: number
                          description: 'Audience credibility score quantifies the proportion of individuals in the audience who are confirmed as genuine users, excluding bots or fraudulent profiles. Several elements are considered in determining the Audience Credibility score, such as profile images, biographical details, frequency of posts, and the ratio of followers to followees.'
                        credibility_score_band:
                          type: array
                          description: Audience credibility score band.
                          items:
                            type: object
                            properties:
                              min:
                                type: number
                              max:
                                type: string
                              total_profile_count:
                                type: integer
                        significant_followers_percentage:
                          type: number
                          description: Percentage of significant followers in the audience
                        significant_followers:
                          type: object
                          description: List of profiles that are significant followers
                          required:
                            - platform_username
                            - url
                            - image_url
                            - follower_count
                            - subscriber_count
                            - is_verified
                          properties:
                            platform_username:
                              type: string
                              description: Profile username on the platform
                            url:
                              type: string
                              format: uri
                              description: Profile URL from the platform
                            image_url:
                              type: string
                              format: uri
                              description: Profile image URL from the platform
                            follower_count:
                              type: integer
                              description: Number of followers
                            subscriber_count:
                              type: integer
                              description: Number of subscribers
                            is_verified:
                              type: boolean
                              description: Whether the profile is verified by the platform
                    - $ref: '#/components/schemas/DemographicsAttributes'
                engagement_rate_histogram:
                  type: array
                  items:
                    type: object
                    properties:
                      engagement_rate_band:
                        type: object
                        properties:
                          min:
                            type: number
                          max:
                            type: number
                          '':
                            type: boolean
                audience_likes:
                  type: array
                  items:
                    type: object
                    properties:
                      credibility:
                        type: object
                        properties:
                          min:
                            type: number
                          max:
                            type: number
                          total_profile_count:
                            type: integer
                audience_likers:
                  type: object
                  properties:
                    countries:
                      type: array
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            description: Country code
                          value:
                            type: number
                            description: Percentage value
                    cities:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: City name
                          value:
                            type: number
                            description: Percentage value
                    gender_age_distribution:
                      type: array
                      items:
                        type: object
                        properties:
                          gender:
                            type: string
                          age_range:
                            type: string
                          value:
                            type: number
                    ethnicities:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: number
                    languages:
                      type: array
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                          value:
                            type: number
                    brand_affinity:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: number
                    interests:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: number
                    follower_types:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - MASS_FOLLOWERS
                              - SUSPICIOUS
                              - INFLUENCERS
                              - REAL
                          value:
                            type: number
                    lookalikes:
                      type: string
                    significant_likers_percentage:
                      type: number
                    credibility_score:
                      type: number
                    significant_likers:
                      type: array
                      items:
                        $ref: '#/components/schemas/CreatorProfileBasicDetails'
                contact_details:
                  type: array
                  description: Publicly available contact information about the profile
                  items:
                    type: object
                    required:
                      - type
                      - ' value'
                    properties:
                      type:
                        type: string
                        description: 'Type of contact, for example: phone, email, twitter'
                      ' value':
                        type: string
                        description: Contact information
                livestream_metrics:
                  type: object
                  description: Only for Twitch
                  properties:
                    hours_watched:
                      type: integer
                    peak_viewers:
                      type: integer
                    average_viewers:
                      type: number
                      format: float
                    airtime:
                      type: integer
                    days_streamed:
                      type: integer
                    follower_growth:
                      type: object
                      properties:
                        percentage:
                          type: number
                          format: float
                        count:
                          type: integer
                        per_hour:
                          type: number
                          format: float
                    games:
                      type: array
                      items:
                        type: object
                        properties:
                          count:
                            type: integer
                          top:
                            type: object
                            properties:
                              name:
                                type: string
                              hours_watched:
                                type: integer
                              hours_watched_percentage:
                                type: number
                                format: float
                    viewership:
                      type: object
                      properties:
                        total_live_view_count:
                          type: integer
                        unique_viewers:
                          type: integer
                        auth_unique_viewers:
                          type: integer
                    estimated_audience:
                      type: object
                      properties:
                        daily_average:
                          type: integer
                        average_view_duration:
                          type: number
                          format: float
                    subscribers:
                      type: object
                      description: Only premium
                      properties:
                        total:
                          type: integer
                        income:
                          type: object
                          properties:
                            min:
                              type: integer
                            max:
                              type: integer
                        tier_breakdown:
                          type: object
                          properties:
                            paid:
                              type: integer
                            gifted:
                              type: integer
                            prime:
                              type: integer
                            tier_1:
                              type: integer
                            tier_2:
                              type: integer
                            tier_3:
                              type: integer
                    chat:
                      type: object
                      description: Only premium
                      properties:
                        total_messages:
                          type: integer
                        active_chatters:
                          type: integer
                        daily_engagement_rate:
                          type: number
                          format: float
                        messages_per_chatter:
                          type: number
                          format: float
                    bits:
                      type: object
                      description: Only premium
                      properties:
                        total_bits:
                          type: integer
                        income:
                          type: number
                          format: float
        pricing:
          type: object
          x-stoplight:
            id: d2e2cjtl5tgg3
          description: A fair and dynamic price range that a creator might charge based on key metrics
          properties:
            currency:
              type: string
              x-stoplight:
                id: 8on2sx3e8nqbk
              description: Currency of the pricing
            post_type:
              type: object
              x-stoplight:
                id: h3er9ncmz669j
              description: The price range will be different depending on the type of the post
              properties:
                reels:
                  $ref: '#/components/schemas/PriceRange'
                story:
                  $ref: '#/components/schemas/PriceRange'
                static_post:
                  $ref: '#/components/schemas/PriceRange'
                carousel:
                  $ref: '#/components/schemas/PriceRange'
        pricing_explanations:
          $ref: '#/components/schemas/PriceExplanations'
    AsyncCreatorProfileAnalyticsResponse:
      type: object
      x-examples:
        Example 2:
          id: string
          status: IN_PROGRESS
          report_generated_at: '2019-08-24T14:15:22Z'
          updated_at: '2019-08-24T14:15:22Z'
          work_platform:
            id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
            name: Instagram
            logo_url: 'https://insightiq.ai/storage/instagram.png'
          profile:
            platform_username: string
            url: 'http://example.com'
            image_url: 'http://example.com'
            follower_count: 0
            subscriber_count: 0
            is_verified: true
            full_name: string
            introduction: string
            platform_account_type: string
            gender: string
            age_group: string
            language: string
            average_likes: 0
            average_comments: 0
            average_views: 0
            average_reels_views: 0
            engagement_rate: 0
            content_count: 0
            sponsored_posts_performance: 0
            reputation_history:
              - month: string
                follower_count: 0
                subscriber_count: 0
                following_count: 0
                average_likes: 0
            location:
              city: string
              state: string
              country: string
            top_hashtags:
              - name: string
            top_mentions:
              - name: string
            top_interests:
              - name: string
            brand_affinity:
              - name: string
                value: 0
            top_contents:
              - type: VIDEO
                url: 'http://example.com'
                description: string
                thumbnail_url: 'http://example.com'
                engagement:
                  like_count: 0
                  comment_count: 0
                published_at: '2020-03-27T12:56:34.534978'
            recent_contents:
              - type: VIDEO
                url: 'http://example.com'
                description: string
                thumbnail_url: 'http://example.com'
                engagement:
                  like_count: 0
                  comment_count: 0
                published_at: '2020-03-27T12:56:34.534978'
            sponsored_contents:
              - type: VIDEO
                url: 'http://example.com'
                description: string
                thumbnail_url: 'http://example.com'
                engagement:
                  like_count: 0
                  comment_count: 0
                published_at: '2020-03-27T12:56:34.534978'
            lookalikes:
              - platform_username: string
                url: 'http://example.com'
                image_url: 'http://example.com'
                follower_count: 0
                subscriber_count: 0
                is_verified: true
            audience:
              ethnicities:
                - name: string
                  value: 0
              languages:
                - code: string
                  value: 0
              brand_affinity:
                - name: string
                  value: 0
              interests:
                - name: string
                  value: 0
              follower_types:
                - name: MASS_FOLLOWERS
                  value: 0
              lookalikes:
                - platform_username: string
                  url: 'http://example.com'
                  image_url: 'http://example.com'
                  follower_count: 0
                  subscriber_count: 0
                  is_verified: true
              credibility_score: 0
              credibility_score_band:
                - min: 0
                  max: string
                  total_profile_count: 0
              significant_followers_percentage: 0
              significant_followers:
                platform_username: string
                url: 'http://example.com'
                image_url: 'http://example.com'
                follower_count: 0
                subscriber_count: 0
                is_verified: true
              countries:
                - code: US
                  value: 78.9
              cities:
                - name: Boulder
                  value: 45.6
              gender_age_distribution:
                - gender: FEMALE
                  age_range: 13-18
                  value: 12.3
            engagement_rate_histogram:
              - engagement_rate_band:
                  min: 0
                  max: 0
                  '': true
            audience_likers:
              countries:
                - code: string
                  value: 0
              cities:
                - name: string
                  value: 0
              gender_age_distribution:
                - gender: string
                  age_range: string
                  value: 0
              ethnicities:
                - name: string
                  value: 0
              languages:
                - code: string
                  value: 0
              brand_affinity:
                - name: string
                  value: 0
              interests:
                - name: string
                  value: 0
              follower_types:
                - type: MASS_FOLLOWERS
                  value: 0
              lookalikes: string
              significant_likers_percentage: 0
              credibility_score: 0
              significant_likers:
                - platform_username: string
                  url: 'http://example.com'
                  image_url: 'http://example.com'
                  follower_count: 0
                  subscriber_count: 0
                  is_verified: true
            contact_details:
              - type: string
                ' value': string
          pricing:
            currency: string
            post_type:
              reels:
                min: 2500
                max: 6000
              story:
                min: 2500
                max: 6000
              static_post:
                min: 2500
                max: 6000
              carousel:
                min: 2500
                max: 6000
          pricing_explanations:
            engagement:
              level: Very High
              description: 'Very high engagement rate increases pricing, reflecting strong connection with audience.'
            follower_level:
              level: Celebrity Influencer
              description: Celebrity influencer status commands higher pricing due to widespread fame and global appeal.
            audience_location:
              level: Tier 1
              description: 'Audience is primarily in Tier 1 countries, where purchasing power and prices are highest.'
            audience_credibility:
              level: High
              description: 'High follower credibility score increases pricing, reflecting authenticity of audience.'
      title: AsyncCreatorProfileAnalyticsResponse
      required:
        - id
        - status
        - report_generated_at
        - updated_at
        - work_platform
        - profile
      properties:
        id:
          type: string
          description: Unique ID of the analytics report
        status:
          type: string
          description: Status of the submitted job
          enum:
            - IN_PROGRESS
            - SUCCESS
            - FAILURE
        report_generated_at:
          type: string
          description: Timestamp of when the report was generated.
          format: date-time
        updated_at:
          type: string
          description: Timestamp of report updation.
          format: date-time
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        profile:
          allOf:
            - $ref: '#/components/schemas/CreatorProfileBasicDetails'
            - type: object
              required:
                - full_name
                - introduction
                - platform_account_type
                - gender
                - age_group
                - language
                - average_likes
                - average_comments
                - average_views
                - average_reels_views
                - engagement_rate
                - content_count
                - sponsored_posts_performance
                - reputation_history
                - location
                - top_hashtags
                - top_mentions
                - top_interests
                - top_contents
                - recent_contents
                - sponsored_contents
                - lookalikes
                - audience
                - contact_details
              properties:
                full_name:
                  type: string
                  description: Profile full name on the platform
                introduction:
                  type: string
                  description: |-
                    Description of the profile. 

                    Ex - For Instagram it's the bio and for YouTube it's the channel introduction.
                platform_account_type:
                  type: string
                  description: 'Account type of the profile, such as `PERSONAL`, `CREATOR`, `BUSINESS`, etc.'
                gender:
                  type: string
                  description: Gender of the profile
                age_group:
                  type: string
                  description: Age group of the profile
                language:
                  type: string
                  description: '2 letter language code as per ISO 639-1, heckout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1languages/get). You may also refer the "languages" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
                average_likes:
                  type: integer
                  description: Average number of likes on posts
                average_comments:
                  type: integer
                  description: Average number of comments on posts
                average_views:
                  type: integer
                  description: Average number of views on posts
                average_reels_views:
                  type: integer
                  description: Average number of views on reels
                engagement_rate:
                  type: number
                  description: 'Profile engagement rate, i.e., total average likes of all posts divided by the number of followers'
                content_count:
                  type: integer
                  description: Profile content count
                sponsored_posts_performance:
                  type: number
                  description: Performance of sponsored posts vs organic posts
                reputation_history:
                  type: array
                  description: 'Profile reputation metrics over '
                  items:
                    type: object
                    required:
                      - month
                      - follower_count
                      - subscriber_count
                      - following_count
                      - average_likes
                    properties:
                      month:
                        type: string
                        description: 'Month of the metrics being recorded (ISO 8601 format: "YYYY-MM")'
                      follower_count:
                        type: integer
                        description: Number of followers
                      subscriber_count:
                        type: integer
                        description: Number of subscribers
                      following_count:
                        type: integer
                        description: Number of accounts followed by this profile
                      average_likes:
                        type: integer
                        description: Average number of likes on posts
                location:
                  type: object
                  description: |
                    Profile location details. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1locations/get). You may also refer the "locations" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).
                  required:
                    - city
                    - state
                    - country
                  properties:
                    city:
                      type: string
                      description: Profile location city
                    state:
                      type: string
                      description: Profile location state
                    country:
                      type: string
                      description: Profile location country
                top_hashtags:
                  type: array
                  description: List of top hashtags used by the creator
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: Hashtag
                top_mentions:
                  type: array
                  description: List of top ment used by the creator
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: Mention
                top_interests:
                  type: array
                  description: 'List of top interests of the creator. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1interests/get). You may also refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: Interest
                brand_affinity:
                  type: array
                  description: Brand affinities of the profile
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the brand
                      value:
                        type: number
                        description: Affinity value
                top_contents:
                  type: array
                  description: List of top contents posted on the profile
                  items:
                    $ref: '#/components/schemas/CreatorContentBasicDetails'
                recent_contents:
                  type: array
                  description: List of recent contents posted on the profile
                  items:
                    $ref: '#/components/schemas/CreatorContentBasicDetails'
                sponsored_contents:
                  type: array
                  description: List of sponsored contents posted on the profile
                  items:
                    $ref: '#/components/schemas/CreatorContentBasicDetails'
                lookalikes:
                  type: array
                  description: List of look alike profiles
                  items:
                    $ref: '#/components/schemas/CreatorProfileBasicDetails'
                audience:
                  allOf:
                    - type: object
                      required:
                        - ethnicities
                        - languages
                        - brand_affinity
                        - interests
                        - follower_types
                        - lookalikes
                        - credibility_score
                        - credibility_score_band
                        - significant_followers_percentage
                        - significant_followers
                      properties:
                        ethnicities:
                          type: array
                          description: Percentage breakdown of audience ethnicities
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                                description: Name of the ethnicity
                              value:
                                type: number
                                description: Percentage of the audience with this ethnicity
                        languages:
                          type: array
                          description: 'Percentage breakdown of audience languages, refer the "language" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
                          items:
                            type: object
                            required:
                              - code
                              - value
                            properties:
                              code:
                                type: string
                                description: 2 letter language code as per ISO 639-1
                              value:
                                type: number
                                description: Percentage of the audience with this language
                        brand_affinity:
                          type: array
                          description: 'Percentage breakdown of audience brand affinities, refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                                description: Name of the brand affinity
                              value:
                                type: number
                                description: Percentage of the audience with this brand affinity
                        interests:
                          type: array
                          description: 'Percentage breakdown of audience interests, refer the "interests and brands" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                                description: Name of the interest topic
                              value:
                                type: number
                                description: Percentage of the audience with this interest
                        follower_types:
                          type: array
                          description: Percentage breakdown of follower categories (only available for Instagram)
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                                enum:
                                  - MASS_FOLLOWERS
                                  - SUSPICIOUS
                                  - INFLUENCERS
                                  - REAL
                                description: Type of the follower category
                              value:
                                type: number
                                description: Percentage of the type of followers
                        lookalikes:
                          type: array
                          description: List of profiles with lookalike audience
                          items:
                            $ref: '#/components/schemas/CreatorProfileBasicDetails'
                        credibility_score:
                          type: number
                          description: 'Audience credibility score quantifies the proportion of individuals in the audience who are confirmed as genuine users, excluding bots or fraudulent profiles. Several elements are considered in determining the Audience Credibility score, such as profile images, biographical details, frequency of posts, and the ratio of followers to followees.'
                        credibility_score_band:
                          type: array
                          description: Audience credibility score band.
                          items:
                            type: object
                            properties:
                              min:
                                type: number
                              max:
                                type: string
                              total_profile_count:
                                type: integer
                        significant_followers_percentage:
                          type: number
                          description: Percentage of significant followers in the audience
                        significant_followers:
                          type: object
                          description: List of profiles that are significant followers
                          required:
                            - platform_username
                            - url
                            - image_url
                            - follower_count
                            - subscriber_count
                            - is_verified
                          properties:
                            platform_username:
                              type: string
                              description: Profile username on the platform
                            url:
                              type: string
                              format: uri
                              description: Profile URL from the platform
                            image_url:
                              type: string
                              format: uri
                              description: Profile image URL from the platform
                            follower_count:
                              type: integer
                              description: Number of followers
                            subscriber_count:
                              type: integer
                              description: Number of subscribers
                            is_verified:
                              type: boolean
                              description: Whether the profile is verified by the platform
                    - $ref: '#/components/schemas/DemographicsAttributes'
                engagement_rate_histogram:
                  type: array
                  items:
                    type: object
                    properties:
                      engagement_rate_band:
                        type: object
                        properties:
                          min:
                            type: number
                          max:
                            type: number
                          '':
                            type: boolean
                audience_likers:
                  type: object
                  properties:
                    countries:
                      type: array
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            description: Country code
                          value:
                            type: number
                            description: Percentage value
                    cities:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: City name
                          value:
                            type: number
                            description: Percentage value
                    gender_age_distribution:
                      type: array
                      items:
                        type: object
                        properties:
                          gender:
                            type: string
                          age_range:
                            type: string
                          value:
                            type: number
                    ethnicities:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: number
                    languages:
                      type: array
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                          value:
                            type: number
                    brand_affinity:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: number
                    interests:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          value:
                            type: number
                    follower_types:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - MASS_FOLLOWERS
                              - SUSPICIOUS
                              - INFLUENCERS
                              - REAL
                          value:
                            type: number
                    lookalikes:
                      type: string
                    significant_likers_percentage:
                      type: number
                    credibility_score:
                      type: number
                    significant_likers:
                      type: array
                      items:
                        $ref: '#/components/schemas/CreatorProfileBasicDetails'
                contact_details:
                  type: array
                  description: Publicly available contact information about the profile
                  items:
                    type: object
                    required:
                      - type
                      - ' value'
                    properties:
                      type:
                        type: string
                        description: 'Type of contact, for example: phone, email, twitter'
                      ' value':
                        type: string
                        description: Contact information
    CreatorProfileBasicDetails:
      type: object
      title: CreatorProfileBasicDetails
      required:
        - platform_username
        - url
        - image_url
        - follower_count
        - subscriber_count
        - is_verified
      properties:
        platform_username:
          type: string
          description: Profile username on the platform
        url:
          type: string
          format: uri
          description: Profile URL from the platform
        image_url:
          type: string
          format: uri
          description: Profile image URL from the platform
        follower_count:
          type: integer
          description: Number of followers
        subscriber_count:
          type: integer
          description: Number of subscribers
        is_verified:
          type: boolean
          description: Whether the profile is verified by the platform
    CreatorContentBasicDetails:
      properties:
        type:
          type: string
          description: Platform specific content type.
          enum:
            - VIDEO
            - POST
            - STORY
            - TWEET
            - BLOG
            - IMAGE
            - THREAD
            - PODCAST
            - TRACK
            - OTHER
            - REELS
            - STREAM
            - FEED
            - IGTV
          example: VIDEO
        url:
          type: string
          format: uri
          description: Content URL from the platform
        description:
          type: string
          description: Text description / caption of the content
        thumbnail_url:
          type: string
          format: uri
          description: Content thumbnail URL from the platform
        engagement:
          type: object
          description: Content engagement stats
          required:
            - like_count
            - comment_count
          properties:
            like_count:
              type: integer
              description: Number of likes on the content
            comment_count:
              type: integer
              description: Number of comments on the content
        published_at:
          type: string
          format: date-time
          example: '2020-03-27T12:56:34.534978'
          description: Timestamp when the content was published on the platform.
      required:
        - type
        - url
        - description
        - thumbnail_url
        - engagement
        - published_at
      title: CreatorContentBasicDetails
    ActivityArtistSearch:
      title: ActivityArtistSearch
      type: object
      properties:
        ids:
          type: array
          minItems: 1
          maxItems: 100
          description: List of upto 100 activity artist IDs for which to fetch data
          items:
            type: string
            format: uuid
      required:
        - ids
    ActivityArtistSearchList:
      title: ActivityArtistSearchList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ActivityArtist'
    ActivityContentSearch:
      title: ActivityContentSearch
      type: object
      properties:
        ids:
          type: array
          minItems: 1
          maxItems: 100
          description: List of upto 100 activity content IDs for which to fetch data
          items:
            type: string
            format: uuid
      required:
        - ids
    ActivityContentSearchList:
      title: ActivityContentSearchList
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ActivityContent'
    CreatorContentFetchRequest-Profile:
      type: object
      x-examples:
        Example 1:
          identifier: username/handle/url
          work_platform_id: ''
      title: CreatorContentFetchRequest - Profile
      properties:
        profile_url:
          type: string
          description: URL of the profile you want to get content data level.
          format: uri
        work_platform_id:
          type: string
          description: Work platform ID for the platform on which you want to search for the profile using the above identifier
        content_type:
          type: string
          description: Only for Instagram -  to be used along with profile_url to fetch specific content types.
          enum:
            - REELS
            - IGTV
            - STORY
        offset:
          type: integer
          example: 17
          description: Increase sequentially from 0 to fetch analytics of profile posts.
      required:
        - profile_url
        - work_platform_id
    CreatorContentFetchRequest-Profile-without-content_type:
      type: object
      x-examples:
        Example 1:
          identifier: username/handle/url
          work_platform_id: ''
      title: CreatorContentFetchRequest - Profile
      properties:
        profile_url:
          type: string
          description: URL of the profile you want to get content data for.
          format: uri
        work_platform_id:
          type: string
          description: Work platform ID for the platform on which you want to search for the profile using the above identifier
      required:
        - profile_url
        - work_platform_id
    CreatorContentFetchRequest-Content:
      type: object
      x-examples:
        Example 1:
          identifier: username/handle/url
          work_platform_id: ''
      title: CreatorContentFetchRequest - Content
      properties:
        content_url:
          type: string
          description: URL of the content you want to get data for. It fetches data for a single content.
          format: uri
        work_platform_id:
          type: string
          description: Work platform ID for the platform on which you want to search for the profile using the above identifier
      required:
        - content_url
        - work_platform_id
    CreatorContentFetchRequest:
      title: CreatorContentFetchRequest
      oneOf:
        - $ref: '#/components/schemas/CreatorContentFetchRequest-Profile'
        - $ref: '#/components/schemas/CreatorContentFetchRequest-Content'
    AsyncCreatorContentFetchRequest:
      oneOf:
        - $ref: '#/components/schemas/CreatorContentFetchRequest-Content'
        - $ref: '#/components/schemas/CreatorContentFetchRequest-Profile-without-content_type'
    CreatorContentData:
      type: object
      description: 'Represents the Content object. It contains data of media (images, videos, audio) present in a connected account.'
      title: CreatorContentData
      properties:
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        engagement:
          type: object
          properties:
            like_count:
              type: integer
              description: Total likes.
              example: 42134
            comment_count:
              type: integer
              description: Total comments.
              example: 4234
            view_count:
              type: integer
              description: Total views.
              example: 42343
            share_count:
              type: integer
              description: Total shares.
              example: 42343
              nullable: true
        platform_content_id:
          type: string
          description: Unique content ID on the platform.
          example: 12ccaf87
        title:
          type: string
          description: Title of the content item.
          example: USA Tours
        format:
          type: string
          description: Media type of the content item.
          enum:
            - VIDEO
            - IMAGE
            - AUDIO
            - TEXT
            - OTHER
          example: VIDEO
        type:
          type: string
          description: Platform specific content type.
          enum:
            - REELS
            - IGTV
          example: REELS
        url:
          type: string
          description: Platform content URL.
          example: 'https://youtu.be/jzWweY4xPe8'
          format: uri
        media_url:
          type: string
          format: uri
          example: 'https://video.cdninstagram.com/v/t50.16885-16/273384537_472655704353078_8308247021721136693_n.mp4?_nc_cat=100&vs=661086908417570_1261186177&_nc_vs=HBksFQAYJEdGbUVTeEEyNlZ1NzRLMEJBRFd1NHJPbDBreHpidlZCQUFBRhUAAsgBABUAGCRHSnU0U3hEM2kwQ0VQVk1EQUM3S29OeTlueUJzYnZWQkFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMRUAACbG3%2FGq0JXjPxUCKAJDMywXQCOhysCDEm8YEmRhc2hfYmFzZWxpbmVfMV92MREAdewHAA%3D%3D&ccb=1-5&_nc_sid=59939d&efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjQ4MC5pZ3R2In0%3D&_nc_ohc=qcTIWWC39rQAX9xprW6&_nc_ht=video.cdninstagram.com&edm=AM6HXa8EAAAA&oh=00_AT85xcdCSq921RH5KCSfIukPMfk0QCajZEP5Ym4fY3p1Pw&oe=621D1EA5&_nc_rid=5d42feb0d5'
          description: 'Direct media URL of the content item, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.'
          nullable: true
        thumbnail_url:
          type: string
          example: 'https://youtu.be/jzWweY4xPe8.png'
          format: uri
          description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.'
        subtitles:
          type: object
          x-stoplight:
            id: uq8z120r5xxlu
          properties:
            language_code:
              type: string
              x-stoplight:
                id: 48qcnnr5nf34b
              example: en
            language_name:
              type: string
              x-stoplight:
                id: 106ugc59l3rx6
              example: English (auto-generated)
            subtitle_url:
              type: string
              x-stoplight:
                id: 4xxgrcbx401ix
              example: 'https://www.youtube.com/api/timedtext?v=oFfVt3S51T4&ei=nCtyZ7aKIqW3kucP-53tgA8&caps=asr&opi=112496729&exp=xbt&xoaf=1&xoadf=4&hl=en&ip=0.0.0.0&ipbits=0&expire=1735560716&sparams=ip,ipbits,expire,v,ei,caps,opi,exp,xoaf,xoadf&signature=093D7EFA9A84BE51FCE2F8C530AD8EC7AC1AECBC.9AF582A375F6B0836AAA8B888F6F7AB1308D025C&key=yt8&kind=asr&lang=en'
        duration:
          type: number
          example: 523
          description: Video duration in seconds (only available for YouTube).
          nullable: true
        description:
          type: string
          description: Description of the content item.
          example: US tours video.
        published_at:
          type: string
          example: '2021-05-26T00:00:00.000000'
          format: date-time
          description: Publishing timestamp of the content item.
        audio_track_info:
          $ref: '#/components/schemas/AudioTrackInfo'
        mentions:
          type: array
          items:
            $ref: '#/components/schemas/MentionsPublicContentReponse'
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/CollaboratorsPublicContentResponse'
        sponsors:
          type: array
          items:
            $ref: '#/components/schemas/SponsorsPublicContentResponse'
        hashtags:
          type: array
          description: Hashtags present in the post description
          items:
            type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinksPublicContentResponse'
        profile:
          $ref: '#/components/schemas/CreatorProfileBasicDetails'
        locations:
          type: object
          description: Location of the story (Instagram only)
          properties:
            name:
              type: string
            address:
              type: string
            city:
              type: string
            longitude:
              type: number
            latitude:
              type: number
        likes_and_views_disabled:
          type: boolean
          default: false
          description: 'Not for Instagram story, only for Instagram post and reels'
        keywords:
          type: array
          x-stoplight:
            id: qv3ogan3db7i8
          items:
            x-stoplight:
              id: ho9vbdk0m50ej
            type: string
            example: Cursor Team
        genre:
          type: string
          x-stoplight:
            id: x5y1s7v8opfhj
          example: Science & Technology
      required:
        - work_platform
    SocialListeningResponse:
      type: object
      description: ''
      title: SocialListeningResponse
      properties:
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        engagement:
          type: object
          properties:
            like_count:
              type: integer
              description: Total likes.
              example: 42134
            comment_count:
              type: integer
              description: Total comments.
              example: 4234
            view_count:
              type: integer
              description: Total views.
              example: 42343
            share_count:
              type: integer
              description: Total shares.
              example: 42343
              nullable: true
        platform_content_id:
          type: string
          description: Unique content ID on the platform.
          example: 12ccaf87
        title:
          type: string
          description: Title of the content item.
          example: USA Tours
        format:
          type: string
          description: Media type of the content item.
          enum:
            - VIDEO
            - IMAGE
            - AUDIO
            - TEXT
            - OTHER
          example: VIDEO
        type:
          type: string
          description: Platform specific content type.
          enum:
            - REELS
            - IGTV
          example: REELS
        url:
          type: string
          description: Platform content URL.
          example: 'https://youtu.be/jzWweY4xPe8'
          format: uri
        media_url:
          type: string
          format: uri
          example: 'https://video.cdninstagram.com/v/t50.16885-16/273384537_472655704353078_8308247021721136693_n.mp4?_nc_cat=100&vs=661086908417570_1261186177&_nc_vs=HBksFQAYJEdGbUVTeEEyNlZ1NzRLMEJBRFd1NHJPbDBreHpidlZCQUFBRhUAAsgBABUAGCRHSnU0U3hEM2kwQ0VQVk1EQUM3S29OeTlueUJzYnZWQkFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMRUAACbG3%2FGq0JXjPxUCKAJDMywXQCOhysCDEm8YEmRhc2hfYmFzZWxpbmVfMV92MREAdewHAA%3D%3D&ccb=1-5&_nc_sid=59939d&efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjQ4MC5pZ3R2In0%3D&_nc_ohc=qcTIWWC39rQAX9xprW6&_nc_ht=video.cdninstagram.com&edm=AM6HXa8EAAAA&oh=00_AT85xcdCSq921RH5KCSfIukPMfk0QCajZEP5Ym4fY3p1Pw&oe=621D1EA5&_nc_rid=5d42feb0d5'
          description: 'Direct media URL of the content item, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.'
          nullable: true
        thumbnail_url:
          type: string
          example: 'https://youtu.be/jzWweY4xPe8.png'
          format: uri
          description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.'
        duration:
          type: number
          example: 523
          description: Video duration in seconds (only available for YouTube).
          nullable: true
        description:
          type: string
          description: Description of the content item.
          example: US tours video.
        published_at:
          type: string
          example: '2021-05-26T00:00:00.000000'
          format: date-time
          description: Publishing timestamp of the content item.
        audio_track_info:
          $ref: '#/components/schemas/AudioTrackInfo'
        mentions:
          type: array
          items:
            $ref: '#/components/schemas/MentionsPublicContentReponse'
        hashtags:
          type: array
          description: Hashtags present in the post description
          items:
            type: string
      required:
        - work_platform
    AsyncCreatorContentData:
      type: object
      description: 'Represents the Content object. It contains data of media (images, videos, audio) present in a connected account.'
      title: CreatorContentData
      properties:
        id:
          type: string
          format: uuid
          description: |
            InsightIQ's unique job ID
        status:
          type: string
          description: Status of the submitted request
          enum:
            - IN_PROGRESS
            - SUCCESS
            - FAILURE
        work_platform:
          type: object
          description: Work platform object
          properties:
            id:
              type: string
              format: uuid
              description: Unique ID of the work platform.
              example: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
            name:
              type: string
              description: Name of the work platform.
              example: LinkedIn
            logo_url:
              type: string
              format: uri
              description: Image URL of the work platform logo
              example: 'https://insightiq.ai/storage/linkedin.png'
        engagement:
          type: object
          properties:
            like_count:
              type: integer
              description: Total likes.
              example: 42134
            comment_count:
              type: integer
              description: Total comments.
              example: 4234
            view_count:
              type: integer
              description: Total views.
              example: 42343
            share_count:
              type: integer
              description: Total shares.
              example: 42343
              nullable: true
        platform_content_id:
          type: string
          description: Unique content ID on the platform.
          example: 12ccaf87
        title:
          type: string
          description: Title of the content item.
          example: USA Tours
        format:
          type: string
          description: Media type of the content item.
          enum:
            - VIDEO
            - IMAGE
            - AUDIO
            - TEXT
            - OTHER
          example: VIDEO
        type:
          type: string
          description: Platform specific content type.
        url:
          type: string
          description: Platform content URL.
          format: uri
        media_url:
          type: string
          format: uri
          description: 'Direct media URL of the content item, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.'
          nullable: true
        thumbnail_url:
          type: string
          format: uri
          description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.'
        duration:
          type: number
          example: 523
          description: Video duration in seconds (only available for YouTube).
          nullable: true
        description:
          type: string
          description: Description of the content item.
          example: US tours video.
        published_at:
          type: string
          example: '2021-05-26T00:00:00.000000'
          format: date-time
          description: Publishing timestamp of the content item.
        is_reposted:
          type: boolean
          format: date-time
          description: 'True, if the post wasn''t made by the profile but was a repost of someone else''s post.'
        audio_track_info:
          $ref: '#/components/schemas/AudioTrackInfo'
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/CollaboratorsPublicContentResponse'
        sponsors:
          type: array
          items:
            $ref: '#/components/schemas/SponsorsPublicContentResponse'
        mentions:
          type: array
          items:
            $ref: '#/components/schemas/MentionsPublicContentReponse'
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinksPublicContentResponse'
        hashtags:
          type: array
          description: Hashtags present in the post description
          items:
            type: string
      required:
        - id
        - status
        - work_platform
    ProfessionalCreatorContentData:
      type: object
      description: 'Represents the Content object. It contains data of media (images, videos, audio) present in a connected account.'
      title: ProfessionalCreatorContentData
      properties:
        work_platform:
          type: object
          description: Work platform object
          properties:
            id:
              type: string
              format: uuid
              description: Unique ID of the work platform.
              example: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
            name:
              type: string
              description: Name of the work platform.
              example: LinkedIn
            logo_url:
              type: string
              format: uri
              description: Image URL of the work platform logo
              example: 'https://insightiq.ai/storage/linkedin.png'
        profile:
          type: object
          description: Work platform object
          properties:
            platform_username:
              type: string
              description: Username of the profile
              example: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
            url:
              type: string
              description: Platform profile identifier
              example: LinkedIn
              format: uri
            external_id:
              type: string
              description: Image URL of the work platform logo
              example: 'https://insightiq.ai/storage/linkedin.png'
            image_url:
              type: string
              format: uri
              description: Profile image URL
            is_verified:
              type: boolean
              description: Verification status of the profile
        engagement:
          type: object
          properties:
            like_count:
              type: integer
              description: Total likes.
              example: 42134
              nullable: true
            applause_count:
              type: integer
              description: Applause count
              nullable: true
            support_count:
              type: integer
              description: Support count
              nullable: true
            love_count:
              type: integer
              description: Love count
              nullable: true
            interest_count:
              type: integer
              description: Interest count
              nullable: true
            laugh_count:
              type: integer
              description: Laught count
              nullable: true
            comment_count:
              type: integer
              description: Total comments.
              example: 4234
              nullable: true
            view_count:
              type: integer
              description: Total views.
              example: 42343
              nullable: true
            share_count:
              type: integer
              description: Total shares.
              example: 42343
              nullable: true
        platform_content_id:
          type: string
          description: Unique content ID on the platform.
          example: 12ccaf87
        title:
          type: string
          description: Title of the content item.
          example: USA Tours
        format:
          type: string
          description: Media type of the content item.
          enum:
            - VIDEO
            - IMAGE
            - AUDIO
            - TEXT
            - OTHER
          example: VIDEO
        type:
          type: string
          description: Platform specific content type.
        url:
          type: string
          description: Platform content URL.
          format: uri
        media_url:
          type: string
          format: uri
          description: 'Direct media URL of the content item, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.'
          nullable: true
        thumbnail_url:
          type: string
          format: uri
          description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.'
        duration:
          type: number
          example: 523
          description: Video duration in seconds (only available for YouTube).
          nullable: true
        description:
          type: string
          description: Description of the content item.
          example: US tours video.
        published_at:
          type: string
          example: '2021-05-26T00:00:00.000000'
          format: date-time
          description: Publishing timestamp of the content item.
        is_reposted:
          type: boolean
          format: date-time
          description: 'True, if the post wasn''t made by the profile but was a repost of someone else''s post.'
        audio_track_info:
          $ref: '#/components/schemas/AudioTrackInfo'
        collaborators:
          type: array
          items:
            $ref: '#/components/schemas/CollaboratorsPublicContentResponse'
        sponsors:
          type: array
          items:
            $ref: '#/components/schemas/SponsorsPublicContentResponse'
        mentions:
          type: array
          items:
            $ref: '#/components/schemas/MentionsPublicContentReponse'
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinksPublicContentResponse'
        hashtags:
          type: array
          description: Hashtags present in the post description
          items:
            type: string
      required:
        - work_platform
        - profile
    CreatorContentFetchResponse:
      title: CreatorContentFetchResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CreatorContentData'
    AsyncCreatorContentFetchResponse:
      title: CreatorContentFetchResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: InsightIQ's unique job ID
        status:
          type: string
          enum:
            - IN_PROGRESS
            - SUCCESS
            - FAILURE
          description: Status of the submitted request
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProfessionalCreatorContentData'
      required:
        - id
        - status
        - data
    AudioTrackInfo:
      title: AudioTrackInfo
      type: object
      description: Audio track details of the video/reel.
      properties:
        id:
          type: string
          description: Audio unique id.
          example: UCEyLTzBtHJhlUwkeWhxfMXw
        title:
          type: string
          description: Audio track name.
          example: Bad at Love
        artist:
          type: string
          description: Audio track artist name.
          example: Halsey
        original:
          type: boolean
          description: Whether original licensed audio.
    BrandsDictResponse:
      title: BrandDictResponse
      type: object
      properties:
        brands:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      x-examples:
        Example 1:
          brands:
            - name: 20th Century Fox
            - name: 2Pac
            - name: 7-Eleven
            - name: 7UP
            - name: A Game of Tones
            - name: A.P.C.
            - name: ABC
            - name: Abercrombie & Fitch
            - name: Ableton
            - name: Absolut
            - name: Abus
            - name: Acacia Swimwear
      description: Brands dictionary for public profiles search
    InterestsDictResponse:
      title: InterestsDictResponse
      type: object
      x-examples:
        Example 1:
          interests:
            - name: Television & Film
            - name: Music
            - name: Shopping & Retail
            - name: 'Coffee, Tea & Beverages'
            - name: Camera & Photography
            - name: 'Clothes, Shoes, Handbags & Accessories'
            - name: 'Beer, Wine & Spirits'
            - name: Sports
            - name: Electronics & Computers
            - name: Gaming
            - name: Activewear
            - name: Art & Design
            - name: 'Travel, Tourism & Aviation'
            - name: Business & Careers
            - name: Beauty & Cosmetics
            - name: Healthcare & Medicine
            - name: Jewellery & Watches
            - name: 'Restaurants, Food & Grocery'
            - name: 'Toys, Children & Baby'
            - name: Fitness & Yoga
            - name: Wedding
            - name: Tobacco & Smoking
            - name: Pets
            - name: Healthy Lifestyle
            - name: Luxury Goods
            - name: 'Home Decor, Furniture & Garden'
            - name: 'Friends, Family & Relationships'
            - name: Cars & Motorbikes
      description: Interests dictionary for public profiles search
      properties:
        interests:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
    LanguagesDictResponse:
      title: LanguagesDictResponse
      type: object
      x-examples:
        Example 1:
          languages:
            - name: English
              code: en
            - name: Spanish
              code: es
            - name: Portuguese
              code: pt
            - name: French
              code: fr
            - name: Arabic
              code: ar
            - name: Russian
              code: ru
            - name: Italian
              code: it
            - name: German
              code: de
            - name: Persian
              code: fa
            - name: Indonesian
              code: id
            - name: Turkish
              code: tr
            - name: Japanese
              code: ja
      description: Languages dictionary for public profiles search
      properties:
        languages:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              code:
                type: string
    CountriesDictResponse:
      title: LocationsDictResponse
      type: object
      x-examples:
        Example 1:
          countries:
            - name: United States
              code: US
              cities:
                - name: New York City
                  state: New York
                - name: Los Angeles
                  state: California
                - name: Atlanta
                  state: Georgia
                - name: Miami
                  state: Florida
                - name: Orlando
                  state: Florida
      description: Locations dictionary for public profiles search
      properties:
        locations:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: InsightIQ's unique identifier for the location. Pass this identifier to the creator discovery endpoint to search creators.
              name:
                type: string
                description: |
                  Name of the location.
              type:
                type: string
                description: Type of the location.
                enum:
                  - CITY
                  - STATE
                  - COUNTRY
    TopicTagsDictResponse:
      title: TopicTagsDictResponse
      description: Topic tags dictionary for public profiles search
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
            required:
              - name
              - value
      required:
        - data
    TopicTagsRelevanceDictResponse:
      title: TopicTagsRelevanceDictResponse
      description: Topic tags relevance weight dictionary for public profiles search
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the tag from tags dictionary
              distance:
                type: number
                description: 'Lesser the distance, more relevant the tag'
              frequency:
                type: integer
                description: Number of occurrences of the tag in the work platform
            required:
              - name
              - distance
              - frequency
      required:
        - data
    ProfessionalProfileRequest:
      title: ProfessionalProfileRequest
      type: object
      properties:
        profile_url:
          type: string
          format: uri
          description: URL of the profile you want to generate analytics for
        work_platform_id:
          type: string
          format: uuid
          description: Work platform ID for the platform of the above profile url
      required:
        - profile_url
        - work_platform_id
      description: Public Analytics of Professional profiles
    ProfessionalProfileResponse:
      title: ProfessionalProfileResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the analytics report
        created_at:
          type: string
          format: date-time
          description: Report creation time (UTC date and time in ISO 8601 format)
        updated_at:
          type: string
          format: date-time
          description: Report updation time (UTC date and time in ISO 8601 format)
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute-Professional'
        first_name:
          type: string
          description: First name of the profile
        last_name:
          type: string
          description: Last name of the profile
        platform_username:
          type: string
          description: Username on the platform
        external_id:
          type: string
          description: Unique identifier of the profile on the platform
        profile_headline:
          type: string
          description: Headline of the profile
        introduction:
          type: string
          description: Profile summary
        url:
          type: string
          format: uri
        image_url:
          type: string
          format: uri
        industry:
          type: string
          description: Name of the industry mentioned on the profile
        location:
          type: object
          description: Location object
          properties:
            name:
              type: string
              description: Name of the city
            country:
              type: string
              description: Country name as 2 letter country code (in ISO 3166-1 format)
        languages:
          type: array
          description: List of languages listed on profile
          items:
            type: string
        work_experiences:
          type: array
          items:
            $ref: '#/components/schemas/WorkExperiences'
        education:
          type: array
          items:
            $ref: '#/components/schemas/Education'
        publications:
          type: array
          items:
            $ref: '#/components/schemas/Publications'
        certifications:
          type: array
          items:
            $ref: '#/components/schemas/Certifications'
        volunteer_experiences:
          type: array
          items:
            $ref: '#/components/schemas/VolunteerExperiences'
        honors:
          type: array
          items:
            $ref: '#/components/schemas/Honors'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Projects'
      required:
        - id
        - created_at
        - updated_at
        - work_platform
        - first_name
        - last_name
        - platform_username
        - external_id
        - url
      description: ''
    ProfessionalLocationsDictResponse:
      title: ProfessionalLocationsDictResponse
      type: object
      x-examples: {}
      description: Locations dictionary for public profiles search
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
                format: uuid
                description: InsightIQ's unique identifier for the location. Pass this identifier to the professional creator discovery endpoint to search creators.
              name:
                type: string
                description: Name of the location.
        metadata:
          $ref: '#/components/schemas/BasicMetadata'
    ProfessionalEducationInstitutesDictResponse:
      title: ProfessionalEducationInstitutesDictResponse
      type: object
      x-examples: {}
      description: Education institutes dictionary for public profiles search
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
                format: uuid
                description: InsightIQ's unique identifier for the education institute. Pass this identifier to the professional creator discovery endpoint to search creators.
              name:
                type: string
                description: Name of the education institute.
              image_url:
                type: string
                description: Logo of the education institute.
                nullable: true
        metadata:
          $ref: '#/components/schemas/BasicMetadata'
    ProfessionalEducationDegreesDictResponse:
      title: ProfessionalEducationDegreesDictResponse
      type: object
      x-examples: {}
      description: Education degrees dictionary for public profiles search
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
                format: uuid
                description: InsightIQ's unique identifier for the education degree. Pass this identifier to the professional creator discovery endpoint to search creators.
              name:
                type: string
                description: Name of the education degree.
        metadata:
          $ref: '#/components/schemas/BasicMetadata'
    ProfessionalTalksAboutDictResponse:
      title: ProfessionalTalksAboutDictResponse
      type: object
      x-examples: {}
      description: Talks about dictionary for public profiles search
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
                format: uuid
                description: InsightIQ's unique identifier for the talks about topic. Pass this identifier to the professional creator discovery endpoint to search creators.
              name:
                type: string
                description: Name of the talks about topic.
        metadata:
          $ref: '#/components/schemas/BasicMetadata'
    ProfessionalCompaniesDictResponse:
      title: ProfessionalCompaniesDictResponse
      type: object
      x-examples: {}
      description: Companies dictionary for public profiles search
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
                format: uuid
                description: InsightIQ's unique identifier for the company. Pass this identifier to the professional creator discovery endpoint to search creators.
              name:
                type: string
                description: Name of the company.
              image_url:
                type: string
                format: uuid
                description: Logo of the company.
        metadata:
          $ref: '#/components/schemas/BasicMetadata'
    TimePeriod:
      title: TimePeriod
      type: object
      description: Time period object
      properties:
        start_date:
          type: object
          description: Start date object
          properties:
            month:
              type: integer
              example: 5
              nullable: true
            year:
              type: integer
              example: 1998
              nullable: true
        end_date:
          type: object
          description: End date object
          properties:
            month:
              type: integer
              example: 8
              nullable: true
            year:
              type: integer
              example: 2000
              nullable: true
    WorkExperiences:
      title: WorkExperiences
      type: object
      description: Work experiences listed on the profile
      properties:
        title:
          type: string
          description: Job title
        company:
          type: object
          description: Company related information object
          properties:
            name:
              type: string
              description: Company name
              nullable: true
            industries:
              type: array
              description: Industry tags of the company
              nullable: true
              items: {}
            logo_url:
              type: string
              format: uri
              description: URL of the company logo image
              nullable: true
            employee_count:
              type: object
              description: Headcount range of the company
              nullable: true
              properties:
                min:
                  type: integer
                  description: Lower bound of headcount
                  nullable: true
                max:
                  type: integer
                  description: Upper bound of headcount
                  nullable: true
        description:
          type: string
          description: Work experience description mentioned on the profile
          nullable: true
        time_period:
          $ref: '#/components/schemas/TimePeriod'
        location:
          description: Work location
          type: object
          properties:
            name:
              type: string
              nullable: true
            country:
              type: string
              nullable: true
            country_name:
              type: string
              x-stoplight:
                id: h1t9fo6djiswn
            city:
              type: string
              x-stoplight:
                id: s2zfmh95aaaub
            state:
              type: string
              x-stoplight:
                id: hgxzccvg9th7v
    Education:
      title: Education
      type: object
      description: Education listed on the profile
      properties:
        degree:
          type: string
          description: Degree name
          nullable: true
        field_study:
          type: array
          description: Field of study
          nullable: true
          items:
            x-stoplight:
              id: 200tvztxbn15x
            type: string
        grade:
          type: string
          description: Grade secured
          nullable: true
        school:
          type: object
          description: School related information object
          properties:
            name:
              type: string
              description: Name of the school
              nullable: true
            logo_url:
              type: string
              format: uri
              description: URL of the school logo image
              nullable: true
        description:
          type: string
          description: 'Description mentioned on the profile, if any'
          nullable: true
        time_period:
          $ref: '#/components/schemas/TimePeriod'
        activities:
          type: string
          description: Activities participated in
          nullable: true
    Publications:
      title: Publications
      type: object
      description: Publications listed on the profile
      properties:
        name:
          type: string
          description: Name of the publication
        publisher:
          type: string
          description: Name of the publisher
          nullable: true
        description:
          type: string
          description: Description of the publication
          nullable: true
        url:
          type: string
          description: Publication URL
          format: uri
          nullable: true
        date:
          type: object
          description: Date object
          properties:
            day:
              type: integer
              example: 17
              nullable: true
            month:
              type: integer
              example: 8
              nullable: true
            year:
              type: integer
              example: 2000
              nullable: true
    Certifications:
      title: Certifications
      type: object
      properties:
        name:
          type: string
          description: Name of the certification
        id:
          type: string
          description: Identifier for the issued certificate
          nullable: true
        url:
          type: string
          description: URL of the certification
          format: uri
          nullable: true
        authority:
          type: string
          description: Description of the publication
          nullable: true
        time_period:
          $ref: '#/components/schemas/TimePeriod'
      description: Certifications listed on the profile
    VolunteerExperiences:
      title: VolunteerExperiences
      type: object
      properties:
        role:
          type: string
          description: 'Volunteering role '
        organization:
          type: string
          description: 'Name of the organization '
          nullable: true
        cause:
          type: string
          description: Volunteering cause
          nullable: true
        description:
          type: string
          description: Description mentioned on the profile
          nullable: true
        time_period:
          $ref: '#/components/schemas/TimePeriod'
      description: Volunteering experiences listed on the profile
    Honors:
      title: Honors
      type: object
      description: List of honors listed on the profile
      properties:
        title:
          type: string
          description: Name of the honor
        issuer:
          type: string
          description: Name of the honor issuer
          nullable: true
        description:
          type: string
          description: Description mentioned on the profile
          nullable: true
        date:
          type: object
          description: Issue date
          properties:
            month:
              type: integer
              example: 7
              nullable: true
            year:
              type: integer
              example: 2020
              nullable: true
    Projects:
      title: Projects
      type: object
      description: List of projects listed on the profile
      properties:
        title:
          type: string
          description: Name of the project
        description:
          type: string
          description: Description of the project
          nullable: true
        url:
          type: string
          description: URL of the project
          format: uri
          nullable: true
        time_period:
          $ref: '#/components/schemas/TimePeriod'
    PublicCommentsRequest:
      title: PublicCommentsRequest
      type: object
      properties:
        content_url:
          type: string
          format: uri
          description: Content URL to fetch  comments data
        work_platform_id:
          type: string
          format: uuid
          description: Platform over which content is being fetched
        offset:
          type: integer
          description: Increase sequentially from 0
      required:
        - content_url
        - work_platform_id
    PublicCommentsResponse:
      title: PublicCommentsResponse
      type: object
      properties:
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        content_url:
          type: string
          format: uri
          description: '`Content url for which comments are fetched'
          example: 'https://www.instagram.com/p/Cng_jhAIsj2/'
        text:
          type: string
          description: Comment text
          example: USA Tours
        commenter_username:
          type: string
          description: Commenter username
          example: Rashford
        commenter_display_name:
          type: string
          description: Commenter display name
          example: Rashford
        like_count:
          type: integer
          description: Comment like count
          example: 456
        reply_count:
          type: integer
          description: Comment reply count
          example: 786
        published_at:
          type: string
          format: date-time
          description: Comment publishing timestamp
          example: '2021-05-26T00:00:00.000000'
      required:
        - work_platform
        - content_url
        - text
        - commenter_username
    CollaboratorsPublicContentResponse:
      title: CollaboratorsPublicContentResponse
      type: object
      properties:
        platform_username:
          type: string
          description: Collaborator username
        image_url:
          type: string
          format: uri
          description: Collaborator profile image url
        is_verified:
          type: boolean
          description: Collaborator verification status
    SponsorsPublicContentResponse:
      title: SponsorsPublicContentResponse
      type: object
      properties:
        platform_username:
          type: string
          description: Sponsor username
        first_name:
          type: string
          description: Sponsor display name
        image_url:
          type: string
          format: uri
          description: Sponsor profile image url
        is_verified:
          type: boolean
          description: Sponsor verification status
    MentionsPublicContentReponse:
      title: MentionsPublicContentResponse
      type: object
      properties:
        platform_username:
          type: string
          description: Username of mentioned profile.
        first_name:
          type: string
          description: Display name of mentioned profile
        image_url:
          type: string
          format: uri
          description: Profile image url of mentioned profile
        is_verified:
          type: boolean
          description: Verification status of mentioned profile
      required:
        - platform_username
        - first_name
        - image_url
        - is_verified
      description: ''
    LinksPublicContentResponse:
      title: LinksPublicContentResponse
      type: object
      description: Links present in the Instagram story
      properties:
        title:
          type: string
          description: Title of the link. Only for IG stories
        url:
          type: string
          format: uri
          description: URL of the link. Only for IG stories
        display_url:
          type: string
          format: uri
          description: Display url of the link. Only for IG stories
    FilterMatch:
      title: FilterMatch
      type: object
      properties:
        brand_sponsors:
          type: array
          items:
            type: string
        creator_age:
          type: object
          properties:
            min:
              type: integer
            max:
              type: integer
        creator_brand_affinities:
          type: array
          items:
            type: string
        follower_growth:
          type: number
        subscriber_growth:
          type: number
        creator_gender:
          type: string
        creator_interests:
          type: array
          items:
            type: string
        creator_language:
          type: object
          properties:
            code:
              type: string
            name:
              type: string
        creator_locations:
          type: array
          items:
            type: string
            format: uuid
        creator_lookalikes:
          type: number
        content_count:
          type: integer
        instagram_options:
          type: object
          properties:
            reel_views:
              type: integer
        audience_age:
          type: object
          properties:
            min:
              type: integer
            max:
              type: integer
            percentage_value:
              type: number
        audience_gender:
          type: object
          properties:
            type:
              type: string
            percentage_value:
              type: number
        audience_brand_affinities:
          type: object
          properties:
            name:
              type: string
            percentage_value:
              type: number
        audience_interests:
          type: object
          properties:
            name:
              type: string
            percentage_value:
              type: number
        audience_language:
          type: object
          properties:
            code:
              type: string
            name:
              type: string
            percentage_value:
              type: number
        audience_locations:
          type: object
          properties:
            name:
              type: string
            location_id:
              type: string
              format: uuid
            percentage_value:
              type: number
        audience_lookalikes:
          type: number
    AsyncPublicContentJobResponse:
      title: AsyncPublicContentJobResponse
      type: object
      properties:
        id:
          type: string
          description: InsightIQ's unique job ID for the submitted request
          format: uuid
        profile_url:
          type: string
          description: 'Submitted content url for which the engagement metrics will be fetched, if any.'
          format: uri
        content_url:
          type: string
          description: 'Submitted profile url for which engagement metrics will be fetched, if any.'
          format: uri
        work_platform:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: Unique ID of the work platform.
            name:
              type: string
              description: Name of the work platform.
            logo_url:
              type: string
              description: Image URL of the work platform logo.
        status:
          type: string
          description: Status of the submitted job
          enum:
            - IN_PROGRESS
            - SUCCESS
            - FAILURE
      required:
        - id
        - profile_url
        - content_url
        - work_platform
        - status
    RelevanceReportObject:
      title: RelevanceReportObject
      type: object
      properties:
        total_comment_count:
          type: integer
          description: Total comment count
        engagement_relevance_score:
          type: number
          description: Engagement relevance score
        postive_comment_count:
          type: integer
          description: Positive comment count
        negative_comment_count:
          type: integer
          description: Negative comment count
        neutral_comment_count:
          type: integer
          description: Neutral comment count
        purchase_intent_comment_count:
          type: integer
          description: Purchase intent comment count
      required:
        - total_comment_count
        - engagement_relevance_score
        - postive_comment_count
        - negative_comment_count
        - neutral_comment_count
        - purchase_intent_comment_count
    ContentInformationObject:
      title: ContentInformationObject
      type: object
      properties:
        content_url:
          type: string
          description: URL of the content
          format: uri
        status:
          type: string
          description: Status of the analysis of comments on the given content URL
          enum:
            - SUCCESS
            - FAILURE
        comment_analytics_job_id:
          type: string
          description: Unique job ID of the comments analysis of the associated content URL
          format: uuid
      required:
        - content_url
        - status
        - comment_analytics_job_id
    AsyncCreatorSearchResponse:
      title: AsyncCreatorSearchResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - SUCCESS
            - IN_PROGRESS
            - FAILURE
        data:
          type: array
          items:
            type: object
            properties:
              work_platform:
                $ref: '#/components/schemas/WorkPlatformAttribute'
              platform_username:
                type: string
              url:
                type: string
                format: uri
              image_url:
                type: string
                format: uri
              full_name:
                type: string
              introduction:
                type: string
              is_verified:
                type: boolean
              platform_account_type:
                type: string
              gender:
                type: string
              age_group:
                type: string
              language:
                type: string
              follower_count:
                type: integer
              subscriber_count:
                type: integer
              content_count:
                type: integer
              engagement_rate:
                type: number
              location:
                type: object
                properties:
                  city:
                    type: string
                  state:
                    type: string
                  country:
                    type: string
              contact_details:
                type: object
                properties:
                  type:
                    type: string
                  value:
                    type: string
              metadata:
                type: object
                properties:
                  total_results:
                    type: string
                  limit:
                    type: string
                  offset:
                    type: string
    ProfessionalCommentsResponse:
      title: ProfessionalCommentsResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: InsightIQ's unique job ID.
        status:
          type: string
          enum:
            - IN_PROGRESS
            - SUCCESS
            - FAILURE
          description: Status of the job.
        data:
          type: array
          description: Array of content comments objects.
          items:
            type: object
            properties:
              work_platform:
                $ref: '#/components/schemas/WorkPlatformAttribute-Professional'
              platform_content_id:
                type: string
                description: Platform content identifier for the post for which the comments have been fetched.
              content_url:
                type: string
                format: uri
                description: Content URL for which comments are fetched
              comment_url:
                type: string
                format: uri
                description: Comment URL
              text:
                type: string
                description: Comment text
              engagement:
                type: object
                properties:
                  like_count:
                    type: integer
                    description: Like count of the comment
                  applause_count:
                    type: integer
                    description: Applause count of the comment
                  support_count:
                    type: integer
                    description: Support count of the comment
                  love_count:
                    type: integer
                    description: Love count of the comment
                  interest_count:
                    type: integer
                    description: Interest count of the comment
                  reply_count:
                    type: integer
                    description: Reply count of the comment
              hashtags:
                type: array
                description: Hashtags in the comment text if any
                items:
                  type: string
              media_urls:
                type: array
                description: Media URLs in the comment text if any
                items:
                  type: string
                  format: uri
              links:
                type: array
                description: URLs in the comment text if any
                items:
                  type: string
                  format: uri
              mentions:
                type: array
                items:
                  type: object
                  properties:
                    platform_username:
                      type: string
                      description: Mentioned username
                    first_name:
                      type: string
                      description: Display name of mentioned profile
              commenter_username:
                type: string
                description: Platform username of the commenter
              commenter_display_name:
                type: string
                description: Commenter display name
              published_at:
                type: string
                description: Comment publishing timestamp
                format: date-time
              metadata:
                type: object
                properties:
                  limit:
                    type: integer
                  offset:
                    type: integer
            required:
              - work_platform
              - platform_content_id
              - content_url
              - comment_url
              - text
              - engagement
              - commenter_username
              - commenter_display_name
              - published_at
      required:
        - id
        - status
        - data
    SafetyProfileURL:
      title: SafetyProfileURL
      type: object
      required:
        - work_platform_id
        - profile_url
        - flagging_criteria_id
      properties:
        work_platform_id:
          type: string
          format: uuid
          description: Unique ID of the work platform
        profile_url:
          type: string
          format: uri
          description: Profile URL to be analysed
        flagging_criteria_id:
          type: string
          format: uuid
          description: 'Flagging criteria ID (if no flagging ID is passed, default criteria will be used for flagging)'
      x-examples:
        Example 1:
          work_platform_id: 69dc0dd2-b78e-4013-b0d6-5693bb48b548
          profile_url: 'http://example.com'
          flagging_criteria_id: a1bc74e8-4b11-41a4-971c-420590a700dd
    SafetyContentURL:
      title: SafetyContentURL
      type: object
      required:
        - work_platform_id
        - content_url
      properties:
        work_platform_id:
          type: string
          format: uuid
          description: Unique ID of the work platform
        content_url:
          type: string
          format: uri
          description: Content URL to be analysed
        flagging_criteria_id:
          type: string
          x-stoplight:
            id: 93osxzh25h7vv
    RiskScoreResponse:
      title: RiskScoreResponse
      type: object
      x-examples:
        Example 3:
          id: 6ab9bc16-0bc1-40d3-91ab-4f7985b3d716
          status: SUCCESS
          report_summary:
            risk_rating: LOW
            total_content_count: 100
            flagged_content_count: 2
          error:
            erorr_type: INTERNAL_SERVER_ERROR
            error_code: internal_server_error
            error_message: 'There was an error processing this request, please contact us with the request ID'
      required:
        - id
        - status
        - report_summary
        - error
      properties:
        id:
          type: string
          format: uuid
          description: Unique id of the submitted request
        status:
          type: string
          enum:
            - SUCCESS
            - IN_PROGRESS
            - FAILURE
          description: Status of the job
        report_summary:
          $ref: '#/components/schemas/RiskScoreReportDetails'
        error:
          type: object
          description: Error
          nullable: true
          properties:
            error_type:
              type: string
              x-stoplight:
                id: rnyvydkc9dw1l
              example: INTERNAL_SERVER_ERROR
            error_code:
              type: string
              x-stoplight:
                id: drwwzoaoijhl6
              example: internal_server_error
            error_message:
              type: string
              x-stoplight:
                id: dbcnfsnkssygg
              example: 'There was an error processing this request, please contact us with the request ID'
    RiskScoreReportDetails:
      title: RiskScoreReportDetails
      type: object
      description: Risk report for the given input
      x-examples:
        Example 1:
          risk_rating: HIGH
          total_content_count: 0
          flagged_content_count: 0
          pending_items: 0
          url: string
      required:
        - risk_rating
        - total_content_count
        - flagged_content_count
        - url
      properties:
        risk_rating:
          x-stoplight:
            id: 91ez2dcgn204m
          enum:
            - HIGH
            - LOW
            - MEDIUM
          description: Overall safety rating
        total_content_count:
          type: integer
          x-stoplight:
            id: qo5jielmghg68
          description: Count of total items
        flagged_content_count:
          type: integer
          x-stoplight:
            id: i8npd7b89fw4w
          description: Count of high risk items
        url:
          type: string
          x-stoplight:
            id: k4ua6tn3avril
          description: The URL of the content item being analyzed.
    Risk:
      title: Risk
      type: object
      x-examples:
        Example 1:
          category: violence
          reason: violence
          score: 0
      description: 'An array containing the risks identified for the content. If none exists, then an empty array is returned'
      required:
        - category
        - reason
        - score
      properties:
        category:
          enum:
            - violence
            - substances
            - sexual_indecent_content
            - hate_speech_aggression
            - audio_language_toxicity
            - caption_language_toxicity
          description: 'The type of risk identified (refer to this [Airtable](https://airtable.com/appF9kKBd2aUPzvLx/shri5IHb98NV8BEAN) for more details)'
        reason:
          enum:
            - violence
            - firearm
            - knife
            - violent_knife
            - alcohol
            - drink
            - smoking_and_tobacco
            - marijuana
            - pills
            - recreational_pills
            - adult_content
            - adult_toys
            - exposed_anus
            - exposed_buttocks
            - exposed_breast_f
            - exposed_genitalia_f
            - exposed_genitalia_m
            - confederate_flag
            - pepe_frog
            - nazi_swastika
            - toxic
            - severe_toxic
            - obscene
            - insult
            - identity_hate
            - threat
            - sexual_explicit
          description: 'The reason for the risk (refer to this [Airtable](https://airtable.com/appF9kKBd2aUPzvLx/shri5IHb98NV8BEAN) for more details)'
        score:
          type: number
          minimum: 0
          maximum: 1
          format: float
          description: 'Risk score for the content item (refer to this [Airtable](https://airtable.com/appF9kKBd2aUPzvLx/shri5IHb98NV8BEAN) for more details)'
    RiskContentReport:
      title: RiskContentReport
      type: object
      x-examples:
        Example 2:
          url: string
          media_url: 'http://example.com'
          thumbnail_url: string
          risks:
            - category: violence
              reason: violence
              score: 0
          raw_response:
            - category: violence
              reason: violence
              score: 0
        Example 1:
          work_platform:
            id: 179a0bb4-c572-4477-9457-7dacf1b84848
            name: Instagram
            logo_url: 'https://insightiq.ai/storage/instagram.png'
            created_at: '2020-03-27T12:56:34.534978'
            updated_at: '2020-03-27T12:56:34.534978'
            category: MEDIA
            status: ACTIVE
            url: 'https://www.instagram.com'
            products:
              identity:
                is_supported: true
                audience:
                  is_supported: true
              engagement:
                is_supported: true
                audience:
                  is_supported: true
              income:
                is_supported: true
              switch:
                is_supported: true
              activity:
                is_supported: true
              publish:
                is_supported: true
          url: string
          media_url: 'http://example.com'
          thumbnail_url: string
          risks:
            - category: violence
              reason: violence
              score: 0
          raw_response:
            - category: violence
              reason: violence
              score: 0
      description: Risk report for each individual content
      required:
        - url
        - risks
      properties:
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        url:
          type: string
          description: URL of the content item that is analyzed for risk
        media_url:
          type: string
          description: 'The URL of the media file associated with the content item (e.g., video, image)'
          nullable: true
        thumbnail_url:
          type: string
          description: 'The URL of the thumbnail image for the content item, if available. If not, the value will be null.'
          format: uri
        title:
          type: string
          x-stoplight:
            id: 6t3n3j895zoy7
          description: The title or caption associated with the content item
        published_at:
          type: string
          x-stoplight:
            id: 1ml736wc6vgl1
          description: The date and time when the content was published
          format: date-time
          example: '2023-04-23T12:00:00'
        risks:
          type: array
          x-stoplight:
            id: w153bl8xp5k99
          items:
            $ref: '#/components/schemas/Risk'
        keywords:
          type: array
          x-stoplight:
            id: xnnr58jpfhx23
          description: List of keywords identified in the content
          items:
            x-stoplight:
              id: jbu556f0qrq7n
            type: object
            properties:
              term:
                type: string
                x-stoplight:
                  id: 9hqbysw9wowr2
                description: The keyword or phrase found in the content
              action:
                type: string
                x-stoplight:
                  id: wbcu6ielf3djg
                description: The action associated with the keyword
                example: INCLUDE
              match_type:
                type: array
                x-stoplight:
                  id: q3n13rw7zxcue
                description: Types of keyword matching used
                items:
                  x-stoplight:
                    id: gqj5rmo0dluua
                  type: string
                  example: EXACT
    ContentRiskScoreResponse:
      title: ContentRiskScoreResponse
      description: Response for content risk scores
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RiskContentReport'
        metadata:
          $ref: '#/components/schemas/BasicMetadata'
      x-examples:
        Example 1:
          data:
            - url: 'https://www.instagram.com/p/DEx2o0oMA0i'
              media_url: 'https://scontent-iad3-1.cdninstagram.com/o1/v/t16/f2/m84/AQMrBOUpDIhJR1E-w3xbIc-_ONAuyrmEKrR-ZdO2hwvZqhPMB0MjUjYuQ1wNWxsxqZQy0F6DDppC4NIPGoHeimZkoSLsyqjC3FjNrbk.mp4?efg=eyJ4cHZfYXNzZXRfaWQiOjYyNzUyMzI5NjQ0MTIzOCwidmVuY29kZV90YWciOiJ4cHZfcHJvZ3Jlc3NpdmUuSU5TVEFHUkFNLkNBUk9VU0VMX0lURU0uQzMuNzIwLmRhc2hfYmFzZWxpbmVfMV92MSJ9&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_cat=104&vs=ec8fe56e9c085fb8&_nc_vs=HBksFQIYTGlnX2JhY2tmaWxsX3RpbWVsaW5lX3ZvZC9FRDQ2RDg4OTU5QzdENTU4M0FFQTUwMUI2REQ0QzFBNl92aWRlb19kYXNoaW5pdC5tcDQVAALIAQAVAhg6cGFzc3Rocm91Z2hfZXZlcnN0b3JlL0dGRGFNeHo5cUVVdEgzQUlBTloxSGt1WGpITWZia1lMQUFBRhUCAsgBACgAGAAbAogHdXNlX29pbAExEnByb2dyZXNzaXZlX3JlY2lwZQExFQAAJqzO4fLUrp0CFQIoAkMzLBdALZmZmZmZmhgSZGFzaF9iYXNlbGluZV8xX3YxEQB17gcA&ccb=9-4&oh=00_AYBsbQk8I3MkNeyOfWI32936RRmMt-xJMiMuOYefVjYtmg&oe=679337F5&_nc_sid=1d576d'
              published_at: '2025-01-13T20:20:29'
              thumbnail_url: 'https://scontent-iad3-1.cdninstagram.com/v/t51.2885-15/473631425_18485726794031785_7592957288225343621_n.jpg?stp=dst-jpg_e15_s480x480_tt6&efg=eyJ2ZW5jb2RlX3RhZyI6ImltYWdlX3VybGdlbi43MjB4NzIwLnNkci5mNzU3NjEuZGVmYXVsdF9jb3Zlcl9mcmFtZSJ9&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_cat=101&_nc_ohc=wUbg3luJQr4Q7kNvgG2HBH_&_nc_gid=38b34d6c6ef24e59a7f57591524c9c5d&edm=ABmJApABAAAA&ccb=7-5&ig_cache_key=MzU0NDg1NDI0ODM2MjgwMDcwMg%3D%3D.3-ccb7-5&oh=00_AYBTMTG7XO3a8kemfkJ7AAVqv9ubCBWie8liHzjzUFxlLw&oe=6797399C&_nc_sid=b41fef'
              title: null
              risks:
                - category: hate_speech_aggression
                  classification: null
                  reason: obscene
                - category: hate_speech_aggression
                  classification: null
                  reason: toxicity
              keywords:
                - term: string
                  action: INCLUDE
                  match_type:
                    - EXACT
                    - SYNONYM
                    - STEMMING
          metadata:
            offset: 10
            limit: 10
    SnapchatContentAudienceDemographicsResponse:
      title: SnapchatContentAudienceDemographicsResponse
      allOf:
        - type: object
          required:
            - id
            - status
            - data
          properties:
            id:
              type: string
              description: Unique ID of the demographics report
            status:
              type: string
              description: Status of the submitted job
              enum:
                - IN_PROGRESS
                - SUCCESS
                - FAILURE
            data:
              type: object
              required:
                - report
                - creators
                - posts
                - audience
              properties:
                report:
                  type: object
                  required:
                    - created_at
                    - content_urls
                    - failed_content_urls
                    - creator_count
                    - post_count
                    - total_like_count
                    - total_reach_count
                  properties:
                    created_at:
                      type: string
                      description: Object creation timestamp (UTC date and time in ISO 8601 format)
                      example: '2020-03-27T12:56:34.534978'
                      format: date-time
                    content_urls:
                      type: array
                      description: Content URLs which were successfully analysed.
                      maxItems: 5
                      minItems: 1
                      items:
                        type: string
                        format: uri
                    failed_content_urls:
                      type: array
                      description: Content URLs which weren't analysed due to some failure.
                      maxItems: 5
                      minItems: 1
                      items:
                        type: string
                        format: uri
                    creator_count:
                      type: integer
                    post_count:
                      type: integer
                      nullable: true
                    total_like_count:
                      type: integer
                      nullable: true
                    total_reach_count:
                      type: integer
                      nullable: true
                creators:
                  type: object
                  required:
                    - full_name
                    - platform_profile_name
                    - url
                    - image_url
                    - follower_count
                    - analysed_post_count
                    - is_verified
                  properties:
                    full_name:
                      type: string
                      description: Full name
                    platform_profile_name:
                      type: string
                      example: Peter Parker
                      description: |-
                        User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

                        Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
                    url:
                      type: string
                      format: uri
                      description: Profile URL from the platform
                    image_url:
                      type: string
                      format: uri
                      description: Profile image URL from the platform
                    follower_count:
                      type: integer
                      description: Number of followers
                    analysed_post_count:
                      type: integer
                      description: Number of post analysed for this profile
                    is_verified:
                      type: boolean
                      description: Whether the profile is verified by the platform
                posts:
                  type: object
                  required:
                    - platform_profile_name
                    - url
                    - thumbnail_url
                    - format
                    - published_at
                    - title
                    - like_count
                    - view_count
                    - share_count
                    - hashtags
                  properties:
                    platform_profile_name:
                      type: string
                      description: |-
                        User's profile name on the work platform. This is not unique, is displayed prominently on the profile, usually editable and is most commonly associated with that user's identity on the platform.

                        Ex - For YouTube, it's the channel name displayed on the channel page and for Instagram / Twitter / TikTok etc, it's the name displayed on the user's profile page.
                    url:
                      type: string
                      description: Platform content URL.
                      example: 'https://youtu.be/jzWweY4xPe8'
                      format: uri
                    thumbnail_url:
                      type: string
                      example: 'https://youtu.be/jzWweY4xPe8.png'
                      format: uri
                      description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.'
                    format:
                      type: string
                      description: Media type of the content item.
                      enum:
                        - VIDEO
                        - IMAGE
                        - AUDIO
                        - TEXT
                        - OTHER
                      example: VIDEO
                    published_at:
                      type: string
                      example: '2021-05-26T00:00:00.000000'
                      format: date-time
                      description: Publishing timestamp of the content.
                    title:
                      type: string
                      description: Title of the content item.
                      example: USA Tours
                    like_count:
                      type: integer
                      description: Total likes.
                      example: 42134
                      nullable: true
                    view_count:
                      type: integer
                      description: Total views including replays.
                      example: 42343
                      nullable: true
                    share_count:
                      type: integer
                      description: Total shares.
                      example: 42343
                      nullable: true
                    hashtags:
                      type: array
                      description: 'List of hashtags found in the title or description of the content item. If there are no hashtags in the title or description of the content item, then the attribute will be null.'
                      nullable: true
                      items:
                        type: string
                        example: '[''#couponcommunity'', ''#amazonfinds'', ''#like'', ''#amazondeals'', ''#promocodes'', ''#rundeal'', ''#explorepage'', ''#amazon'', ''#neverpayfullprice'', ''#onlinedeals'']'
                audience:
                  type: object
                  required:
                    - gender_age_distribution
                    - countries
                  properties:
                    gender_age_distribution:
                      type: array
                      items:
                        type: object
                        required:
                          - gender
                          - age_range
                          - value
                        properties:
                          gender:
                            type: string
                            enum:
                              - MALE
                              - FEMALE
                              - OTHERS
                            example: FEMALE
                            description: Gender of the audience
                          age_range:
                            type: string
                            example: 13-18
                            description: Age range of the audience
                          value:
                            type: number
                            example: 12.3
                            description: Percentage value of demographics from the corresponding gender in the corresponding age range
                    countries:
                      type: array
                      items:
                        type: object
                        required:
                          - code
                          - value
                        properties:
                          code:
                            type: string
                            description: 2 letter country code as per ISO 3166-1 alpha-2
                            example: US
                          value:
                            type: number
                            description: Percentage value of demographics from the corresponding country
                            example: 78.9
        - $ref: '#/components/schemas/Error'
      description: ''
    ProfileScreeningRequest:
      title: ProfileScreeningRequest
      type: object
      x-examples:
        Example 1:
          first_name: string
          middle_name: string
          last_name: string
          flagging_criteria_id: a1bc74e8-4b11-41a4-971c-420590a700dd
          date_of_birth: '2019-08-24'
          social_media_profiles_analysed:
            - work_platform_id: 69dc0dd2-b78e-4013-b0d6-5693bb48b548
              profile_url:
                - string
          emails:
            - user@example.com
          contact_numbers:
            - string
          addresses:
            - city: string
              state: string
              country: string
              start_date: '2019-08-24'
              end_date: '2019-08-24'
              line1: string
              line2: string
              line3: string
          work_experiences:
            - job_title: string
              employer_name: string
              start_date: '2019-08-24'
              end_date: '2019-08-24'
          education:
            - degree: string
              institution_name: string
              start_date: '2019-08-24'
              end_date: '2019-08-24'
          aliases:
            - string
          profile_image_url: 'http://example.com'
      required:
        - first_name
        - last_name
        - emails
      properties:
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        flagging_criteria_id:
          type: string
          format: uuid
          description: 'Flagging criteria ID (if no flagging ID is passed, default criteria will be used for flagging)'
        date_of_birth:
          type: string
          format: date
          description: ' Date of birth in YYYY-MM-DD format'
        social_media_profiles:
          type: array
          items:
            type: object
            properties:
              work_platform_id:
                type: string
                format: uuid
              profile_url:
                type: array
                items:
                  type: string
        emails:
          type: array
          items:
            type: string
            format: email
        contact_numbers:
          type: array
          items:
            type: string
        addresses:
          type: array
          items:
            type: object
            properties:
              city:
                type: string
              state:
                type: string
              country:
                type: string
              start_date:
                type: string
                format: date
                description: YYYY-MM-DD format
              end_date:
                type: string
                format: date
                description: YYYY-MM-DD format
              line1:
                type: string
              line2:
                type: string
              line3:
                type: string
              '':
                type: string
                x-stoplight:
                  id: a9vz5pndk7289
        work_experiences:
          type: array
          items:
            type: object
            properties:
              job_title:
                type: string
                x-stoplight:
                  id: 2r5ec9uqqpxmn
              employer_name:
                type: string
                x-stoplight:
                  id: k8rxhcqh2hf83
              start_date:
                type: string
                format: date
                description: YYYY-MM-DD format
              end_date:
                type: string
                format: date
                description: YYYY-MM-DD format
        education:
          type: array
          items:
            type: object
            properties:
              degree:
                type: string
                x-stoplight:
                  id: j192b4bls4b78
              institution_name:
                type: string
                x-stoplight:
                  id: 9az605tu35t40
              start_date:
                type: string
                format: date
                description: YYYY-MM-DD format
              end_date:
                type: string
                format: date
                description: YYYY-MM-DD format
        aliases:
          type: array
          items:
            type: string
        profile_image_url:
          type: string
          x-stoplight:
            id: lpczqrbzgcede
          format: uri
          example: 'http://example.com'
    ProfileScreeningResponse:
      title: ProfileScreeningResponse
      allOf:
        - type: object
          required:
            - id
            - status
          properties:
            id:
              type: string
              format: uuid
              description: Unique id of the submitted request
            status:
              enum:
                - FAILURE
                - IN_PROGRESS
                - SUCCESS
            report_summary:
              type: object
              properties:
                url:
                  type: string
                  x-stoplight:
                    id: 9gnw6ep4zyncz
                  format: uri
                  description: Link to PDF report
                flagged_content_count:
                  type: integer
                risk_rating:
                  enum:
                    - HIGH
                    - MEDIUM
                    - LOW
                total_content_count:
                  type: integer
                  x-stoplight:
                    id: b9iztdoh28vv1
            media_sources_analysed:
              type: array
              items:
                type: object
                properties:
                  work_platform:
                    $ref: '#/components/schemas/WorkPlatformAttribute'
                  profile_url:
                    type: string
                    x-stoplight:
                      id: c1ndavgztg8lu
                    format: uri
                  status:
                    type: string
        - $ref: '#/components/schemas/ProfileScreeningRequest'
      x-examples:
        Example 1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          status: FAILURE
          report_summary:
            flagged_content_count: 0
            risk_rating: HIGH
            report_url: 'http://example.com'
          media_sources_analysed:
            - work_platform:
                id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
                name: Instagram
                logo_url: 'https://insightiq.ai/storage/instagram.png'
              handle: 'http://example.com'
              status: string
          first_name: string
          middle_name: string
          last_name: string
          flagging_criteria_id: a1bc74e8-4b11-41a4-971c-420590a700dd
          date_of_birth: '2019-08-24'
          social_media_profiles_analysed:
            - work_platform_id: 69dc0dd2-b78e-4013-b0d6-5693bb48b548
              profile_url:
                - string
          emails:
            - user@example.com
          contact_numbers:
            - string
          addresses:
            - city: string
              state: string
              country: string
              start_date: '2019-08-24'
              end_date: '2019-08-24'
              line1: string
              line2: string
              line3: string
          work_experiences:
            - job_title: string
              employer_name: string
              start_date: '2019-08-24'
              end_date: '2019-08-24'
          education:
            - degree: string
              institution_name: string
              start_date: '2019-08-24'
              end_date: '2019-08-24'
          aliases:
            - string
          profile_image_url: 'http://example.com'
    ProfileScreeningContentResponse:
      title: ProfileScreeningContentResponse
      type: object
      x-examples:
        Example 1:
          data:
            - work_platform:
                id: 36410629-f907-43ba-aa0d-434ca9c0501a
                name: LinkedIn
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_linkedin.png'
              url: 'https://www.linkedin.com/feed/update/urn:li:ugcPost:7055875587868921856/'
              media_url: 'https://media.licdn.com/dms/image/v2/D5622AQEyRuDNr9ETOw/feedshare-shrink_2048_1536/feedshare-shrink_2048_1536/0/1682251829920?e=1734566400&v=beta&t=XRwoIUEJGo48EJZAEqHnw4ykkj0DiaQ4bcZuIOTfSgg'
              thumbnail_url: null
              risks:
                - category: hate_speech_aggression
                  reason: toxicity
                - category: hate_speech_aggression
                  reason: identity_attack
              title: "Reflecting on our work at Luminis Health  during the month of April to focus on #nationalminorityhealthmonth and more specifically #blackmaternalhealthweek we continue to revisit and expand our Culturally Customized Care standards and curriculum and we are reminded that there is Never a \"one size fits all\" approach to care.As a collective care industry we MUST do better- Lives are depending on it. #healthcare #healthequity #jedi #blackmaternalhealth #blackmamasmatter #nationalminorityhealthmonth #browngirlcollective #obgyn \nThis is my work, but it's personal for me.\U0001F90E"
              published_at: '2023-04-23T12:00:00'
          metadata:
            offset: 0
            limit: 12
      description: 'The response contains the analyzed content data, including the platform details, media URLs, risks, and metadata for each post.'
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RiskContentReport'
        metadata:
          type: object
          x-stoplight:
            id: lpi9edt372jci
          description: Contains pagination details for the response
          required:
            - offset
            - limit
          properties:
            offset:
              type: integer
              x-stoplight:
                id: kt56iudc4fugf
              description: The offset value passed in the query parameter for pagination
              default: 0
              example: 10
            limit:
              type: integer
              x-stoplight:
                id: jxsemmj0rnurx
              description: The limit value passed in the query parameter for pagination
              default: 12
              example: 12
    CreateScreeningFlaggingCriteria:
      type: object
      x-examples:
        Example 4:
          name: Flagging Criteria name
          media_types:
            - IMAGE
          time_period_in_months: 0
          content_limit: 0
          work_platforms:
            - id: string
          categories:
            - 'violence, substances, sexual_indecent_content, hate_speech_aggression, audio_language_toxicity, caption_language_toxicity'
          keywords:
            - term: string
              action:
                - INCLUDE
              match_type:
                - 'EXACT, STEMMING, SYNONYM'
      title: CreateScreeningFlaggingCriteria
      required:
        - name
      properties:
        id:
          type: string
          x-stoplight:
            id: tblpx6y4bwt6t
        name:
          type: string
          example: Flagging Criteria name
        media_types:
          type: array
          items:
            x-stoplight:
              id: qzvxbd4a94bgc
            enum:
              - IMAGE
              - VIDEO
        time_period_in_months:
          type: integer
          description: Defines the timeframe (in months) for analyzing posts. Only content created within this period will be considered.
        content_limit:
          type: integer
          description: Maximum number of content items to be evaluated.
        work_platforms:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: work_platform_id of the platform the evaluation is expected to be done on
        categories:
          type: array
          description: List of sensitivities to add in the flagging criteria. Category of risk
          items:
            x-stoplight:
              id: zma0efu0y9mai
            type: string
            example: 'violence, substances, sexual_indecent_content, hate_speech_aggression, audio_language_toxicity, caption_language_toxicity'
        keywords:
          type: array
          items:
            type: object
            properties:
              term:
                type: string
                description: 'The term or phrase to search for in the content (e.g., “climate change”).'
              action:
                type: array
                description: Determines whether to flag (INCLUDE) or ignore (EXCLUDE) content with the keyword.
                items:
                  x-stoplight:
                    id: v7vtrl8inyz7b
                  enum:
                    - INCLUDE
                    - EXCLUDE
              match_type:
                type: array
                description: 'Specifies how to match the keyword: exact term (EXACT), word variations (STEMMING), or synonyms (SYNONYM). Defaults to EXACT.'
                items:
                  x-stoplight:
                    id: 7cgnhk04pwjbe
                  type: string
                  example: 'EXACT, STEMMING, SYNONYM'
    CreateScreeningFlaggingCriteria_copy:
      type: object
      x-stoplight:
        id: kp96wcuxz6rub
      x-examples:
        Example 1:
          id: string
          name: Flagging Criteria name
          media_types:
            - IMAGE
          time_period_in_months: 0
          content_limit: 0
          work_platforms:
            - id: string
          categories:
            - string
          keywords:
            - term: string
              action:
                - INCLUDE
              match_type:
                - string
      required:
        - name
      properties:
        id:
          type: string
          x-stoplight:
            id: zi5vyn6wiwccf
        name:
          type: string
          example: Flagging Criteria name
        media_types:
          type: array
          items:
            enum:
              - IMAGE
              - VIDEO
        time_period_in_months:
          type: integer
          description: Defines the timeframe (in months) for analyzing posts. Only content created within this period will be considered.
        content_limit:
          type: integer
          description: Maximum number of content items to be evaluated.
        work_platforms:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: work_platform_id of the platform the evaluation is expected to be done on
        categories:
          type: array
          description: List of sensitivities to add in the flagging criteria. Category of risk
          items:
            type: string
        keywords:
          type: array
          items:
            type: object
            required:
              - term
              - action
            properties:
              term:
                type: string
                description: 'The term or phrase to search for in the content (e.g., “climate change”).'
              action:
                type: array
                description: Determines whether to flag (INCLUDE) or ignore (EXCLUDE) content with the keyword.
                items:
                  enum:
                    - INCLUDE
                    - EXCLUDE
              match_type:
                type: array
                description: 'Specifies how to match the keyword: exact term (EXACT), word variations (STEMMING), or synonyms (SYNONYM). Defaults to EXACT.'
                items:
                  type: string
      title: ScreeningCriteriaResponse
    ScreeningFlaggingCriteriaList:
      type: object
      x-examples:
        Example 1:
          name: Flagging Criteria name
          media_types:
            - IMAGE
            - VIDEO
          time_period_in_months: 84
          content_limit: 150
          work_platforms:
            - id: 9bb8913b-ddd9-430b-a66a-d74d846e6c66
            - id: a22c6022-5226-55f4-a436-3693f2148bd4
          categories:
            - violence
            - substances
            - sexual_indecent_content
            - hate_speech_aggression
            - audio_language_toxicity
            - caption_language_toxicity
          keywords:
            - term: keyword1
              action: INCLUDE
              match_type:
                - EXACT
                - STEMMING
                - SYNONYM
            - term: keyword2
              action: EXCLUDE
              match_type:
                - EXACT
      required:
        - name
      properties:
        id:
          type: string
          x-stoplight:
            id: 7e941mp2rmd5d
          format: uuid
        name:
          type: string
        media_types:
          type: array
          items:
            type: string
        time_period_in_months:
          type: integer
          description: Defines the timeframe (in months) for analyzing posts. Only content created within this period will be considered.
        content_limit:
          type: integer
          description: Maximum number of content items to be evaluated.
        work_platforms:
          type: array
          description: work_platform_id of the platform the evaluation is expected to be done on.
          items:
            type: object
            properties:
              id:
                type: string
        categories:
          type: array
          items:
            type: string
            example: violence
        keywords:
          type: array
          items:
            type: object
            required:
              - term
              - action
            properties:
              term:
                type: string
                description: The term or phrase to search for in the content
              action:
                enum:
                  - INCLUDE
                  - EXCLUDE
                description: Determines whether to flag (INCLUDE) or ignore (EXCLUDE) content with the keyword.
              match_type:
                type: array
                description: 'Specifies how to match the keyword: exact term (EXACT), word variations (STEMMING), or synonyms (SYNONYM). Defaults to EXACT.'
                items:
                  type: string
    ProfessionalCreatorSearchRequest:
      type: object
      title: ProfessionalCreatorSearchRequest
      required:
        - work_platform_id
        - sort_by
      properties:
        work_platform_id:
          type: string
          description: Target platform to search public profiles on
        follower_count:
          type: object
          description: Filter profiles by follower count
          properties:
            min:
              type: integer
              description: Minimum followers
            max:
              type: integer
              description: Maximum followers
        content_count:
          type: object
          description: Filter profiles by content count
          properties:
            min:
              type: integer
              description: Minimum number of contents
            max:
              type: integer
              description: Maximum number of contents
        has_contact_details:
          type: boolean
          description: Filter profiles by availability of contact details
        last_post_timestamp:
          type: string
          description: Filter profiles by the timestamp (ISO 8601) of last post
          format: date-time
          example: '2019-08-24T14:15:22'
        average_likes:
          type: object
          description: Filter profiles by average likes
          properties:
            min:
              type: integer
              description: Minimum average likes of creator
            max:
              type: integer
              description: Maximum average likes of creator
        average_comments:
          type: object
          description: Filter profiles by average comments
          properties:
            min:
              type: integer
              description: Minimum average views of creator
            max:
              type: integer
              description: Maximum average views of creator
        average_shares:
          type: object
          description: Filter profiles by average shares
          properties:
            min:
              type: integer
              description: Minimum average views of creator
            max:
              type: integer
              description: Maximum average views of creator
        engagement_rate:
          type: object
          description: Filter profiles by engagement rates
          required:
            - percentage_value
          properties:
            percentage_value:
              type: string
              description: 'Percentage value for the comparison, which would always be a "greater than or equal to" comparison'
        creator_location_names:
          type: array
          x-stoplight:
            id: twi2syp6wywmo
          description: 'InsightIQ''s location identifers to be passed to this attribute. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1professional~1creators~1dictionary~1locations/get) to know the identifier for the location filter of your choice'
          items:
            x-stoplight:
              id: kiq80mqj1rqve
            type: string
        bio_phrase:
          type: string
          description: Filter profiles by the phrase they use in their bio
        hashtags:
          type: array
          description: Filter profiles by hashtags in posts.
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: 'Please provide hashtags without # prefix'
        talks_about:
          type: array
          description: Filter profiles by hashtags mentioned in profile.
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: 'InsightIQ''s talks about identifers to be passed to this attribute. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1professional~1creators~1dictionary~1talks-about/get) to know the identifier for the talks about filter of your choice.'
        mentions:
          type: array
          description: Filter profiles by post mentions.
          items:
            type: object
            required:
              - name
              - type
            properties:
              name:
                type: string
                description: Please provide mentions without @ prefix
              type:
                enum:
                  - COMPANY
        creator_account_type:
          type: array
          description: Filter profiles by creator account type
          items:
            type: string
            enum:
              - PREMIUM_USER
              - INFLUENCER
              - CREATOR
        sort_by:
          type: object
          description: Sorting order for the search results
          required:
            - field
            - order
          properties:
            field:
              type: string
              description: Field to sort by.
              enum:
                - AVERAGE_LIKES
                - FOLLOWER_COUNT
                - AVERAGE_SHARES
                - CONTENT_COUNT
                - AVERAGE_COMMENTS
            order:
              type: string
              enum:
                - DESCENDING
              description: Ordering pattern
        limit:
          type: integer
          description: The number of search results to be returned. It can be between 1 to 500. The default value is 10. Limit + offset should be less than 500.
          default: 10
          maximum: 500
        offset:
          type: integer
          description: The number of search results to skip. Use this argument for pagination. The default value is 0. Limit + offset should be less than 500.
          default: 0
        work_experiences:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              company:
                type: string
                format: uuid
                description: 'InsightIQ''s company identifer to be passed to this attribute. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1professional~1creators~1dictionary~1companies/get) to know the identifier for the company filter of your choice.'
        education:
          type: array
          items:
            type: object
            properties:
              institute:
                type: string
                format: uuid
                description: 'InsightIQ''s institute identifers to be passed to this attribute. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1professional~1creators~1dictionary~1education-institutes/get) to know the identifier for the institute filter of your choice.'
              degree:
                type: string
                format: uuid
                description: 'InsightIQ''s degree identifers to be passed to this attribute. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1professional~1creators~1dictionary~1education-degrees/get) to know the identifier for the degree filter of your choice.'
    ProfessionalCreatorSearchResponse:
      title: ProfessionalCreatorSearchResponse
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - full_name
              - url
              - image_url
              - follower_count
              - connection_count
              - work_platform
              - introduction
              - engagement_rate
              - creator_location
            properties:
              full_name:
                type: string
                description: Profile full name on the platform
              url:
                type: string
                format: uri
                description: Profile URL from the platform
              image_url:
                type: string
                format: uri
                description: Profile image URL from the platform
              follower_count:
                type: integer
                description: Number of followers
              connection_count:
                type: integer
                description: Number of connections
              work_platform:
                $ref: '#/components/schemas/WorkPlatformAttribute'
              introduction:
                type: string
                description: |-
                  Description of the profile. 

                  Ex - For Instagram it's the bio and for YouTube it's the channel introduction.
              engagement_rate:
                type: number
                description: 'Profile engagement rate, i.e., total likes of all posts divided by the number of followers'
              creator_location:
                type: object
                description: 'Profile location details. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1locations/get). You may also refer the "locations" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
                required:
                  - city
                  - state
                  - country
                properties:
                  city:
                    type: string
                    description: Profile location city
                  state:
                    type: string
                    description: Profile location state
                  country:
                    type: string
                    description: Profile location country
              external_id:
                type: string
              profile_headline:
                type: string
              talks_about:
                type: array
                items:
                  type: string
              current_positions:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    company:
                      type: string
                    description:
                      type: string
                    location:
                      type: string
                    time_period:
                      type: object
                      properties:
                        start_date:
                          type: string
                          format: date-time
                          description: Filter profiles by the timestamp (ISO 8601) of last post
                          example: '2019-08-24T14:15:22'
              creator_account_type:
                type: array
                items:
                  enum:
                    - CREATOR
                    - INFLUENCER
                    - PREMIUM_USER
              open_to:
                type: array
                items:
                  type: string
        metadata:
          type: object
          description: Metadata object representing meta information about resources.
          properties:
            offset:
              type: integer
              default: 0
            limit:
              type: integer
              default: 10
    ProfessionalProfilePublicAnalyticsDistResponse:
      type: object
      x-examples:
        Example 2:
          id: 7545db03-b87a-429f-9feb-13a9b21ba750
          created_at: '2024-11-26T09:33:27.917553'
          updated_at: '2024-11-26T09:47:01.489236'
          work_platform:
            id: 36410629-f907-43ba-aa0d-434ca9c0501a
            name: LinkedIn
            logo_url: 'https://cdn.getphyllo.com/platforms_logo/logos/logo_linkedin.png'
          is_creator: true
          is_influencer: false
          skills:
            - Strategic Planning
            - User Experience Design (UED)
            - Graphic Design
            - Adobe Photoshop
          first_name: Bhavika
          middle_name: ''
          sales_id: 'urn:li:fsd_profile:ACoAACjSyQsB91qSiOFh8HR95XvOZtdXRp-48U0'
          sales_link: 'https://www.linkedin.com/sales/lead/urn:li:fsd_profile:ACoAACjSyQsB91qSiOFh8HR95XvOZtdXRp-48U0'
          last_name: Nanda
          platform_username: bhavikananda
          profile_summary: Mastering the art of design with experience in balancing aesthetics and functionality.
          platform_account_type:
            - CREATOR
          url: 'https://www.linkedin.com/in/bhavikananda/'
          profile_headline: Senior Product Designer @Cars24
          image_url: 'https://media.licdn.com/dms/image/D5603AQF5KTj6AXkkDA/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1703260546251?e=1738195200&v=beta&t=6ld7BQGox4tTa5W1ZvxDwVCsDl56tw4LSOrN0mYkeTk'
          industry: 'Technology, Information and Internet'
          follower_count: 2317
          average_likes: 61.1
          average_comments: 5.4
          average_shares: 0.1
          engagement_rate: 2.88
          languages:
            - English
            - Hindi
          reputation:
            follower_count: 2317
            connection_count: 1643
          location:
            name: 'Gurugram, Haryana, India'
            country: IN
            city: Gurugram
            state: Haryana
          contact_details:
            - type: email
              value: bhavika.nanda@example.com
          top_contents:
            - type: IMAGE
              url: 'https://www.linkedin.com/feed/update/urn:li:activity:6935952506669666305'
              description: Sharing my NIFT graduation journey!
              thumbnail_url: 'https://media.licdn.com/dms/image/C4D22AQHOW9aerfv0lQ/feedshare/0/1653659940605'
              engagement:
                like_count: 441
                comment_count: 17
              published_at: '2022-05-27T13:59:01'
          recent_contents:
            - type: TEXT
              url: 'https://www.linkedin.com/feed/update/urn:li:activity:7249354426971267072'
              description: Promoted to Senior Product Designer at Cars24!
              thumbnail_url: null
              engagement:
                like_count: 228
                comment_count: 46
              published_at: '2024-10-08T09:46:21'
          top_hashtags:
            - name: design
            - name: uxdesign
          top_mentions:
            - name: Cars24
            - name: Snapdeal
          talks_about:
            - name: design
            - name: experiences
          work_experiences:
            - title: Senior Product Designer
              company:
                name: Cars24
                industries:
                  - Technology
                logo_url: 'https://www.cars24.com/logo.png'
                employee_count:
                  min: 5000
                  max: 10000
              description: Leading design for B2B products.
              time_period:
                start_date:
                  month: 10
                  year: 2024
                end_date: null
              location:
                name: Gurugram
                country: IN
                city: Gurugram
                state: Haryana
          education:
            - degree: Master's in Design
              field_study:
                - User Experience
              school:
                name: National Institute of Fashion Technology
                logo_url: null
              description: null
              time_period:
                start_date:
                  month: 1
                  year: 2020
                end_date:
                  month: 1
                  year: 2022
              activities: null
            - degree: Bachelor of Arts - BA Journalism and Mass Communication
              field_study:
                - Bachelor of Arts - BA
                - Journalism and Mass Communication
              school:
                name: Guru Gobind Singh Indraprastha University
                logo_url: null
              description: null
              time_period:
                start_date:
                  month: 1
                  year: 2017
                end_date:
                  month: 1
                  year: 2020
              activities: null
          publications: []
          certifications: []
          volunteer_experiences: []
          people_also_viewed:
            - last_name: Singh
              first_name: Pratima
              profile_headline: Deputy Manager Design at CARS24 | Ex-CollegeDekho
              entity_urn: 'urn:li:fsd_profile:ACoAACmcj3IB23MaezNvMriwTfqevSMmiTc8wtg'
              public_identifier: pratimasingh30
              premium: false
              image_url: 'https://media.licdn.com/dms/image/v2/D5603AQHvpmH5UEAYJw/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1682969325210?e=1738195200&v=beta&t=CGpPjI1F8hdZ8YYlZPkV0tJ0tg9oAD8t5TLc0_6UvZY'
              url: 'https://linkedin.com/in/ACoAACmcj3IB23MaezNvMriwTfqevSMmiTc8wtg'
              reputation:
                follower_count: 1835
          honors: []
          projects: []
          external_id: e13af45c-d123-4567-89ab-c1d2e3f4g5h6
          patents: []
          recommendations_received: []
          recommendations_given: []
      required:
        - id
        - created_at
        - updated_at
        - work_platform
        - first_name
        - last_name
        - url
        - follower_count
      properties:
        id:
          type: string
          description: Unique ID of the analytics report
        created_at:
          type: string
          description: User creation timestamp (UTC date and time in ISO 8601 format)
        updated_at:
          type: string
          description: User updation timestamp (UTC date and time in ISO 8601 format)
        work_platform:
          type: object
        is_creator:
          type: boolean
        is_influencer:
          type: boolean
        skills:
          type: array
          items:
            type: string
        first_name:
          type: string
          description: First name of the profile
        middle_name:
          type: string
          description: Middle name of the profile
        sales_id:
          type: string
        sales_link:
          type: string
        last_name:
          type: string
          description: Last name of the profile
        platform_username:
          type: string
        profile_summary:
          type: string
        platform_account_type:
          type: array
          items:
            type: string
        url:
          type: string
        profile_headline:
          type: string
        image_url:
          type: string
        industry:
          type: string
          description: Name of the industry mentioned on the profile
        follower_count:
          type: integer
        average_likes:
          type: integer
        average_comments:
          type: integer
        average_shares:
          type: integer
        engagement_rate:
          type: integer
        languages:
          type: array
          items:
            type: string
        reputation:
          type: object
          properties:
            follower_count:
              type: integer
            connection_count:
              type: integer
        location:
          type: object
          description: 'Profile location details. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1locations/get). You may also refer the "locations" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J).'
          properties:
            name:
              type: string
            country:
              type: string
              description: Profile location country
            country_name:
              type: string
            city:
              type: string
              description: Profile location city
            state:
              type: string
              description: Profile location state
        contact_details:
          type: array
          description: Publicly available contact information about the professional profile
          items:
            type: object
            required:
              - type
              - value
            properties:
              type:
                type: string
                description: 'Type of contact, for example: phone, email, twitter'
              value:
                type: string
                description: Contact information
        top_contents:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              url:
                type: string
              description:
                type: string
              thumbnail_url:
                nullable: true
              engagement:
                type: object
                properties:
                  like_count:
                    type: integer
                  comment_count:
                    type: integer
              published_at:
                type: string
        recent_contents:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              url:
                type: string
              description:
                type: string
              thumbnail_url:
                nullable: true
              engagement:
                type: object
                properties:
                  like_count:
                    type: integer
                  comment_count:
                    type: integer
              published_at:
                type: string
        top_hashtags:
          type: array
          description: List of top hashtags used by the creator
          items:
            type: object
            properties:
              name:
                type: string
        top_mentions:
          type: array
          description: List of top mentions used by the creator
          items:
            type: object
            properties:
              name:
                type: string
        talks_about:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
        work_experiences:
          $ref: '#/components/schemas/WorkExperiences'
        education:
          $ref: '#/components/schemas/Education'
        publications:
          type: array
          items:
            type: object
        certifications:
          type: array
          items:
            type: object
        volunteer_experiences:
          type: array
          items:
            type: object
        people_also_viewed:
          type: array
          items:
            type: object
            properties:
              last_name:
                type: string
              first_name:
                type: string
              profile_headline:
                type: string
              entity_urn:
                type: string
              public_identifier:
                type: string
              premium:
                type: boolean
              image_url:
                type: string
              url:
                type: string
              reputation:
                type: object
                properties:
                  follower_count:
                    type: integer
        honors:
          type: array
          items:
            type: object
        projects:
          type: array
          items:
            type: object
        external_id:
          type: string
        patents:
          type: array
          items:
            type: object
        recommendations_received:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              subtitle:
                type: string
              date:
                type: string
              context:
                type: string
              description:
                type: string
              urn:
                type: string
              url:
                type: string
        recommendations_given:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              subtitle:
                type: string
              date:
                type: string
              context:
                type: string
              urn:
                type: string
              url:
                type: string
      description: ''
    MediaRiskScoreResponse:
      type: object
      x-examples:
        Example 1:
          id: 49c31f23-0d09-4d78-aa5d-051fe5dc7083
          status: SUCCESS
          risk_rating: LOW
          error: string
          report:
            media_url: 'https://example.png'
            description: This is the caption associated with the Media
            risks: []
      description: 'The response contains the status, risk rating, and detailed report for the analyzed media content.'
      required:
        - id
        - status
        - risk_rating
        - error
        - report
      properties:
        id:
          type: string
          description: A unique identifier for the risk analysis job.
        status:
          description: The current status of the analysis job
          example: IN_PROGRESS
          enum:
            - IN_PROGRESS
            - SUCCESS
            - FAILED
        risk_rating:
          enum:
            - LOW
            - MEDIUM
            - HIGH
        error:
          type: string
          description: 'Details of any error encountered during the analysis. If no error occurred, the value will be `null`'
          nullable: true
        report:
          type: object
          required:
            - media_url
            - risks
          description: The detailed report for the analyzed media content
          properties:
            media_url:
              type: string
              description: The URL of the media asset being analyzed
            description:
              type: string
              description: The caption or Description associated with the media content
            risks:
              type: array
              description: 'An array of identified risks for the media content. If no risks are identified, the array will be empty'
              items:
                type: object
    TopicsResponse:
      title: TopicsResponse
      x-stoplight:
        id: 7w1jrph8z0ane
      type: object
      properties:
        'topics ':
          type: object
          x-stoplight:
            id: xpchzn1uvynqs
          description: Array of topic objects
          properties:
            id:
              type: string
              x-stoplight:
                id: 73eif38cld1iv
              format: uuid
              description: InsightIQ generated UUID for the topic
            name:
              type: string
              x-stoplight:
                id: 82l7wifao2nll
              description: "\t\nName of the topic"
              example: 'Marketing, Software Engineering, '
            sub_topics:
              type: object
              x-stoplight:
                id: 59u2vkzytxind
              properties:
                id:
                  type: string
                  x-stoplight:
                    id: b90mxi39kl7d9
                  format: uuid
                  description: InsightIIQ generated UUID for the subtopic
                name:
                  type: string
                  x-stoplight:
                    id: uqoza6t1nacxs
                  description: Name of the subtopic
                  example: 'Digital Marketing, Product Marketing'
    AudienceDataRequest:
      type: object
      x-examples:
        Example 1:
          work_platform_id: string
          identifier: string
          dry_run: false
          audience_type: all
          follower_count: 1000
          has_email: false
          limit: 0
      required:
        - work_platform_id
        - identifier
      properties:
        work_platform_id:
          type: string
          description: 'The social platform of the creator (e.g., instagram, tiktok, youtube)'
        identifier:
          type: string
          description: "\t\nThe creator’s username or profile link"
        dry_run:
          type: boolean
          description: 'If true, provides a count estimation of followers without returning their full data. '
          default: false
        audience_type:
          default: all
          description: |-
            Segment of the creator’s audience should be exported

            - `followers` and `likers` are only valid for Instagram/TikTok
            - `commenters` is only valid for YouTube
          enum:
            - all
            - followers
            - likers
            - commenters
        follower_count:
          type: object
          description: Follower count of the creator
          properties:
            min:
              type: integer
              x-stoplight:
                id: y3l9j9qn27bm4
              default: 1000
              description: The minimum follower count a user must have to be included
        has_email:
          type: boolean
          description: 'For dry_run=true requests, also returns how many users have a known email (optional)'
          default: false
        limit:
          type: integer
          x-stoplight:
            id: 07gk4aohtgma6
          description: 'Limits the number of results returned up to 100. For requests higher than 100, use multiple requests'
    HighfollowerAudienceCountResponse:
      type: object
      x-stoplight:
        id: 295af7e415ad7
      x-examples:
        Example 1:
          id: 21110560-9501-4d85-9654-ed060e040a5e
          work_platform:
            id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
            name: Instagram
            logo_url: 'https://insightiq.ai/storage/instagram.png'
          identifier: 'https://www.instagram.com/mahi7781/'
          dry_run: true
          audience_type: all
          follower_count:
            min: 1000
          has_email: true
          status: IN_PROGRESS
      required:
        - work_platform
        - identifier
      properties:
        id:
          type: string
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        identifier:
          type: string
          description: The creator’s username or profile link
        dry_run:
          type: boolean
          default: false
          description: |-
            If false, provides a count estimation and follower's full data.
            If true, provides a count estimation without returning the full data.
        audience_type:
          enum:
            - all
            - followers
            - likers
            - commenters
          default: all
          description: Specifies which segment of the creator’s audience should be exported
        follower_count:
          type: object
          properties:
            min:
              type: integer
              default: 1000
              description: The minimum follower count a user must have to be included
        has_email:
          type: boolean
          description: If the follower has an email or not
          default: false
        status:
          type: string
      description: ''
    AudienceDataResponse:
      type: object
      x-stoplight:
        id: 9223389031ed7
      x-examples:
        Example 1:
          id: 21110560-9501-4d85-9654-ed060e040a5e
          status: SUCCESS
          data:
            - work_platform:
                id: fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
                name: Instagram
                logo_url: 'https://insightiq.ai/storage/instagram.png'
              platform_username: rohanano1
              url: 'https://www.instagram.com/rohanano1/'
              image_url: 'https://imgp.sptds.icu/v2?...'
              full_name: FreakingKool
              introduction: '# blow up candles 13 aug...'
              is_verified: false
              platform_account_type: BUSINESS/CREATOR/
              gender: MALE
              age_group: 18-24
              language: en
              follower_count: 1622
              engagement_rate: 0
              location:
                city: Panjim
                state: Goa
                country: India
              contact_details:
                - type: email
                  value: ashtekaryogesh5@gmail.com
          audience_details: null
          metadata:
            offset: 0
            limit: 10
      description: 'Data of followers of a specific social creator. '
      required:
        - id
        - status
      properties:
        id:
          type: string
          example: 21110560-9501-4d85-9654-ed060e040a5e
          description: Unique identifier for the follower
        status:
          type: string
          example: SUCCESS
          description: |-
            Description of the profile. 

            Ex - For Instagram it's the bio and for YouTube it's the channel introduction.
        data:
          type: array
          items:
            type: object
            required:
              - work_platform
              - platform_username
              - url
              - image_url
              - full_name
              - introduction
              - platform_account_type
              - gender
              - age_group
              - location
            properties:
              work_platform:
                $ref: '#/components/schemas/WorkPlatformAttribute'
              platform_username:
                type: string
                description: Username of the follower
              url:
                type: string
                description: Url of the follower's social account
              image_url:
                type: string
              full_name:
                type: string
                description: Profile full name on the platform of the follower
              introduction:
                type: string
                description: Introduction or bio of the follower
              is_verified:
                type: boolean
                description: If the follower is verfied or not
              platform_account_type:
                type: string
                description: 'Account type of the profile, such as `PERSONAL`, `CREATOR`, `BUSINESS`, etc. of the follower'
              gender:
                type: string
                description: Gender of the follower
              age_group:
                type: string
                description: 'Age group of the follower '
              language:
                type: string
                description: '2 letter language code as per ISO 639-1. Checkout this [endpoint](../../../reference/openapi.v1.yml/paths/~1v1~1social~1creators~1dictionary~1languages/get). You may also refer to the "languages" table on this [Airtable base](https://airtable.com/shr00d5XZfQKV778J)'
              follower_count:
                type: integer
                description: Follower count of the follower of a creator
              engagement_rate:
                type: integer
                description: 'Profile engagement rate, i.e., total likes of all posts divided by the number of followers'
              location:
                type: object
                required:
                  - city
                  - state
                  - country
                properties:
                  city:
                    type: string
                    description: City of the follower
                  state:
                    type: string
                    description: State of the follower
                  country:
                    type: string
                    description: Country of the follower
              contact_details:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Type of contact details of the follower
                    value:
                      type: string
                      description: Contact information of the follower
        audience_details:
          nullable: true
        metadata:
          $ref: '#/components/schemas/BasicMetadata'
    AsyncCommentsFetchResponse:
      type: object
      x-examples:
        Example 1:
          id: generated-uuid
          status: SUCCESS
          data:
            - work_platform:
                id: instagram-uuid
                name: Instagram
                logo_url: 'https://insightiq.ai/storage/instagram.png'
              reply_count: 0
              created_time: '2025-02-19T07:49:17'
              id: '18004617014546210'
              like_count: 0
              commenter_id: '4082902524'
              commenter_username: javad.samadi71
              parent_id: '3567773642882331222'
              text: Hey
              timestamp: 1739951357
          metadata:
            offset: 0
            limit: 10
      title: AsyncCommentsFetchResponse
      required:
        - id
        - status
      properties:
        id:
          type: string
          description: InsightIQ's unique job ID for the submitted request
        status:
          enum:
            - IN PROGRESS
            - SUCCESS
            - FAILURE
          description: Status of the submitted job
        data:
          type: array
          items:
            type: object
            required:
              - work_platform
            properties:
              work_platform:
                $ref: '#/components/schemas/WorkPlatformAttribute'
              id:
                type: string
              commenter_id:
                type: string
              commenter_username:
                type: string
                description: Username of the commenter
              reply_count:
                type: integer
                description: Number of replies on the comment
                example: 10
              created_time:
                type: string
                format: time
                description: Time when comment was created
              like_count:
                type: integer
                description: Number of likes on comment
                example: 100
              parent_id:
                type: string
              text:
                type: string
                description: Text in the comment
                example: Hey
              timestamp:
                type: integer
        metadata:
          $ref: '#/components/schemas/BasicMetadata'
    PriceRange:
      title: PriceRange
      x-stoplight:
        id: 7gtztumiyfheu
      type: object
      properties:
        min:
          type: integer
          x-stoplight:
            id: nm97bu316pyip
          example: 2500
        max:
          type: integer
          x-stoplight:
            id: e85bnbm155soh
          example: 6000
    PriceExplanations:
      title: PriceExplanations
      x-stoplight:
        id: czg8m6me4amvo
      type: object
      properties:
        engagement:
          type: object
          x-stoplight:
            id: y44adi5pjz8k2
          description: Engagement rate of a profile
          properties:
            level:
              x-stoplight:
                id: aeob310fvr17k
              description: 'Level of engagement '
              enum:
                - Very High
                - High
                - Medium High
                - Above Average
                - Average
                - Low
            description:
              type: string
              x-stoplight:
                id: zmr11hi9h76m1
              description: Description of the engagement rate
              example: 'Very high engagement rate increases pricing, reflecting strong connection with audience.'
        follower_level:
          type: object
          x-stoplight:
            id: tb52i50n78d1p
          description: Follower count of a profile
          properties:
            level:
              type: string
              x-stoplight:
                id: z3czl21xuojwp
              description: Level of follower count
              example: Celebrity Influencer
            description:
              type: string
              x-stoplight:
                id: jil1fprnf4i61
              description: Description of follower level
              example: Celebrity influencer status commands higher pricing due to widespread fame and global appeal.
        audience_location:
          type: object
          x-stoplight:
            id: mlo36nilug2yi
          description: Location of the audience of a profile
          properties:
            level:
              x-stoplight:
                id: mhgevv8mhk6cn
              description: Level of the location of the audience
              enum:
                - Tier 1
                - Tier 2
                - Tier 3
            description:
              type: string
              x-stoplight:
                id: 1emwwqkf6kzlm
              description: Description of audience location
              example: 'Audience is primarily in Tier 1 countries, where purchasing power and prices are highest.'
        audience_credibility:
          type: object
          x-stoplight:
            id: wlneis6f7r845
          description: Credibility score of a profile
          properties:
            level:
              type: string
              x-stoplight:
                id: uskxbfjai4x08
              description: Level of the credibility score
              example: High
            description:
              type: string
              x-stoplight:
                id: dvt9b0rarwh0w
              description: Description of credibility score
              example: 'High follower credibility score increases pricing, reflecting authenticity of audience.'
      description: Key metrics to explain the price
    CompanyProfileContentResponse:
      type: object
      x-examples:
        Example 1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          status: SUCCESS
          data:
            - work_platform:
                id: 36410629-f907-43ba-aa0d-434ca9c0501a
                name: LinkedIn
                logo_url: 'https://cdn.insightiq.ai/platforms_logo/logos/logo_linkedin.png'
              profile:
                organization_name: The Ken
                platform_username: the-ken
                url: 'https://www.linkedin.com/company/the-ken/'
                external_id: '13185852'
                image_url: 'https://media.licdn.com/dms/image/C4D03AQFbYG0PTUin4w/profile-displayphoto-shrink_800_800/0/1516789978406?e=1720051200&v=beta&t=fQNDKyxGnBG91I6ElkjXNdrDP2ss4H1i59RZ6VKgstQ'
              audio_track_info: null
              platform_content_id: '7190719725088169986'
              title: "These ChatGPT prompts will supercharge your marketing in no time! \U0001F929 \n\nLead Gen \U0001F469‍\U0001F469‍\U0001F467‍\U0001F467 \n\n1. Generate a detailed profile of our ideal customer for [Product/Service], including demographic, psychographic, & behavioral traits to target our marketing efforts.\n\n2. Explain the marketing segments for [INDUSTRY]. Outline the potential opportunities within each segment and recommend which one we should target first.\n\n3."
              format: IMAGE
              type: null
              url: 'https://www.linkedin.com/feed/update/urn:li:share:7190719725088169986/'
              media_urls:
                - 'https://media.licdn.com/dms/image/D5622AQGi9Q33xqoBSw/feedshare-shrink_2048_1536/0/1714401179135?e=1717632000&v=beta&t=lsBlmV6DrXxPzicFcds5DrK2PEh2lECf2HrfTWG3ta0'
              duration: null
              description: null
              thumbnail_url: null
              published_at: '2024-04-29T09:00:00'
              is_reposted: false
              engagement:
                like_count: 100
                applause_count: null
                support_count: 5
                love_count: 15
                interest_count: null
                laugh_count: 10
                comment_count: 20
                view_count: null
                share_count: 20
              collaborators: null
              sponsors: null
              mentions: null
              links: null
              hashtags: null
      description: Data of posts from an organization's LinkedIn page
      title: CompanyProfileContentResponse
      required:
        - id
        - status
      properties:
        id:
          type: string
          description: InsightIQ's unique job ID for the submitted request
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          format: uuid
        status:
          $ref: '#/components/schemas/RequestJobStatus'
        data:
          x-stoplight:
            id: ieegiphwctcnd
          anyOf:
            - $ref: '#/components/schemas/ProfessionalCompanyContentItem'
            - $ref: '#/components/schemas/ProfessionalContentItem'
    RequestJobStatus:
      title: RequestJobStatus
      x-stoplight:
        id: wynsmpg2yj0a3
      enum:
        - IN_PROGRESS
        - PARTIAL_SUCCESS
        - SUCCESS
        - FAILED
        - TIMED_OUT
        - THROTTLED
      description: Status of the requested job
    ProfessionalContentItem:
      title: ProfessionalContentItem
      x-stoplight:
        id: rqf97trir6k5t
      type: object
      required:
        - work_platform
        - engagement
      properties:
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        profile:
          x-stoplight:
            id: m3gfg6aaamhwy
          anyOf:
            - $ref: '#/components/schemas/ProfessionalProfile'
            - $ref: '#/components/schemas/CompanyProfessionalProfile'
        audio_track_info:
          $ref: '#/components/schemas/AudioTrackInfo'
        platform_content_id:
          type: string
          x-stoplight:
            id: h6sr8wxbkt46s
          description: Platform Content Id
        title:
          type: string
          x-stoplight:
            id: qnwq69hn5o0qu
          description: Title on the content
        format:
          $ref: '#/components/schemas/format'
        type:
          $ref: '#/components/schemas/ContentType'
        url:
          type: string
          x-stoplight:
            id: ht5rmz4g1amyk
          description: URL of the content
        media_urls:
          type: array
          x-stoplight:
            id: gxqppi1lv8i64
          items:
            x-stoplight:
              id: hrmh7b12hgcpu
            type: string
        duration:
          type: string
          x-stoplight:
            id: sjl4fqfx1iprw
          description: 'Video content duration in seconds '
        description:
          type: string
          x-stoplight:
            id: 405lp3vkc71ma
          description: |
            Description of the content item
        thumbnail_url:
          type: string
          x-stoplight:
            id: 4keg63nmm6x19
          description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you'
        published_at:
          type: string
          x-stoplight:
            id: 5w7dvbb3wfw5b
          format: date-time
          description: Publishing timestamp of the content item
        is_reposted:
          type: boolean
          x-stoplight:
            id: j83nyjqxz9lyd
          description: 'True, if the post wasn''t made by the profile but was a repost of someone else''s post'
        engagement:
          $ref: '#/components/schemas/ProfessionalContentEngagement'
        collaborators:
          type: array
          x-stoplight:
            id: nido8dms3h5cz
          items:
            $ref: '#/components/schemas/ProfessionalCollaboratorResponse'
        sponsors:
          type: array
          x-stoplight:
            id: kpoykplf2kyxh
          items:
            $ref: '#/components/schemas/ProfessionalSponsorsResponse'
        mentions:
          type: array
          x-stoplight:
            id: 0ho39kn7eialu
          items:
            $ref: '#/components/schemas/ProfessionalMentionResponse'
        links:
          x-stoplight:
            id: 9gphwzan4gcit
          type: object
          description: Links present in the content
          properties:
            link_title:
              type: string
              description: Title of the link. Only for IG stories
            url:
              type: string
              format: uri
              description: URL of the link. Only for IG stories
            display_url:
              type: string
              format: uri
              description: Display url of the link. Only for IG stories
        hashtags:
          type: array
          x-stoplight:
            id: qk87brej0gaw4
          description: Hashtags present in the post description
          items:
            x-stoplight:
              id: 96k3pluxr1as3
            type: string
    ProfessionalProfile:
      type: object
      x-examples:
        Example 2:
          full_name: John
          platform_username: string
          url: 'https://www.linkedin.com/xyz/'
          external_id: 179a0bb4-c572-4477-9457-7dacf1b84848
          image_url: 'http://example.com'
          is_verified: true
      title: ProfessionalProfile
      properties:
        full_name:
          type: string
          description: Display name of the profile
          example: John
        platform_username:
          type: string
          description: Username on the platform
        url:
          type: string
          format: uri
          description: URL of the profile
          example: 'https://www.linkedin.com/xyz/'
        external_id:
          type: string
          format: uuid
          description: Unique identifier of the profile on the platform
          example: 179a0bb4-c572-4477-9457-7dacf1b84848
        image_url:
          type: string
          format: uri
          description: URL of profile image of the organization
        is_verified:
          type: boolean
          description: Is the organization verified or not
    CompanyProfessionalProfile:
      type: object
      x-examples:
        Example 2:
          organization_name: Phyllo
          platform_username: getphyllo
          url: 'https://www.linkedin.com/company/getphyllo/'
          external_id: 179a0bb4-c572-4477-9457-7dacf1b84848
          image_url: string
          is_verified: true
      title: CompanyProfessionalProfile
      properties:
        organization_name:
          type: string
          description: Name of the organization
          example: Phyllo
        platform_username:
          type: string
          description: Username on the platform
          example: getphyllo
        url:
          type: string
          format: uri
          description: URL of the organization
          example: 'https://www.linkedin.com/company/getphyllo/'
        external_id:
          type: string
          format: uri
          description: Unique identifier of the profile on the platform
          example: 179a0bb4-c572-4477-9457-7dacf1b84848
        image_url:
          type: string
          description: URL of profile image of the organization
        is_verified:
          type: boolean
          description: Is the organization verified or not
    ProfessionalCompanyContentItem:
      title: ProfessionalCompanyContentItem
      x-stoplight:
        id: mkzygkynuafq4
      type: object
      required:
        - work_platform
        - engagement
      properties:
        work_platform:
          $ref: '#/components/schemas/WorkPlatformAttribute'
        profile:
          $ref: '#/components/schemas/CompanyProfessionalProfile'
        audio_track_info:
          $ref: '#/components/schemas/AudioTrackInfo'
        platform_content_id:
          type: string
          x-stoplight:
            id: h6sr8wxbkt46s
          description: Platform Content Id
        title:
          type: string
          x-stoplight:
            id: qnwq69hn5o0qu
          description: Title on the content
        format:
          $ref: '#/components/schemas/format'
        type:
          $ref: '#/components/schemas/ContentType'
        url:
          type: string
          x-stoplight:
            id: ht5rmz4g1amyk
          description: URL of the content
        media_urls:
          type: array
          x-stoplight:
            id: gxqppi1lv8i64
          items:
            x-stoplight:
              id: hrmh7b12hgcpu
            type: string
        duration:
          type: string
          x-stoplight:
            id: sjl4fqfx1iprw
          description: 'Video content duration in seconds '
        description:
          type: string
          x-stoplight:
            id: 405lp3vkc71ma
          description: |
            Description of the content item
        thumbnail_url:
          type: string
          x-stoplight:
            id: 4keg63nmm6x19
          description: 'Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you'
        published_at:
          type: string
          x-stoplight:
            id: 5w7dvbb3wfw5b
          format: date-time
          description: Publishing timestamp of the content item
        is_reposted:
          type: boolean
          x-stoplight:
            id: j83nyjqxz9lyd
          description: 'True, if the post wasn''t made by the profile but was a repost of someone else''s post'
        engagement:
          $ref: '#/components/schemas/ProfessionalContentEngagement'
        collaborators:
          type: array
          x-stoplight:
            id: nido8dms3h5cz
          items:
            $ref: '#/components/schemas/ProfessionalCollaboratorResponse'
        sponsors:
          type: array
          x-stoplight:
            id: kpoykplf2kyxh
          items:
            $ref: '#/components/schemas/ProfessionalSponsorsResponse'
        mentions:
          type: array
          x-stoplight:
            id: 0ho39kn7eialu
          items:
            $ref: '#/components/schemas/ProfessionalMentionResponse'
        links:
          x-stoplight:
            id: 9gphwzan4gcit
          type: object
          description: Links present in the content
          properties:
            link_title:
              type: string
              description: Title of the link. Only for IG stories
            url:
              type: string
              format: uri
              description: URL of the link. Only for IG stories
            display_url:
              type: string
              format: uri
              description: Display url of the link. Only for IG stories
        hashtags:
          type: array
          x-stoplight:
            id: qk87brej0gaw4
          description: Hashtags present in the post description
          items:
            x-stoplight:
              id: 96k3pluxr1as3
            type: string
    format:
      x-examples:
        Example 1:
          enum:
            - VIDEO
            - IMAGE
            - AUDIO
            - TEXT
            - COLLECTION
            - OTHER
            - DOCUMENT
            - ARTICLE
            - MEDIA_TYPE_IMAGE
            - MEDIA_TYPE_VIDEO
      enum:
        - VIDEO
        - IMAGE
        - AUDIO
        - TEXT
        - COLLECTION
        - OTHER
        - DOCUMENT
        - ARTICLE
        - MEDIA_TYPE_IMAGE
        - MEDIA_TYPE_VIDEO
      description: Media type of the content item
    ContentType:
      title: ContentType
      x-stoplight:
        id: 9duh054igezig
      enum:
        - IMAGE
        - VIDEO
        - TWEET
        - OTHER
        - REELS
        - STORY
        - BLOG
        - THREAD
        - POST
        - PODCAST
        - TRACK
        - STREAM
        - FEED
        - IGTV
        - SPOTLIGHT
        - SAVED_STORY
        - ARTICLE
        - SHORTS
        - RETWEET
        - REPLY
        - QUOTE
        - STATIC_POST
        - CAROUSEL
      description: Platform specific content type
    ProfessionalContentEngagement:
      title: ProfessionalContentEngagement
      x-stoplight:
        id: 7yngrewk8vkix
      type: object
      properties:
        like_count:
          type: integer
          description: Total likes.
          example: 42134
          nullable: true
        applause_count:
          type: integer
          description: Applause count
          nullable: true
        support_count:
          type: integer
          description: Support count
          nullable: true
        love_count:
          type: integer
          description: Love count
          nullable: true
        interest_count:
          type: integer
          description: Interest count
          nullable: true
        laugh_count:
          type: integer
          description: Laught count
          nullable: true
        comment_count:
          type: integer
          description: Total comments.
          example: 4234
          nullable: true
        view_count:
          type: integer
          description: Total views.
          example: 42343
          nullable: true
        share_count:
          type: integer
          description: Total shares.
          example: 42343
          nullable: true
      description: Engagement metrics of a content
    ProfessionalCollaboratorResponse:
      title: ProfessionalCollaboratorResponse
      x-stoplight:
        id: y0up1kgn0cpnp
      type: object
      properties:
        username:
          type: string
          x-stoplight:
            id: mtjbtt1rfmf54
          description: Collaborator username
        profile_pic_url:
          type: string
          x-stoplight:
            id: tu83o47kkj46m
          format: uri
          description: Collaborator profile image url
        is_verified:
          type: boolean
          x-stoplight:
            id: 0m35npez1i1vh
          description: Collaborator verification status
    ProfessionalSponsorsResponse:
      title: ProfessionalSponsorsResponse
      x-stoplight:
        id: qnj2yxkjiok5b
      type: object
      properties:
        username:
          type: string
          description: Sponsor username
        full_name:
          type: string
          description: Sponsor display name
        profile_pic_url:
          type: string
          format: uri
          description: Sponsor profile image url
        is_verified:
          type: boolean
          description: Sponsor verification status
    ProfessionalMentionResponse:
      title: ProfessionalMentionResponse
      x-stoplight:
        id: lraq9l1fw9mff
      type: object
      properties:
        username:
          type: string
          description: Mentioned profile username
        full_name:
          type: string
          description: Mentioned profile display name
        profile_pic_url:
          type: string
          format: uri
          description: Mentioned profile image url
        is_verified:
          type: boolean
          description: Mentioned profile verification status
      description: ''
  securitySchemes:
    Basic Authentication:
      type: http
      scheme: basic
  parameters:
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        default: 0
        minimum: 0
      description: The number of objects to skip. Use this argument for pagination. The default value is 0.
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
      description: The number of objects to be returned. It can be between 1 to 100. The default value is 10.
    name:
      name: name
      in: query
      required: false
      schema:
        type: string
        example: name
      description: Only return objects with the name provided.
    user_id:
      name: user_id
      in: query
      required: false
      schema:
        type: string
        example: 12ccaf87-66c2-4b8e-9bf0-d0e8705334d1
      description: Unique ID of the user.
    account_id:
      name: account_id
      in: query
      schema:
        type: string
        example: 12ccaf87-66c2-4b8e-9bf0-d0e8705334d1
        format: uuid
      description: Unique ID of the connected account.
    work_platform_id:
      name: work_platform_id
      in: query
      required: false
      schema:
        type: string
        example: 12ccaf87-66c2-4b8e-9bf0-d0e8705334d1
      description: Unique ID of the work platform.
    transaction_from_date:
      name: transaction_from_date
      in: query
      schema:
        type: string
        example: '2021-01-31'
        format: date
      description: Return transactions on or after this date. (YYYY-MM-DD)
      required: true
    transaction_to_date:
      name: transaction_to_date
      in: query
      required: true
      schema:
        type: string
        example: '2021-01-31'
        format: date
      description: Return transactions on or before this date. (YYYY-MM-DD)
    content_from_date:
      name: from_date
      in: query
      required: false
      schema:
        type: string
        format: date
        example: '2021-01-31'
      description: Return content items published on or after this date. (YYYY-MM-DD)
    content_to_date:
      name: to_date
      in: query
      required: false
      schema:
        type: string
        format: date
        example: '2021-01-31'
      description: Return content items published on or before this date. (YYYY-MM-DD)
    comment_from_date:
      name: from_date
      in: query
      required: false
      schema:
        type: string
        format: date
        example: '2021-01-31'
      description: Return comments published on or after this date. (YYYY-MM-DD)
    comment_to_date:
      name: to_date
      in: query
      required: false
      schema:
        type: string
        format: date
        example: '2021-01-31'
      description: Return comments published on or before this date. (YYYY-MM-DD)
    filters:
      name: filters
      in: query
      required: false
      schema:
        type: string
      description: 'Query to filter and search for items in the data set, [see detailed guide here](../../../API/filtering-data)'
    account_id_mandatory:
      name: account_id
      in: query
      required: true
      schema:
        type: string
        format: uuid
      description: Unique ID of the connected account.
    social_transaction_type:
      name: type
      in: query
      required: false
      schema:
        type: string
        enum:
          - AD
          - SUBSCRIPTION
          - ADDITIONAL
      description: Type of transaction on the social platform
    commerce_transaction_type:
      name: type
      in: query
      schema:
        type: string
        enum:
          - SALE
          - REFUND
          - CANCELLED
          - VOID
          - OTHER
      description: Type of transaction on the e-commerce platform
    payout_from_date:
      name: payout_from_date
      in: query
      required: true
      schema:
        type: string
        format: date
      description: Return payouts on or after this date. (YYYY-MM-DD)
    payout_to_date:
      name: payout_to_date
      in: query
      required: true
      schema:
        type: string
        format: date
      description: Return payouts on or before this date. (YYYY-MM-DD)
    balance_from_date:
      name: balance_from_date
      in: query
      required: true
      schema:
        type: string
        format: date
      description: Return daily balances on or after this date. (YYYY-MM-DD)
    balance_to_date:
      name: balance_to_date
      in: query
      required: true
      schema:
        type: string
        format: date
      description: Return daily balances on or before this date. (YYYY-MM-DD)
    content_id_mandatory:
      name: content_id
      in: query
      required: true
      schema:
        type: string
        format: uuid
      description: Unique ID of the content item.
    professional_search_dictionary_identifier:
      name: identifier
      in: query
      required: false
      schema:
        type: string
        example: New York
      description: Use this to search for matching items
  headers:
    request_id:
      required: true
      schema:
        type: string
        format: uuid
      description: Unique ID associated with this request. Please quote this request while requesting support.
security:
  - Basic Authentication: []
