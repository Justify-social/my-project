// AUTO-GENERATED by scripts/generate-preview-pages.ts - DO NOT EDIT MANUALLY!
// Timestamp: 2025-04-09T22:15:17.836Z

import React from 'react';
import Link from 'next/link';
import { cn } from '@/lib/utils';
import { Badge } from '@/components/ui/badge';
// Import Card and its sub-components
import {
  Card,
  CardHeader,
  CardFooter,
  CardTitle,
  CardDescription,
  CardContent,
} from '../../../../../../components/ui/card';
// Also import Button for the footer example
import { Button } from '../../../../../../components/ui/button';

const statusStyles: Record<string, string> = {
  stable: 'bg-green-100 text-green-800 border-green-200',
  beta: 'bg-yellow-100 text-yellow-800 border-yellow-200',
  deprecated: 'bg-red-100 text-red-800 border-red-200',
  development: 'bg-blue-100 text-blue-800 border-blue-200',
};

export default function CardPreviewPage() {
  const componentMeta: {
    name: string;
    description: string;
    category: string;
    subcategory: string | null;
    renderType: string;
    author: string;
    since: string;
    status?: string | null;
  } = {
    name: 'Card',
    description: 'A container for grouping related content and actions.',
    category: 'organism',
    subcategory: null,
    renderType: 'server',
    author: '',
    since: '',
    status: null,
  };
  const examples: string[] = [];

  return (
    <React.Suspense fallback={<div>Loading...</div>}>
      <div className="container mx-auto px-4 py-8">
        {/* Breadcrumbs */}
        <nav aria-label="Breadcrumb" className="mb-6 text-sm text-secondary">
          <ol className="list-none p-0 inline-flex space-x-2">
            <li className="flex items-center">
              <Link href="/debug-tools/ui-components" className="hover:text-Interactive">
                UI Components
              </Link>
            </li>
            <li className="flex items-center">
              <span className="mx-2">/</span>
              <span className="capitalize">{componentMeta.category}</span>
            </li>
            <li className="flex items-center">
              <span className="mx-2">/</span>
              <span className="font-medium text-primary">{componentMeta.name}</span>
            </li>
          </ol>
        </nav>

        {/* Header Section */}
        <div className="mb-8 border-b border-divider pb-4">
          <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between">
            <h1 className="text-3xl font-bold text-primary mb-2 sm:mb-0">{componentMeta.name}</h1>
            <div className="flex items-center space-x-3 text-sm">
              {componentMeta.status && (
                <Badge
                  variant="outline"
                  className={cn(
                    'font-medium',
                    statusStyles[componentMeta.status] || statusStyles.development
                  )}
                >
                  {componentMeta.status}
                </Badge>
              )}
              <span className="text-secondary capitalize">({componentMeta.renderType || 'N/A'})</span>
            </div>
          </div>
          {componentMeta.description && (
            <p className="mt-2 text-secondary max-w-3xl">{componentMeta.description}</p>
          )}
          <div className="mt-3 flex flex-wrap gap-x-6 gap-y-1 text-xs text-muted-foreground">
            {componentMeta.author && <span>Author: {componentMeta.author}</span>}
            {componentMeta.since && <span>Since: {componentMeta.since}</span>}
          </div>
        </div>

        {/* Examples Section (Rendering the actual component) */}
        <div className="mb-8">
          <h2 className="text-xl font-semibold mb-4 text-primary">Examples / Usage</h2>
          <div className="space-y-6">
            {/* Example 1: Simple Card */}
            <div className="border border-divider rounded-lg p-6">
              <h3 className="text-lg font-medium mb-3">Simple Card</h3>
              <Card className="w-[350px]">
                <CardHeader>
                  <CardTitle>Simple Card</CardTitle>
                  <CardDescription>Just basic content inside.</CardDescription>
                </CardHeader>
                <CardContent>
                  <p>This card only uses Header, Title, Description, and Content.</p>
                </CardContent>
              </Card>
            </div>
            {/* Example 2: Full Card */}
            <div className="border border-divider rounded-lg p-6">
              <h3 className="text-lg font-medium mb-3">Full Card Structure</h3>
              <Card className="w-[350px]">
                <CardHeader>
                  <CardTitle>Feature Request</CardTitle>
                  <CardDescription>Suggest a new feature for the platform.</CardDescription>
                </CardHeader>
                <CardContent>
                  <form>
                    <div className="grid w-full items-center gap-4">
                      <div className="flex flex-col space-y-1.5">
                        <label htmlFor="name" className="text-sm font-medium">
                          Name
                        </label>
                        <input
                          id="name"
                          placeholder="Name of your feature"
                          className="border p-2 rounded-md"
                        />
                      </div>
                    </div>
                  </form>
                </CardContent>
                <CardFooter className="flex justify-between">
                  <Button variant="outline">Cancel</Button>
                  <Button>Submit</Button>
                </CardFooter>
              </Card>
            </div>
          </div>
        </div>

        {/* Code Snippets Section */}
        {examples && examples.length > 0 && (
          <div className="mb-8">
            <h2 className="text-xl font-semibold mb-4 text-primary">Code Snippets</h2>
            <div className="space-y-4">
              {examples.map((exampleCode: string, index: number) => (
                <div key={index} className="border border-divider rounded-lg overflow-hidden">
                  <pre className="text-sm p-4 bg-gray-50 text-gray-800 overflow-x-auto">
                    <code>{`${exampleCode}`}</code>
                  </pre>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </React.Suspense>
  );
}
