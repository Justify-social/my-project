/*
===========================================
  TABLE OF CONTENTS
===========================================

1. IMPORTS & VARIABLES (lines 10-28)
   - Font imports
   - Root variables
   - Dark mode settings

2. BASE ELEMENTS & TYPOGRAPHY (lines 29-57)
   - Body styles
   - Headings
   - Links
   - Layout containers


3. RESPONSIVE STYLES (lines 159-220)
   - Desktop & Tablet Landscape (max-width: 1024px)
   - Tablet Portrait (max-width: 768px)
   - Mobile (max-width: 640px)

*/

/* =========================================
   IMPORTS & VARIABLES
   ========================================= */
/* Import fonts from Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Sora:wght@400;700&family=Inter:wght@300;400;500;600;700;800;900&family=Work+Sans:wght@400;500;600;700&display=swap');

/* Font Awesome base styles (since we disabled autoAddCss) */
svg:not(:root).svg-inline--fa,
svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: inline-block;
  /* height: 1em; */
  /* Commented out to prevent conflict with explicit sizing */
  overflow: visible;
  vertical-align: -0.125em;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* --- Brand Color Palette Reference REMOVED - See comments below --- */
    /* --primary-color: #333333; */
    /* Jet */
    /* --secondary-color: #4A5568; */
    /* Payne's Grey */
    /* --accent-color: #00BFFF; */
    /* Deep Sky Blue */
    /* --background-color: #FFFFFF; */
    /* White */
    /* --divider-color: #D1D5DB; */
    /* French Grey */
    /* --interactive-color: #3182CE; */
    /* Medium Blue */
    /* --- End Brand Color Reference --- */

    /* --- Shadcn/Tailwind Theme CSS Variables (Derived from Brand Colors) --- */
    /* --- This section is the EFFECTIVE SSOT for component styling --- */
    --background: 0 0% 100%;
    /* White #FFFFFF */
    --foreground: 0 0% 20%;
    /* Jet #333333 */

    --card: 0 0% 100%;
    /* White */
    --card-foreground: 0 0% 20%;
    /* Jet #333333 */

    --popover: 0 0% 100%;
    /* White */
    --popover-foreground: 0 0% 20%;
    /* Jet #333333 */

    --primary: 0 0% 20%;
    /* Jet #333333 */
    --primary-foreground: 0 0% 100%;
    /* White */

    --secondary: 215 19% 35%;
    /* Payne's Grey #4A5568 */
    --secondary-foreground: 0 0% 100%;
    /* White */

    --muted: 0 0% 96.1%;
    /* Light gray */
    --muted-foreground: 215 16% 47%;
    /* Medium gray */

    --accent: 195 100% 50%;
    /* Deep Sky Blue #00BFFF */
    --accent-foreground: 0 0% 20%;
    /* Jet #333333 */

    --destructive: 0 84% 60%;
    /* Red */
    --destructive-foreground: 0 0% 100%;
    /* White */

    --success: 142 76% 36%;
    /* Green */
    --success-foreground: 0 0% 100%;
    /* White */

    --warning: 38 92% 50%;
    /* Amber */
    --warning-foreground: 0 0% 20%;
    /* Jet #333333 */

    --interactive: 209 70% 50%;
    /* Medium Blue #3182CE */
    --interactive-foreground: 0 0% 100%;
    /* White */

    --border: 215 32% 82%;
    /* Soft gray border */
    --input: 215 32% 82%;
    /* Same as border */
    --ring: 0 0% 20%;
    /* Jet #333333 for focus rings */

    --radius: 0.5rem;
    /* Border radius for components */

    /* Added Footer Height Variable */
    --footer-height: 65px;

    /* Added Layout Dimension Variables */
    --sidebar-width: 16rem;
    /* 256px, equivalent to w-64 */
  }

  .dark {
    --background: 224 47% 10%;
    /* Darker version of primary */
    --foreground: 0 0% 95%;
    /* Off-white */

    --card: 224 47% 10%;
    /* Dark background */
    --card-foreground: 0 0% 95%;
    /* Off-white */

    --popover: 224 47% 10%;
    /* Dark background */
    --popover-foreground: 0 0% 95%;
    /* Off-white */

    --primary: 0 0% 95%;
    /* Off-white as primary in dark mode */
    --primary-foreground: 224 47% 20%;
    /* Original primary */

    --secondary: 215 28% 17%;
    /* Darker version of secondary */
    --secondary-foreground: 0 0% 95%;
    /* Off-white */

    --muted: 215 28% 17%;
    /* Darker muted background */
    --muted-foreground: 215 20% 65%;
    /* Lighter muted text */

    --accent: 195 70% 35%;
    /* Darker accent */
    --accent-foreground: 0 0% 95%;
    /* Off-white */

    --destructive: 0 63% 31%;
    /* Darker red */
    --destructive-foreground: 0 0% 95%;
    /* Off-white */

    --success: 142 76% 25%;
    /* Darker green */
    --success-foreground: 0 0% 95%;
    /* Off-white */

    --warning: 38 92% 40%;
    /* Darker amber */
    --warning-foreground: 0 0% 95%;
    /* Off-white */

    --interactive: 209 70% 40%;
    /* Darker interactive */
    --interactive-foreground: 0 0% 95%;
    /* Off-white */

    --border: 215 28% 17%;
    /* Darker border */
    --input: 215 28% 17%;
    /* Same as border */
    --ring: 215 20% 65%;
    /* Lighter ring for focus */

    /* Added Footer Height Variable (can be same or different) */
    --footer-height: 65px;

    /* Layout Dimensions (can be same or different) */
    --sidebar-width: 16rem;
  }

  /* Base styles for all elements */
  * {
    border-color: hsl(var(--border));
    /* Direct CSS property instead of @apply */
  }

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
}

/* Global form input styling for consistent branding */
input[type='checkbox'],
input[type='radio'] {
  accent-color: var(--secondary-color);
  color: var(--secondary-color);
}

input[type='checkbox']:focus,
input[type='radio']:focus {
  outline-color: hsl(var(--secondary));
  box-shadow: 0 0 0 1px hsl(var(--secondary));
}

/* Force app to use class-based dark mode instead of system preference */
@media (prefers-color-scheme: dark) {
  :root:not(.dark) {
    --background-color: #ffffff;
    /* Keep background white even in dark mode by default */
    --primary-color: var(--primary-color);
    /* Keep text dark for readability on white */
  }
}

/* =========================================
   BASE ELEMENTS & TYPOGRAPHY
   ========================================= */
body {
  background-color: hsl(var(--background));
  min-height: 100vh;
  margin: 0;
  padding: 0;
  color: hsl(var(--foreground));
  font-family: 'Inter', sans-serif !important;
  font-size: 15px;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: 1.6;
}

a {
  color: hsl(var(--accent));
  text-decoration: none;
}

/* This ensures any potential gaps are also the correct background color */
#__next {
  background-color: hsl(var(--background));
}

html {
  background-color: hsl(var(--background));
}

/* Ensure all main containers have correct background */
.min-h-screen,
main {
  background-color: hsl(var(--background));
}

/* =========================================
   SSOT FONT HIERARCHY ENFORCEMENT (MOVED AFTER TAILWIND)
   ========================================= */

/* 
  CLEAN FONT HIERARCHY (SSOT):
  - Sora: h1, h2, h3 ONLY (headings)
  - Inter: EVERYTHING ELSE (sidebar, navigation, body text, buttons)
*/

/* 1. Set Inter as default for all elements */
* {
  font-family: 'Inter', sans-serif !important;
  font-weight: 400;
  letter-spacing: 0.01em;
}

/* 2. Override h1, h2, h3 to use Sora */
h1,
h2,
h3 {
  font-family: 'Sora', sans-serif !important;
}

/* 3. Ensure ALL buttons use Inter (consistent with body text) */
button,
.btn,
[role='button'],
input[type='button'],
input[type='submit'],
input[type='reset'] {
  font-family: 'Inter', sans-serif !important;
}

/* 4. Ensure sidebar uses Inter (override any conflicts) */
[data-cy='main-sidebar'],
[data-cy='main-sidebar'] *:not(button),
[data-cy='sidebar-title'],
[data-cy='main-navigation'],
[data-cy='main-navigation'] *:not(button),
[data-testid='sidebar'],
[data-testid='sidebar'] *:not(button),
aside[data-cy='main-sidebar'] *:not(button),
.bg-muted *:not(button) {
  font-family: 'Inter', sans-serif !important;
}

/* 5. Font utility classes for explicit control */
.font-sora {
  font-family: 'Sora', sans-serif !important;
}

.font-inter {
  font-family: 'Inter', sans-serif !important;
}

/* =========================================
   RESPONSIVE STYLES
   ========================================= */
/* --- Desktop & Tablet Landscape --- */
@media (max-width: 1024px) {
  .survey-preview-container {
    gap: 1rem;
  }

  .creative-preview-wrapper {
    width: 90%;
  }

  .platform-switcher-column {
    width: 90%;
  }

  .survey-content-column {
    width: 90%;
    padding: 1.5rem;
  }
}

/* --- Tablet Portrait --- */
@media (max-width: 768px) {
  .survey-preview-container {
    gap: 0.75rem;
  }

  .creative-preview-wrapper {
    width: 95%;
  }

  .platform-switcher-column {
    width: 95%;
    border-left: none;
  }

  .survey-content-column {
    width: 95%;
    padding: 1.25rem;
  }
}

/* --- Mobile --- */
@media (max-width: 640px) {
  .survey-preview-container {
    flex-direction: column;
  }

  .creative-preview-wrapper {
    width: 100%;
    height: auto;
  }

  .platform-switcher-column {
    width: 100%;
    border-left: none;
  }

  .survey-content-column {
    width: 100%;
    padding: 1rem p-4;
  }
}

/* Add calendar styles for campaign timeline bars */
.calendar-cell {
  min-height: 80px;
  position: relative;
}

/* For responsive design */
@media (max-width: 768px) {
  .calendar-cell {
    min-height: 60px;
  }
}

/* Add shadcn animation styles at the end of the file */
@layer utilities {
  .animate-accordion-down {
    animation: accordion-down 0.2s ease-out;
  }

  .animate-accordion-up {
    animation: accordion-up 0.2s ease-out;
  }
}

/* Custom utility for text-accent to enforce Deep Sky Blue */
.text-accent {
  color: hsl(var(--accent)) !important;
  /* Ensures the accent color is applied */
  color: #00bfff !important;
  /* Fallback to explicit Deep Sky Blue */
}

/* Custom badge styles for campaign statuses */
.badge-draft {
  background-color: hsl(var(--warning)) !important;
  /* Orange for Draft */
  color: hsl(var(--warning-foreground)) !important;
}

.badge-active {
  background-color: hsl(var(--success)) !important;
  /* Green for Active */
  color: hsl(var(--success-foreground)) !important;
}

.badge-ended {
  background-color: hsl(var(--accent)) !important;
  /* Accent Blue for Ended */
  color: hsl(var(--accent-foreground)) !important;
}

/* =========================================
   REACT-HOT-TOAST STYLING (SSOT)
   ========================================= */

/* Add custom border based on className set in layout.tsx toastOptions */
.toast-success-custom {
  @apply bg-green-50 border border-green-200 text-green-700 rounded-md shadow-lg;
}

.toast-error-custom {
  @apply bg-red-50 border border-red-200 text-red-700 rounded-md shadow-lg;
}

.toast-warning-custom {
  @apply bg-orange-50 border border-orange-200 text-orange-700 rounded-md shadow-lg;
}

.toast-delete-custom {
  @apply bg-red-50 border border-red-500 text-red-700 rounded-md shadow-lg;
}

/* Remove default icon styling if custom icons are always used */
/* For react-hot-toast, if you want to hide the default emoji/icon */
.go2072408551 {
  /* This is an example class, inspect your toast elements to find the correct one */
  /* display: none !important; */
}

/* Font hierarchy is now handled above - no conflicting layers needed */

/* =========================================
   NOTIFICATION CENTER STYLES
   ========================================= */

/* Perfect circular notification badge with breathing animation */
[data-cy='notification-badge'] {
  box-shadow: 0 2px 8px rgba(220, 38, 38, 0.4);
  min-width: 20px;
  min-height: 20px;
}

/* Elegant breathing animation for notification badge */
@keyframes notification-breathe {
  0%,
  100% {
    transform: scale(1);
    box-shadow:
      0 2px 8px rgba(220, 38, 38, 0.4),
      0 0 0 0 rgba(239, 68, 68, 0.4);
  }

  50% {
    transform: scale(1.05);
    box-shadow:
      0 4px 12px rgba(220, 38, 38, 0.6),
      0 0 0 4px rgba(239, 68, 68, 0.1);
  }
}

/* Enhanced notification item hover effects */
[data-cy^='notification-item-']:hover {
  transform: translateY(-1px) scale(1.02);
  box-shadow:
    0 8px 25px rgba(0, 0, 0, 0.08),
    0 0 0 1px rgba(59, 130, 246, 0.1);
}

/* Smooth transitions for notification items */
[data-cy^='notification-item-'] {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Enhanced notification dropdown with premium shadow */
[data-cy='notification-center-dropdown'] {
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid rgba(226, 232, 240, 0.6);
  box-shadow:
    0 25px 50px -12px rgba(0, 0, 0, 0.25),
    0 0 0 1px rgba(255, 255, 255, 0.8),
    0 10px 40px rgba(0, 0, 0, 0.1);
}

/* Smooth line clamp for notification messages */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* =========================================
   TOOLTIP MAXIMUM VISIBILITY OVERRIDE
   ========================================= */

/* Ensure tooltips always appear on top */
[data-radix-tooltip-content] {
  z-index: 9999 !important;
  position: fixed !important;
  isolation: isolate !important;
  transform: translateZ(0) !important;
}

/* Override any container that might clip tooltips */
[data-radix-tooltip-trigger] {
  position: relative !important;
  z-index: 100 !important;
}

/* Ensure tooltip portal containers are above everything */
[data-radix-portal] {
  z-index: 9999 !important;
}

/* =========================================
   CLERK OVERFLOW CONTAINMENT FIXES (SSOT)
   ========================================= */

/* 
  MIT Professor-level Clerk Containment Solution
  
  Root Cause: Clerk's internal CSS positioning breaks containment
  Solution: Multi-layered containment strategy with aggressive overrides
  
  Strategy:
  1. CSS Containment API (contain: layout paint style)
  2. Aggressive CSS overrides with !important
  3. Multiple nested containers with overflow handling
  4. Modern overflow: clip for strict clipping
  5. Inline style backup for critical properties
*/

/* Layer 1: Root Clerk Container Containment */
.clerk-auth-container {
  /* Modern CSS Containment API */
  contain: layout paint style !important;
  isolation: isolate !important;

  /* Aggressive Overflow Control */
  overflow: clip !important;
  overflow-x: clip !important;
  overflow-y: clip !important;

  /* Strict Sizing */
  box-sizing: border-box !important;
  width: 100% !important;
  max-width: 100% !important;
  min-width: 0 !important;

  /* Positioning Control */
  position: relative !important;
  z-index: 1 !important;
}

/* Layer 2: Clerk Component Wrapper */
.clerk-container {
  /* Enhanced Containment */
  contain: layout paint style size !important;

  /* Dimension Control */
  width: 100% !important;
  max-width: 100% !important;
  min-width: 0 !important;

  /* Overflow Management */
  overflow: hidden !important;
  overflow-x: hidden !important;
  overflow-y: hidden !important;

  /* Box Model */
  box-sizing: border-box !important;
  position: relative !important;
}

/* Layer 3: All Clerk Child Elements */
.clerk-container *,
.clerk-container [data-clerk-component],
.clerk-container [class*='cl-'] {
  /* Universal Box Model Fix */
  box-sizing: border-box !important;

  /* Prevent Overflow */
  max-width: 100% !important;
  width: auto !important;

  /* Text Handling */
  overflow-wrap: break-word !important;
  word-wrap: break-word !important;

  /* Flexbox Fixes */
  flex-shrink: 1 !important;
  min-width: 0 !important;
}

/* Layer 4: Emergency Containment Layer */
.clerk-emergency-container {
  /* Strictest Containment */
  contain: strict !important;

  /* Absolute Dimension Control */
  width: 100% !important;
  max-width: 100% !important;

  /* Ultimate Overflow Prevention */
  overflow: clip !important;

  /* Isolation */
  position: relative !important;
  isolation: isolate !important;
}

/* Layer 5: Clerk Button and Input Overrides */
.clerk-container button,
.clerk-container input,
.clerk-container [role='button'] {
  /* Prevent Button Overflow */
  max-width: 100% !important;
  word-break: break-word !important;
  overflow-wrap: break-word !important;
}

/* Layer 6: Clerk Modal and Overlay Protection */
.clerk-container [data-clerk-modal],
.clerk-container [class*='cl-modal'],
.clerk-container [class*='cl-card'] {
  /* Modal Containment */
  max-width: 100% !important;
  width: 100% !important;
  overflow: hidden !important;
  box-sizing: border-box !important;
}

/* Critical: Ensure no element can exceed viewport */
* {
  box-sizing: border-box;
}

html,
body {
  overflow-x: hidden;
  max-width: 100vw;
}
