name: Cypress E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          # Add required environment variables for tests
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL || 'postgresql://test:test@localhost:5432/test' }}
          POSTGRES_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL || 'postgresql://test:test@localhost:5432/test' }}

      - name: Wait for application
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          record: true
          parallel: true
          group: 'E2E Tests - Chrome'
          tag: ${{ github.event_name }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Test environment variables
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL || 'postgresql://test:test@localhost:5432/test' }}
          POSTGRES_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL || 'postgresql://test:test@localhost:5432/test' }}

      - name: Generate test report
        if: always()
        run: |
          # Ensure reports directory exists
          mkdir -p config/cypress/reports

          # Check if any JSON reports exist before merging
          if ls config/cypress/reports/*.json 1> /dev/null 2>&1; then
            echo "📊 Merging test reports..."
            npx mochawesome-merge config/cypress/reports/*.json > config/cypress/reports/combined-report.json || echo "⚠️ Failed to merge reports, but continuing..."
            
            # Generate HTML report if merge was successful
            if [ -f "config/cypress/reports/combined-report.json" ]; then
              npx marge config/cypress/reports/combined-report.json --reportDir config/cypress/reports --inline || echo "⚠️ Failed to generate HTML report, but continuing..."
            fi
          else
            echo "ℹ️ No test reports found to merge. This may indicate tests failed to run or no tests were executed."
            # Create empty report for consistency
            echo '{"stats":{"failures":0,"passes":0,"pending":0,"skipped":0,"tests":0},"results":[]}' > config/cypress/reports/combined-report.json
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-results-${{ matrix.containers }}
          path: |
            config/cypress/screenshots
            config/cypress/videos
            config/cypress/reports

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'config/cypress/reports/combined-report.json';
            if (fs.existsSync(path)) {
              const report = JSON.parse(fs.readFileSync(path, 'utf8'));
              const failedTests = report.stats.failures;
              if (failedTests > 0) {
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `❌ Cypress E2E tests failed with ${failedTests} failures. Please check the test results.`
                });
              }
            }
